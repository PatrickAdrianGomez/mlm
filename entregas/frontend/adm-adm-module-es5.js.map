{"version":3,"sources":["node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js","src/app/adm/adm.component.html","src/app/adm/layouts/footer/footer.component.html","src/app/adm/layouts/navbar/navbar.component.html","src/app/adm/layouts/sidebar/sidebar.component.html","src/app/adm/tools/show-errors/show-errors.component.html","src/app/adm/views/agenda-pedido/agenda-pedido.component.html","src/app/adm/views/compra-producto/compra-producto.component.html","src/app/adm/views/configuration/configuration.component.html","src/app/adm/views/descendencia-ficha/descendencia-ficha.component.html","src/app/adm/views/descendencia-list/descendencia-list.component.html","src/app/adm/views/descendencia-profile/descendencia-profile.component.html","src/app/adm/views/ficha-pedido/ficha-pedido.component.html","src/app/adm/views/invitation-list/invitation-list.component.html","src/app/adm/views/invitation/invitation.component.html","src/app/adm/views/lista-agendados/lista-agendados.component.html","src/app/adm/views/main/main.component.html","src/app/adm/views/product-list/product-list.component.html","src/app/adm/views/products-load/products-load.component.html","src/app/adm/views/profile/profile.component.html","src/app/adm/views/staff-list/staff-list.component.html","src/app/modules/toast/toast.component.html","src/app/modules/upload/upload.component.html","src/app/adm/adm-routing.module.ts","src/app/adm/adm.component.css","src/app/adm/adm.component.ts","src/app/adm/adm.module.ts","src/app/adm/layouts/footer/footer.component.css","src/app/adm/layouts/footer/footer.component.ts","src/app/adm/layouts/navbar/navbar.component.css","src/app/adm/layouts/navbar/navbar.component.ts","src/app/adm/layouts/sidebar/sidebar.component.css","src/app/adm/layouts/sidebar/sidebar.component.ts","src/app/adm/tools/show-errors/show-errors.component.css","src/app/adm/tools/show-errors/show-errors.component.ts","src/app/adm/views/agenda-pedido/agenda-pedido.component.css","src/app/adm/views/agenda-pedido/agenda-pedido.component.ts","src/app/adm/views/compra-producto/compra-producto.component.css","src/app/adm/views/compra-producto/compra-producto.component.ts","src/app/adm/views/configuration/configuration.component.css","src/app/adm/views/configuration/configuration.component.ts","src/app/adm/views/descendencia-ficha/descendencia-ficha.component.css","src/app/adm/views/descendencia-ficha/descendencia-ficha.component.ts","src/app/adm/views/descendencia-list/descendencia-list.component.css","src/app/adm/views/descendencia-list/descendencia-list.component.ts","src/app/adm/views/descendencia-profile/descendencia-profile.component.css","src/app/adm/views/descendencia-profile/descendencia-profile.component.ts","src/app/adm/views/ficha-pedido/ficha-pedido.component.css","src/app/adm/views/ficha-pedido/ficha-pedido.component.ts","src/app/adm/views/invitation-list/invitation-list.component.css","src/app/adm/views/invitation-list/invitation-list.component.ts","src/app/adm/views/invitation/invitation.component.css","src/app/adm/views/invitation/invitation.component.ts","src/app/adm/views/lista-agendados/lista-agendados.component.css","src/app/adm/views/lista-agendados/lista-agendados.component.ts","src/app/adm/views/main/main.component.css","src/app/adm/views/main/main.component.ts","src/app/adm/views/product-list/product-list.component.css","src/app/adm/views/product-list/product-list.component.ts","src/app/adm/views/products-load/products-load.component.css","src/app/adm/views/products-load/products-load.component.ts","src/app/adm/views/profile/profile.component.css","src/app/adm/views/profile/profile.component.ts","src/app/adm/views/staff-list/staff-list.component.css","src/app/adm/views/staff-list/staff-list.component.ts","src/app/models/alert.ts","src/app/models/job.ts","src/app/models/person.ts","src/app/modules/modules.module.ts","src/app/modules/toast/toast.component.css","src/app/modules/toast/toast.component.ts","src/app/modules/upload/upload.component.css","src/app/modules/upload/upload.component.ts","src/app/pipes/expedido.pipe.ts","src/app/pipes/nombre.pipe.ts","src/app/services/authentication-storage.service.ts","src/app/services/authentication.service.ts","src/app/services/change-live.service.ts","src/app/services/global.service.ts","src/app/services/toast.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Directive, TemplateRef, EventEmitter, ElementRef, NgZone, HostBinding, Output, Input, Renderer2, HostListener, KeyValueDiffers, ContentChildren, Component, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, ViewChild, ViewEncapsulation, SkipSelf, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass ScrollbarHelper {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this.document = document;\n        this.width = this.getWidth();\n    }\n    /**\n     * @return {?}\n     */\n    getWidth() {\n        /** @type {?} */\n        const outer = this.document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.width = '100px';\n        outer.style.msOverflowStyle = 'scrollbar';\n        this.document.body.appendChild(outer);\n        /** @type {?} */\n        const widthNoScroll = outer.offsetWidth;\n        outer.style.overflow = 'scroll';\n        /** @type {?} */\n        const inner = this.document.createElement('div');\n        inner.style.width = '100%';\n        outer.appendChild(inner);\n        /** @type {?} */\n        const widthWithScroll = inner.offsetWidth;\n        outer.parentNode.removeChild(outer);\n        return widthNoScroll - widthWithScroll;\n    }\n}\nScrollbarHelper.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nScrollbarHelper.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /** @type {?} */\n    ScrollbarHelper.prototype.width;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollbarHelper.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass DimensionsHelper {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    getDimensions(element) {\n        return element.getBoundingClientRect();\n    }\n}\nDimensionsHelper.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\nclass ColumnChangesService {\n    constructor() {\n        this.columnInputChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    get columnInputChanges$() {\n        return this.columnInputChanges.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    onInputChange() {\n        this.columnInputChanges.next();\n    }\n}\nColumnChangesService.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ColumnChangesService.prototype.columnInputChanges;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableFooterTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-footer-template]' },] }\n];\n/** @nocollapse */\nDataTableFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableFooterTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nclass VisibilityDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.runCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this.timeout);\n    }\n    /**\n     * @return {?}\n     */\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    runCheck() {\n        /** @type {?} */\n        const check = (/**\n         * @return {?}\n         */\n        () => {\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.timeout = setTimeout((/**\n                     * @return {?}\n                     */\n                    () => check()), 50);\n                }));\n            }\n        });\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        () => check()));\n    }\n}\nVisibilityDirective.decorators = [\n    { type: Directive, args: [{ selector: '[visibilityObserver]' },] }\n];\n/** @nocollapse */\nVisibilityDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nVisibilityDirective.propDecorators = {\n    isVisible: [{ type: HostBinding, args: ['class.visible',] }],\n    visible: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    VisibilityDirective.prototype.isVisible;\n    /** @type {?} */\n    VisibilityDirective.prototype.visible;\n    /** @type {?} */\n    VisibilityDirective.prototype.timeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.zone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nclass DraggableDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.dragX = true;\n        this.dragY = true;\n        this.dragStart = new EventEmitter();\n        this.dragging = new EventEmitter();\n        this.dragEnd = new EventEmitter();\n        this.isDragging = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n            this.onMousedown(changes['dragEventTarget'].currentValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseup(event) {\n        if (!this.isDragging)\n            return;\n        this.isDragging = false;\n        this.element.classList.remove('dragging');\n        if (this.subscription) {\n            this._destroySubscription();\n            this.dragEnd.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n        // we only want to drag the inner header text\n        /** @type {?} */\n        const isDragElm = ((/** @type {?} */ (event.target))).classList.contains('draggable');\n        if (isDragElm && (this.dragX || this.dragY)) {\n            event.preventDefault();\n            this.isDragging = true;\n            /** @type {?} */\n            const mouseDownPos = { x: event.clientX, y: event.clientY };\n            /** @type {?} */\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.onMouseup(ev)));\n            /** @type {?} */\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.move(ev, mouseDownPos)));\n            this.subscription.add(mouseMoveSub);\n            this.dragStart.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} mouseDownPos\n     * @return {?}\n     */\n    move(event, mouseDownPos) {\n        if (!this.isDragging)\n            return;\n        /** @type {?} */\n        const x = event.clientX - mouseDownPos.x;\n        /** @type {?} */\n        const y = event.clientY - mouseDownPos.y;\n        if (this.dragX)\n            this.element.style.left = `${x}px`;\n        if (this.dragY)\n            this.element.style.top = `${y}px`;\n        this.element.classList.add('dragging');\n        this.dragging.emit({\n            event,\n            element: this.element,\n            model: this.dragModel\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nDraggableDirective.decorators = [\n    { type: Directive, args: [{ selector: '[draggable]' },] }\n];\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nDraggableDirective.propDecorators = {\n    dragEventTarget: [{ type: Input }],\n    dragModel: [{ type: Input }],\n    dragX: [{ type: Input }],\n    dragY: [{ type: Input }],\n    dragStart: [{ type: Output }],\n    dragging: [{ type: Output }],\n    dragEnd: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DraggableDirective.prototype.dragEventTarget;\n    /** @type {?} */\n    DraggableDirective.prototype.dragModel;\n    /** @type {?} */\n    DraggableDirective.prototype.dragX;\n    /** @type {?} */\n    DraggableDirective.prototype.dragY;\n    /** @type {?} */\n    DraggableDirective.prototype.dragStart;\n    /** @type {?} */\n    DraggableDirective.prototype.dragging;\n    /** @type {?} */\n    DraggableDirective.prototype.dragEnd;\n    /** @type {?} */\n    DraggableDirective.prototype.element;\n    /** @type {?} */\n    DraggableDirective.prototype.isDragging;\n    /** @type {?} */\n    DraggableDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/** @type {?} */\nconst MouseEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .MouseEvent));\n/** @type {?} */\nconst KeyboardEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .KeyboardEvent));\n/** @type {?} */\nconst Event = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global)))).Event));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ResizeableDirective {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this.renderer = renderer;\n        this.resizeEnabled = true;\n        this.resize = new EventEmitter();\n        this.resizing = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const renderer2 = this.renderer;\n        /** @type {?} */\n        const node = renderer2.createElement('span');\n        if (this.resizeEnabled) {\n            renderer2.addClass(node, 'resize-handle');\n        }\n        else {\n            renderer2.addClass(node, 'resize-handle--not-resizable');\n        }\n        renderer2.appendChild(this.element, node);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @return {?}\n     */\n    onMouseup() {\n        this.resizing = false;\n        if (this.subscription && !this.subscription.closed) {\n            this._destroySubscription();\n            this.resize.emit(this.element.clientWidth);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n        /** @type {?} */\n        const isHandle = ((/** @type {?} */ (event.target))).classList.contains('resize-handle');\n        /** @type {?} */\n        const initialWidth = this.element.clientWidth;\n        /** @type {?} */\n        const mouseDownScreenX = event.screenX;\n        if (isHandle) {\n            event.stopPropagation();\n            this.resizing = true;\n            /** @type {?} */\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.onMouseup()));\n            /** @type {?} */\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this.move(e, initialWidth, mouseDownScreenX)));\n            this.subscription.add(mouseMoveSub);\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} initialWidth\n     * @param {?} mouseDownScreenX\n     * @return {?}\n     */\n    move(event, initialWidth, mouseDownScreenX) {\n        /** @type {?} */\n        const movementX = event.screenX - mouseDownScreenX;\n        /** @type {?} */\n        const newWidth = initialWidth + movementX;\n        /** @type {?} */\n        const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n        /** @type {?} */\n        const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n        if (overMinWidth && underMaxWidth) {\n            this.element.style.width = `${newWidth}px`;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nResizeableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[resizeable]',\n                host: {\n                    '[class.resizeable]': 'resizeEnabled'\n                }\n            },] }\n];\n/** @nocollapse */\nResizeableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nResizeableDirective.propDecorators = {\n    resizeEnabled: [{ type: Input }],\n    minWidth: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    resize: [{ type: Output }],\n    onMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    ResizeableDirective.prototype.resizeEnabled;\n    /** @type {?} */\n    ResizeableDirective.prototype.minWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.maxWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.resize;\n    /** @type {?} */\n    ResizeableDirective.prototype.element;\n    /** @type {?} */\n    ResizeableDirective.prototype.subscription;\n    /** @type {?} */\n    ResizeableDirective.prototype.resizing;\n    /**\n     * @type {?}\n     * @private\n     */\n    ResizeableDirective.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OrderableDirective {\n    /**\n     * @param {?} differs\n     * @param {?} document\n     */\n    constructor(differs, document) {\n        this.document = document;\n        this.reorder = new EventEmitter();\n        this.targetChanged = new EventEmitter();\n        this.differ = differs.find({}).create();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // HACK: Investigate Better Way\n        this.updateSubscriptions();\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.draggables.forEach((/**\n         * @param {?} d\n         * @return {?}\n         */\n        d => {\n            d.dragStart.unsubscribe();\n            d.dragging.unsubscribe();\n            d.dragEnd.unsubscribe();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    updateSubscriptions() {\n        /** @type {?} */\n        const diffs = this.differ.diff(this.createMapDiffs());\n        if (diffs) {\n            /** @type {?} */\n            const subscribe = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ currentValue, previousValue }) => {\n                unsubscribe({ previousValue });\n                if (currentValue) {\n                    currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n                    currentValue.dragging.subscribe(this.onDragging.bind(this));\n                    currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n                }\n            });\n            /** @type {?} */\n            const unsubscribe = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ previousValue }) => {\n                if (previousValue) {\n                    previousValue.dragStart.unsubscribe();\n                    previousValue.dragging.unsubscribe();\n                    previousValue.dragEnd.unsubscribe();\n                }\n            });\n            diffs.forEachAddedItem(subscribe);\n            // diffs.forEachChangedItem(subscribe.bind(this));\n            diffs.forEachRemovedItem(unsubscribe);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onDragStart() {\n        this.positions = {};\n        /** @type {?} */\n        let i = 0;\n        for (const dragger of this.draggables.toArray()) {\n            /** @type {?} */\n            const elm = dragger.element;\n            /** @type {?} */\n            const left = parseInt(elm.offsetLeft.toString(), 0);\n            this.positions[dragger.dragModel.prop] = {\n                left,\n                right: left + parseInt(elm.offsetWidth.toString(), 0),\n                index: i++,\n                element: elm\n            };\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onDragging({ element, model, event }) {\n        /** @type {?} */\n        const prevPos = this.positions[model.prop];\n        /** @type {?} */\n        const target = this.isTarget(model, event);\n        if (target) {\n            if (this.lastDraggingIndex !== target.i) {\n                this.targetChanged.emit({\n                    prevIndex: this.lastDraggingIndex,\n                    newIndex: target.i,\n                    initialIndex: prevPos.index\n                });\n                this.lastDraggingIndex = target.i;\n            }\n        }\n        else if (this.lastDraggingIndex !== prevPos.index) {\n            this.targetChanged.emit({\n                prevIndex: this.lastDraggingIndex,\n                initialIndex: prevPos.index\n            });\n            this.lastDraggingIndex = prevPos.index;\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onDragEnd({ element, model, event }) {\n        /** @type {?} */\n        const prevPos = this.positions[model.prop];\n        /** @type {?} */\n        const target = this.isTarget(model, event);\n        if (target) {\n            this.reorder.emit({\n                prevIndex: prevPos.index,\n                newIndex: target.i,\n                model\n            });\n        }\n        this.lastDraggingIndex = undefined;\n        element.style.left = 'auto';\n    }\n    /**\n     * @param {?} model\n     * @param {?} event\n     * @return {?}\n     */\n    isTarget(model, event) {\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        const x = event.x || event.clientX;\n        /** @type {?} */\n        const y = event.y || event.clientY;\n        /** @type {?} */\n        const targets = this.document.elementsFromPoint(x, y);\n        for (const prop in this.positions) {\n            // current column position which throws event.\n            /** @type {?} */\n            const pos = this.positions[prop];\n            // since we drag the inner span, we need to find it in the elements at the cursor\n            if (model.prop !== prop && targets.find((/**\n             * @param {?} el\n             * @return {?}\n             */\n            (el) => el === pos.element))) {\n                return {\n                    pos,\n                    i\n                };\n            }\n            i++;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    createMapDiffs() {\n        return this.draggables.toArray().reduce((/**\n         * @param {?} acc\n         * @param {?} curr\n         * @return {?}\n         */\n        (acc, curr) => {\n            acc[curr.dragModel.$$id] = curr;\n            return acc;\n        }), {});\n    }\n}\nOrderableDirective.decorators = [\n    { type: Directive, args: [{ selector: '[orderable]' },] }\n];\n/** @nocollapse */\nOrderableDirective.ctorParameters = () => [\n    { type: KeyValueDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nOrderableDirective.propDecorators = {\n    reorder: [{ type: Output }],\n    targetChanged: [{ type: Output }],\n    draggables: [{ type: ContentChildren, args: [DraggableDirective, { descendants: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    OrderableDirective.prototype.reorder;\n    /** @type {?} */\n    OrderableDirective.prototype.targetChanged;\n    /** @type {?} */\n    OrderableDirective.prototype.draggables;\n    /** @type {?} */\n    OrderableDirective.prototype.positions;\n    /** @type {?} */\n    OrderableDirective.prototype.differ;\n    /** @type {?} */\n    OrderableDirective.prototype.lastDraggingIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    OrderableDirective.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LongPressDirective {\n    constructor() {\n        this.pressEnabled = true;\n        this.duration = 500;\n        this.longPressStart = new EventEmitter();\n        this.longPressing = new EventEmitter();\n        this.longPressEnd = new EventEmitter();\n        this.mouseX = 0;\n        this.mouseY = 0;\n    }\n    /**\n     * @return {?}\n     */\n    get press() {\n        return this.pressing;\n    }\n    /**\n     * @return {?}\n     */\n    get isLongPress() {\n        return this.isLongPressing;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        // don't do right/middle clicks\n        if (event.which !== 1 || !this.pressEnabled)\n            return;\n        // don't start drag if its on resize handle\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        if (target.classList.contains('resize-handle'))\n            return;\n        this.mouseX = event.clientX;\n        this.mouseY = event.clientY;\n        this.pressing = true;\n        this.isLongPressing = false;\n        /** @type {?} */\n        const mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.onMouseup()));\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isLongPressing = true;\n            this.longPressStart.emit({\n                event,\n                model: this.pressModel\n            });\n            this.subscription.add(fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} mouseEvent\n             * @return {?}\n             */\n            (mouseEvent) => this.onMouseMove(mouseEvent))));\n            this.loop(event);\n        }), this.duration);\n        this.loop(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseMove(event) {\n        if (this.pressing && !this.isLongPressing) {\n            /** @type {?} */\n            const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n            /** @type {?} */\n            const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n            if (xThres || yThres) {\n                this.endPress();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    loop(event) {\n        if (this.isLongPressing) {\n            this.timeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.longPressing.emit({\n                    event,\n                    model: this.pressModel\n                });\n                this.loop(event);\n            }), 50);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    endPress() {\n        clearTimeout(this.timeout);\n        this.isLongPressing = false;\n        this.pressing = false;\n        this._destroySubscription();\n        this.longPressEnd.emit({\n            model: this.pressModel\n        });\n    }\n    /**\n     * @return {?}\n     */\n    onMouseup() {\n        this.endPress();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nLongPressDirective.decorators = [\n    { type: Directive, args: [{ selector: '[long-press]' },] }\n];\nLongPressDirective.propDecorators = {\n    pressEnabled: [{ type: Input }],\n    pressModel: [{ type: Input }],\n    duration: [{ type: Input }],\n    longPressStart: [{ type: Output }],\n    longPressing: [{ type: Output }],\n    longPressEnd: [{ type: Output }],\n    press: [{ type: HostBinding, args: ['class.press',] }],\n    isLongPress: [{ type: HostBinding, args: ['class.longpress',] }],\n    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    LongPressDirective.prototype.pressEnabled;\n    /** @type {?} */\n    LongPressDirective.prototype.pressModel;\n    /** @type {?} */\n    LongPressDirective.prototype.duration;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressStart;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressEnd;\n    /** @type {?} */\n    LongPressDirective.prototype.pressing;\n    /** @type {?} */\n    LongPressDirective.prototype.isLongPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.timeout;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseX;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseY;\n    /** @type {?} */\n    LongPressDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollerComponent {\n    /**\n     * @param {?} ngZone\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(ngZone, element, renderer) {\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollbarV = false;\n        this.scrollbarH = false;\n        this.scroll = new EventEmitter();\n        this.scrollYPos = 0;\n        this.scrollXPos = 0;\n        this.prevScrollYPos = 0;\n        this.prevScrollXPos = 0;\n        this._scrollEventListener = null;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // manual bind so we don't always listen\n        if (this.scrollbarV || this.scrollbarH) {\n            /** @type {?} */\n            const renderer = this.renderer;\n            this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n            this._scrollEventListener = this.onScrolled.bind(this);\n            this.parentElement.addEventListener('scroll', this._scrollEventListener);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._scrollEventListener) {\n            this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n            this._scrollEventListener = null;\n        }\n    }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    setOffset(offsetY) {\n        if (this.parentElement) {\n            this.parentElement.scrollTop = offsetY;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onScrolled(event) {\n        /** @type {?} */\n        const dom = (/** @type {?} */ (event.currentTarget));\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        () => {\n            this.scrollYPos = dom.scrollTop;\n            this.scrollXPos = dom.scrollLeft;\n            this.updateOffset();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    updateOffset() {\n        /** @type {?} */\n        let direction;\n        if (this.scrollYPos < this.prevScrollYPos) {\n            direction = 'down';\n        }\n        else if (this.scrollYPos > this.prevScrollYPos) {\n            direction = 'up';\n        }\n        this.scroll.emit({\n            direction,\n            scrollYPos: this.scrollYPos,\n            scrollXPos: this.scrollXPos\n        });\n        this.prevScrollYPos = this.scrollYPos;\n        this.prevScrollXPos = this.scrollXPos;\n    }\n}\nScrollerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-scroller',\n                template: `\n    <ng-content></ng-content>\n  `,\n                host: {\n                    class: 'datatable-scroll'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nScrollerComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nScrollerComponent.propDecorators = {\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    scrollHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    scrollWidth: [{ type: HostBinding, args: ['style.width.px',] }, { type: Input }],\n    scroll: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarV;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarH;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollHeight;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollWidth;\n    /** @type {?} */\n    ScrollerComponent.prototype.scroll;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.element;\n    /** @type {?} */\n    ScrollerComponent.prototype.parentElement;\n    /** @type {?} */\n    ScrollerComponent.prototype.onScrollListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype._scrollEventListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableGroupHeaderTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableGroupHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngx-datatable-group-header-template]'\n            },] }\n];\n/** @nocollapse */\nDatatableGroupHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DatatableGroupHeaderTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableGroupHeaderDirective {\n    constructor() {\n        /**\n         * Row height is required when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Track toggling of group visibility\n         */\n        this.toggle = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of a group\n     * @param {?} group\n     * @return {?}\n     */\n    toggleExpandGroup(group) {\n        this.toggle.emit({\n            type: 'group',\n            value: group\n        });\n    }\n    /**\n     * Expand all groups\n     * @return {?}\n     */\n    expandAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * Collapse all groups\n     * @return {?}\n     */\n    collapseAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableGroupHeaderDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-group-header' },] }\n];\nDatatableGroupHeaderDirective.propDecorators = {\n    rowHeight: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true },] }],\n    toggle: [{ type: Output }]\n};\nif (false) {\n    /**\n     * Row height is required when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateQuery;\n    /**\n     * Track toggling of group visibility\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Always returns the empty string ''\n * @return {?}\n */\nfunction emptyStringGetter() {\n    return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n * @param {?} prop\n * @return {?}\n */\nfunction getterForProp(prop) {\n    if (prop == null) {\n        return emptyStringGetter;\n    }\n    if (typeof prop === 'number') {\n        return numericIndexGetter;\n    }\n    else {\n        // deep or simple\n        if (prop.indexOf('.') !== -1) {\n            return deepValueGetter;\n        }\n        else {\n            return shallowValueGetter;\n        }\n    }\n}\n/**\n * Returns the value at this numeric index.\n * @param {?} row array of values\n * @param {?} index numeric index\n * @return {?} any or '' if invalid index\n */\nfunction numericIndexGetter(row, index) {\n    if (row == null) {\n        return '';\n    }\n    // mimic behavior of deepValueGetter\n    if (!row || index == null) {\n        return row;\n    }\n    /** @type {?} */\n    const value = row[index];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param {?} obj object containing the field\n * @param {?} fieldName field name string\n * @return {?}\n */\nfunction shallowValueGetter(obj, fieldName) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !fieldName) {\n        return obj;\n    }\n    /** @type {?} */\n    const value = obj[fieldName];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {?} obj\n * @param {?} path\n * @return {?}\n */\nfunction deepValueGetter(obj, path) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !path) {\n        return obj;\n    }\n    // check if path matches a root-level field\n    // { \"a.b.c\": 123 }\n    /** @type {?} */\n    let current = obj[path];\n    if (current !== undefined) {\n        return current;\n    }\n    current = obj;\n    /** @type {?} */\n    const split = path.split('.');\n    if (split.length) {\n        for (let i = 0; i < split.length; i++) {\n            current = current[split[i]];\n            // if found undefined, return empty string\n            if (current === undefined || current === null) {\n                return '';\n            }\n        }\n    }\n    return current;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction optionalGetterForProp(prop) {\n    return prop && ((/**\n     * @param {?} row\n     * @return {?}\n     */\n    row => getterForProp(prop)(row, prop)));\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param {?} rows\n *\n * @param {?=} from\n * @param {?=} to\n * @return {?}\n */\nfunction groupRowsByParents(rows, from, to) {\n    if (from && to) {\n        /** @type {?} */\n        const nodeById = {};\n        /** @type {?} */\n        const l = rows.length;\n        /** @type {?} */\n        let node = null;\n        nodeById[0] = new TreeNode(); // that's the root node\n        // that's the root node\n        /** @type {?} */\n        const uniqIDs = rows.reduce((/**\n         * @param {?} arr\n         * @param {?} item\n         * @return {?}\n         */\n        (arr, item) => {\n            /** @type {?} */\n            const toValue = to(item);\n            if (arr.indexOf(toValue) === -1) {\n                arr.push(toValue);\n            }\n            return arr;\n        }), []);\n        for (let i = 0; i < l; i++) {\n            // make TreeNode objects for each item\n            nodeById[to(rows[i])] = new TreeNode(rows[i]);\n        }\n        for (let i = 0; i < l; i++) {\n            // link all TreeNode objects\n            node = nodeById[to(rows[i])];\n            /** @type {?} */\n            let parent = 0;\n            /** @type {?} */\n            const fromValue = from(node.row);\n            if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n                parent = fromValue;\n            }\n            node.parent = nodeById[parent];\n            node.row['level'] = node.parent.row['level'] + 1;\n            node.parent.children.push(node);\n        }\n        /** @type {?} */\n        let resolvedRows = [];\n        nodeById[0].flatten((/**\n         * @return {?}\n         */\n        function () {\n            resolvedRows = [...resolvedRows, this.row];\n        }), true);\n        return resolvedRows;\n    }\n    else {\n        return rows;\n    }\n}\nclass TreeNode {\n    /**\n     * @param {?=} row\n     */\n    constructor(row = null) {\n        if (!row) {\n            row = {\n                level: -1,\n                treeStatus: 'expanded'\n            };\n        }\n        this.row = row;\n        this.parent = null;\n        this.children = [];\n    }\n    /**\n     * @param {?} f\n     * @param {?} recursive\n     * @return {?}\n     */\n    flatten(f, recursive) {\n        if (this.row['treeStatus'] === 'expanded') {\n            for (let i = 0, l = this.children.length; i < l; i++) {\n                /** @type {?} */\n                const child = this.children[i];\n                f.apply(child, Array.prototype.slice.call(arguments, 2));\n                if (recursive)\n                    child.flatten.apply(child, arguments);\n            }\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    TreeNode.prototype.row;\n    /** @type {?} */\n    TreeNode.prototype.parent;\n    /** @type {?} */\n    TreeNode.prototype.children;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param {?} str\n * @return {?}\n */\nfunction camelCase(str) {\n    // Replace special characters with a space\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n    // put a space before an uppercase letter\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n    // Lower case first character and some other stuff\n    str = str\n        .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n        .trim()\n        .toLowerCase();\n    // uppercase characters preceded by a space or number\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, (/**\n     * @param {?} a\n     * @param {?} b\n     * @param {?} c\n     * @return {?}\n     */\n    function (a, b, c) {\n        return b.trim() + c.toUpperCase();\n    }));\n    return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n * @param {?} str\n * @return {?}\n */\nfunction deCamelCase(str) {\n    return str.replace(/([A-Z])/g, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    match => ` ${match}`)).replace(/^./, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    match => match.toUpperCase()));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n * @return {?}\n */\nfunction id() {\n    return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sets the column defaults\n * @param {?} columns\n * @return {?}\n */\nfunction setColumnDefaults(columns) {\n    if (!columns)\n        return;\n    // Only one column should hold the tree view\n    // Thus if multiple columns are provided with\n    // isTreeColumn as true we take only the first one\n    /** @type {?} */\n    let treeColumnFound = false;\n    for (const column of columns) {\n        if (!column.$$id) {\n            column.$$id = id();\n        }\n        // prop can be numeric; zero is valid not a missing prop\n        // translate name => prop\n        if (isNullOrUndefined(column.prop) && column.name) {\n            column.prop = camelCase(column.name);\n        }\n        if (!column.$$valueGetter) {\n            column.$$valueGetter = getterForProp(column.prop);\n        }\n        // format props if no name passed\n        if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = deCamelCase(String(column.prop));\n        }\n        if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = ''; // Fixes IE and Edge displaying `null`\n        }\n        if (!column.hasOwnProperty('resizeable')) {\n            column.resizeable = true;\n        }\n        if (!column.hasOwnProperty('sortable')) {\n            column.sortable = true;\n        }\n        if (!column.hasOwnProperty('draggable')) {\n            column.draggable = true;\n        }\n        if (!column.hasOwnProperty('canAutoResize')) {\n            column.canAutoResize = true;\n        }\n        if (!column.hasOwnProperty('width')) {\n            column.width = 150;\n        }\n        if (!column.hasOwnProperty('isTreeColumn')) {\n            column.isTreeColumn = false;\n        }\n        else {\n            if (column.isTreeColumn && !treeColumnFound) {\n                // If the first column with isTreeColumn is true found\n                // we mark that treeCoulmn is found\n                treeColumnFound = true;\n            }\n            else {\n                // After that isTreeColumn property for any other column\n                // will be set as false\n                column.isTreeColumn = false;\n            }\n        }\n    }\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n * @param {?} templates\n * @return {?}\n */\nfunction translateTemplates(templates) {\n    /** @type {?} */\n    const result = [];\n    for (const temp of templates) {\n        /** @type {?} */\n        const col = {};\n        /** @type {?} */\n        const props = Object.getOwnPropertyNames(temp);\n        for (const prop of props) {\n            col[prop] = temp[prop];\n        }\n        if (temp.headerTemplate) {\n            col.headerTemplate = temp.headerTemplate;\n        }\n        if (temp.cellTemplate) {\n            col.cellTemplate = temp.cellTemplate;\n        }\n        if (temp.summaryFunc) {\n            col.summaryFunc = temp.summaryFunc;\n        }\n        if (temp.summaryTemplate) {\n            col.summaryTemplate = temp.summaryTemplate;\n        }\n        result.push(col);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ColumnMode = {\n    standard: 'standard',\n    flex: 'flex',\n    force: 'force',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SelectionType = {\n    single: 'single',\n    multi: 'multi',\n    multiClick: 'multiClick',\n    cell: 'cell',\n    checkbox: 'checkbox',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SortType = {\n    single: 'single',\n    multi: 'multi',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ContextmenuType = {\n    header: 'header',\n    body: 'body',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnHeaderDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnHeaderDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-header-template]' },] }\n];\n/** @nocollapse */\nDataTableColumnHeaderDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnHeaderDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnCellDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-cell-template]' },] }\n];\n/** @nocollapse */\nDataTableColumnCellDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnCellTreeToggle {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellTreeToggle.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-tree-toggle]' },] }\n];\n/** @nocollapse */\nDataTableColumnCellTreeToggle.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellTreeToggle.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnDirective {\n    /**\n     * @param {?} columnChangesService\n     */\n    constructor(columnChangesService) {\n        this.columnChangesService = columnChangesService;\n        this.isFirstChange = true;\n    }\n    /**\n     * @return {?}\n     */\n    get cellTemplate() {\n        return this._cellTemplateInput || this._cellTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    get headerTemplate() {\n        return this._headerTemplateInput || this._headerTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    get treeToggleTemplate() {\n        return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.isFirstChange) {\n            this.isFirstChange = false;\n        }\n        else {\n            this.columnChangesService.onInputChange();\n        }\n    }\n}\nDataTableColumnDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-column' },] }\n];\n/** @nocollapse */\nDataTableColumnDirective.ctorParameters = () => [\n    { type: ColumnChangesService }\n];\nDataTableColumnDirective.propDecorators = {\n    name: [{ type: Input }],\n    prop: [{ type: Input }],\n    frozenLeft: [{ type: Input }],\n    frozenRight: [{ type: Input }],\n    flexGrow: [{ type: Input }],\n    resizeable: [{ type: Input }],\n    comparator: [{ type: Input }],\n    pipe: [{ type: Input }],\n    sortable: [{ type: Input }],\n    draggable: [{ type: Input }],\n    canAutoResize: [{ type: Input }],\n    minWidth: [{ type: Input }],\n    width: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    checkboxable: [{ type: Input }],\n    headerCheckboxable: [{ type: Input }],\n    headerClass: [{ type: Input }],\n    cellClass: [{ type: Input }],\n    isTreeColumn: [{ type: Input }],\n    treeLevelIndent: [{ type: Input }],\n    summaryFunc: [{ type: Input }],\n    summaryTemplate: [{ type: Input }],\n    _cellTemplateInput: [{ type: Input, args: ['cellTemplate',] }],\n    _cellTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellDirective, { read: TemplateRef, static: true },] }],\n    _headerTemplateInput: [{ type: Input, args: ['headerTemplate',] }],\n    _headerTemplateQuery: [{ type: ContentChild, args: [DataTableColumnHeaderDirective, { read: TemplateRef, static: true },] }],\n    _treeToggleTemplateInput: [{ type: Input, args: ['treeToggleTemplate',] }],\n    _treeToggleTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellTreeToggle, { read: TemplateRef, static: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableColumnDirective.prototype.name;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.prop;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenLeft;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenRight;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.flexGrow;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.resizeable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.comparator;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.pipe;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.sortable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.draggable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.canAutoResize;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.minWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.width;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.maxWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.checkboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerCheckboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.cellClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.isTreeColumn;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.treeLevelIndent;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryFunc;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryTemplate;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateQuery;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.isFirstChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.columnChangesService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableRowDetailTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableRowDetailTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngx-datatable-row-detail-template]'\n            },] }\n];\n/** @nocollapse */\nDatatableRowDetailTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DatatableRowDetailTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableRowDetailDirective {\n    constructor() {\n        /**\n         * The detail row height is required especially\n         * when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Row detail row visbility was toggled.\n         */\n        this.toggle = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of the row\n     * @param {?} row\n     * @return {?}\n     */\n    toggleExpandRow(row) {\n        this.toggle.emit({\n            type: 'row',\n            value: row\n        });\n    }\n    /**\n     * API method to expand all the rows.\n     * @return {?}\n     */\n    expandAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * API method to collapse all the rows.\n     * @return {?}\n     */\n    collapseAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableRowDetailDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-row-detail' },] }\n];\nDatatableRowDetailDirective.propDecorators = {\n    rowHeight: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true },] }],\n    toggle: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The detail row height is required especially\n     * when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateQuery;\n    /**\n     * Row detail row visbility was toggled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableFooterDirective {\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n}\nDatatableFooterDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-footer' },] }\n];\nDatatableFooterDirective.propDecorators = {\n    footerHeight: [{ type: Input }],\n    totalMessage: [{ type: Input }],\n    selectedMessage: [{ type: Input }],\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DataTableFooterTemplateDirective, { read: TemplateRef, static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    DatatableFooterDirective.prototype.footerHeight;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.totalMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.selectedMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerNextIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateQuery;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the columns by pin.\n * @param {?} cols\n * @return {?}\n */\nfunction columnsByPin(cols) {\n    /** @type {?} */\n    const ret = {\n        left: [],\n        center: [],\n        right: []\n    };\n    if (cols) {\n        for (const col of cols) {\n            if (col.frozenLeft) {\n                ret.left.push(col);\n            }\n            else if (col.frozenRight) {\n                ret.right.push(col);\n            }\n            else {\n                ret.center.push(col);\n            }\n        }\n    }\n    return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n * @param {?} groups\n * @param {?} all\n * @return {?}\n */\nfunction columnGroupWidths(groups, all) {\n    return {\n        left: columnTotalWidth(groups.left),\n        center: columnTotalWidth(groups.center),\n        right: columnTotalWidth(groups.right),\n        total: Math.floor(columnTotalWidth(all))\n    };\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnTotalWidth(columns, prop) {\n    /** @type {?} */\n    let totalWidth = 0;\n    if (columns) {\n        for (const c of columns) {\n            /** @type {?} */\n            const has = prop && c[prop];\n            /** @type {?} */\n            const width = has ? c[prop] : c.width;\n            totalWidth = totalWidth + parseFloat(width);\n        }\n    }\n    return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnsTotalWidth(columns, prop) {\n    /** @type {?} */\n    let totalWidth = 0;\n    for (const column of columns) {\n        /** @type {?} */\n        const has = prop && column[prop];\n        totalWidth = totalWidth + (has ? column[prop] : column.width);\n    }\n    return totalWidth;\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction columnsByPinArr(val) {\n    /** @type {?} */\n    const colsByPinArr = [];\n    /** @type {?} */\n    const colsByPin = columnsByPin(val);\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n    return colsByPinArr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nclass RowHeightCache {\n    constructor() {\n        /**\n         * Tree Array stores the cumulative information of the row heights to perform efficient\n         * range queries and updates.  Currently the tree is initialized to the base row\n         * height instead of the detail row height.\n         */\n        this.treeArray = [];\n    }\n    /**\n     * Clear the Tree array.\n     * @return {?}\n     */\n    clearCache() {\n        this.treeArray = [];\n    }\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param {?} details\n     * @return {?}\n     */\n    initCache(details) {\n        const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n        /** @type {?} */\n        const isFn = typeof rowHeight === 'function';\n        /** @type {?} */\n        const isDetailFn = typeof detailRowHeight === 'function';\n        if (!isFn && isNaN(rowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n        if (!isDetailFn && isNaN(detailRowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        /** @type {?} */\n        const n = externalVirtual ? rowCount : rows.length;\n        this.treeArray = new Array(n);\n        for (let i = 0; i < n; ++i) {\n            this.treeArray[i] = 0;\n        }\n        for (let i = 0; i < n; ++i) {\n            /** @type {?} */\n            const row = rows[i];\n            /** @type {?} */\n            let currentRowHeight = rowHeight;\n            if (isFn) {\n                currentRowHeight = rowHeight(row);\n            }\n            // Add the detail row height to the already expanded rows.\n            // This is useful for the table that goes through a filter or sort.\n            /** @type {?} */\n            const expanded = rowExpansions.get(row);\n            if (row && expanded === 1) {\n                if (isDetailFn) {\n                    /** @type {?} */\n                    const index = rowIndexes.get(row);\n                    currentRowHeight += detailRowHeight(row, index);\n                }\n                else {\n                    currentRowHeight += detailRowHeight;\n                }\n            }\n            this.update(i, currentRowHeight);\n        }\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     * @param {?} scrollY\n     * @return {?}\n     */\n    getRowIndex(scrollY) {\n        if (scrollY === 0)\n            return 0;\n        return this.calcRowIndex(scrollY);\n    }\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     * @param {?} atRowIndex\n     * @param {?} byRowHeight\n     * @return {?}\n     */\n    update(atRowIndex, byRowHeight) {\n        if (!this.treeArray.length) {\n            throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n        }\n        /** @type {?} */\n        const n = this.treeArray.length;\n        atRowIndex |= 0;\n        while (atRowIndex < n) {\n            this.treeArray[atRowIndex] += byRowHeight;\n            atRowIndex |= atRowIndex + 1;\n        }\n    }\n    /**\n     * Range Sum query from 1 to the rowIndex\n     * @param {?} atIndex\n     * @return {?}\n     */\n    query(atIndex) {\n        if (!this.treeArray.length) {\n            throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n        }\n        /** @type {?} */\n        let sum = 0;\n        atIndex |= 0;\n        while (atIndex >= 0) {\n            sum += this.treeArray[atIndex];\n            atIndex = (atIndex & (atIndex + 1)) - 1;\n        }\n        return sum;\n    }\n    /**\n     * Find the total height between 2 row indexes\n     * @param {?} atIndexA\n     * @param {?} atIndexB\n     * @return {?}\n     */\n    queryBetween(atIndexA, atIndexB) {\n        return this.query(atIndexB) - this.query(atIndexA - 1);\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     * @private\n     * @param {?} sum\n     * @return {?}\n     */\n    calcRowIndex(sum) {\n        if (!this.treeArray.length)\n            return 0;\n        /** @type {?} */\n        let pos = -1;\n        /** @type {?} */\n        const dataLength = this.treeArray.length;\n        // Get the highest bit for the block size.\n        /** @type {?} */\n        const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n        for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n            /** @type {?} */\n            const nextPos = pos + blockSize;\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n                sum -= this.treeArray[nextPos];\n                pos = nextPos;\n            }\n        }\n        return pos + 1;\n    }\n}\nif (false) {\n    /**\n     * Tree Array stores the cumulative information of the row heights to perform efficient\n     * range queries and updates.  Currently the tree is initialized to the base row\n     * height instead of the detail row height.\n     * @type {?}\n     * @private\n     */\n    RowHeightCache.prototype.treeArray;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst cache = {};\n/** @type {?} */\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst ɵ0 = /**\n * @return {?}\n */\nfunction () {\n    /** @type {?} */\n    const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n    /** @type {?} */\n    const match = typeof styles !== 'undefined'\n        ? Array.prototype.slice\n            .call(styles)\n            .join('')\n            .match(/-(moz|webkit|ms)-/)\n        : null;\n    /** @type {?} */\n    const pre = match !== null ? match[1] : undefined;\n    // tslint:disable-next-line: tsr-detect-non-literal-regexp\n    /** @type {?} */\n    const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n    return dom\n        ? {\n            dom,\n            lowercase: pre,\n            css: `-${pre}-`,\n            js: pre[0].toUpperCase() + pre.substr(1)\n        }\n        : undefined;\n};\n/** @type {?} */\nconst prefix = ((ɵ0))();\n/**\n * @param {?} property\n * @return {?}\n */\nfunction getVendorPrefixedName(property) {\n    /** @type {?} */\n    const name = camelCase(property);\n    if (!cache[name]) {\n        if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n            cache[name] = prefix.css + property;\n        }\n        else if (testStyle[property] !== undefined) {\n            cache[name] = property;\n        }\n    }\n    return cache[name];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// browser detection and prefixing tools\n/** @type {?} */\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\n/** @type {?} */\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\n/** @type {?} */\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\n/** @type {?} */\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n/**\n * @param {?} styles\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction translateXY(styles, x, y) {\n    if (typeof transform !== 'undefined' && hasCSSTransforms) {\n        if (!isSafari && hasCSS3DTransforms) {\n            styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n            styles[backfaceVisibility] = 'hidden';\n        }\n        else {\n            styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n        }\n    }\n    else {\n        styles.top = `${y}px`;\n        styles.left = `${x}px`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyComponent {\n    /**\n     * Creates an instance of DataTableBodyComponent.\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.selected = [];\n        this.scroll = new EventEmitter();\n        this.page = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n        this.detailToggle = new EventEmitter();\n        this.rowContextmenu = new EventEmitter(false);\n        this.treeAction = new EventEmitter();\n        this.rowHeightsCache = new RowHeightCache();\n        this.temp = [];\n        this.offsetY = 0;\n        this.indexes = {};\n        this.rowIndexes = new Map();\n        this.rowExpansions = new Map();\n        /**\n         * Get the height of the detail row.\n         */\n        this.getDetailRowHeight = (/**\n         * @param {?=} row\n         * @param {?=} index\n         * @return {?}\n         */\n        (row, index) => {\n            if (!this.rowDetail) {\n                return 0;\n            }\n            /** @type {?} */\n            const rowHeight = this.rowDetail.rowHeight;\n            return typeof rowHeight === 'function' ? rowHeight(row, index) : ((/** @type {?} */ (rowHeight)));\n        });\n        // declare fn here so we can get access to the `this` property\n        this.rowTrackingFn = (/**\n         * @param {?} index\n         * @param {?} row\n         * @return {?}\n         */\n        (index, row) => {\n            /** @type {?} */\n            const idx = this.getRowIndex(row);\n            if (this.trackByProp) {\n                return row[this.trackByProp];\n            }\n            else {\n                return idx;\n            }\n        });\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set pageSize(val) {\n        this._pageSize = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rows(val) {\n        this._rows = val;\n        this.rowExpansions.clear();\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(val);\n        this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offset(val) {\n        this._offset = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowCount(val) {\n        this._rowCount = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get rowCount() {\n        return this._rowCount;\n    }\n    /**\n     * @return {?}\n     */\n    get bodyWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        else {\n            return '100%';\n        }\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set bodyHeight(val) {\n        if (this.scrollbarV) {\n            this._bodyHeight = val + 'px';\n        }\n        else {\n            this._bodyHeight = 'auto';\n        }\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get bodyHeight() {\n        return this._bodyHeight;\n    }\n    /**\n     * Returns if selection is enabled.\n     * @return {?}\n     */\n    get selectEnabled() {\n        return !!this.selectionType;\n    }\n    /**\n     * Property that would calculate the height of scroll bar\n     * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n     * calculate scroll height automatically (as height will be undefined).\n     * @return {?}\n     */\n    get scrollHeight() {\n        if (this.scrollbarV && this.virtualization && this.rowCount) {\n            return this.rowHeightsCache.query(this.rowCount - 1);\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n    /**\n     * Called after the constructor, initializing input properties\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.rowDetail) {\n            this.listener = this.rowDetail.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ type, value }) => {\n                if (type === 'row') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            }));\n        }\n        if (this.groupHeader) {\n            this.listener = this.groupHeader.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ type, value }) => {\n                if (type === 'group') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Called once, before the instance is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.rowDetail || this.groupHeader) {\n            this.listener.unsubscribe();\n        }\n    }\n    /**\n     * Updates the Y offset given a new offset.\n     * @param {?=} offset\n     * @return {?}\n     */\n    updateOffsetY(offset) {\n        // scroller is missing on empty table\n        if (!this.scroller) {\n            return;\n        }\n        if (this.scrollbarV && this.virtualization && offset) {\n            // First get the row Index that we need to move to.\n            /** @type {?} */\n            const rowIndex = this.pageSize * offset;\n            offset = this.rowHeightsCache.query(rowIndex - 1);\n        }\n        else if (this.scrollbarV && !this.virtualization) {\n            offset = 0;\n        }\n        this.scroller.setOffset(offset || 0);\n    }\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     * @param {?} event\n     * @return {?}\n     */\n    onBodyScroll(event) {\n        /** @type {?} */\n        const scrollYPos = event.scrollYPos;\n        /** @type {?} */\n        const scrollXPos = event.scrollXPos;\n        // if scroll change, trigger update\n        // this is mainly used for header cell positions\n        if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n            this.scroll.emit({\n                offsetY: scrollYPos,\n                offsetX: scrollXPos\n            });\n        }\n        this.offsetY = scrollYPos;\n        this.offsetX = scrollXPos;\n        this.updateIndexes();\n        this.updatePage(event.direction);\n        this.updateRows();\n    }\n    /**\n     * Updates the page given a direction.\n     * @param {?} direction\n     * @return {?}\n     */\n    updatePage(direction) {\n        /** @type {?} */\n        let offset = this.indexes.first / this.pageSize;\n        if (direction === 'up') {\n            offset = Math.ceil(offset);\n        }\n        else if (direction === 'down') {\n            offset = Math.floor(offset);\n        }\n        if (direction !== undefined && !isNaN(offset)) {\n            this.page.emit({ offset });\n        }\n    }\n    /**\n     * Updates the rows in the view port\n     * @return {?}\n     */\n    updateRows() {\n        const { first, last } = this.indexes;\n        /** @type {?} */\n        let rowIndex = first;\n        /** @type {?} */\n        let idx = 0;\n        /** @type {?} */\n        const temp = [];\n        this.rowIndexes.clear();\n        // if grouprowsby has been specified treat row paging\n        // parameters as group paging parameters ie if limit 10 has been\n        // specified treat it as 10 groups rather than 10 rows\n        if (this.groupedRows) {\n            /** @type {?} */\n            let maxRowsPerGroup = 3;\n            // if there is only one group set the maximum number of\n            // rows per group the same as the total number of rows\n            if (this.groupedRows.length === 1) {\n                maxRowsPerGroup = this.groupedRows[0].value.length;\n            }\n            while (rowIndex < last && rowIndex < this.groupedRows.length) {\n                // Add the groups into this page\n                /** @type {?} */\n                const group = this.groupedRows[rowIndex];\n                temp[idx] = group;\n                idx++;\n                // Group index in this context\n                rowIndex++;\n            }\n        }\n        else {\n            while (rowIndex < last && rowIndex < this.rowCount) {\n                /** @type {?} */\n                const row = this.rows[rowIndex];\n                if (row) {\n                    this.rowIndexes.set(row, rowIndex);\n                    temp[idx] = row;\n                }\n                idx++;\n                rowIndex++;\n            }\n        }\n        this.temp = temp;\n    }\n    /**\n     * Get the row height\n     * @param {?} row\n     * @return {?}\n     */\n    getRowHeight(row) {\n        // if its a function return it\n        if (typeof this.rowHeight === 'function') {\n            return this.rowHeight(row);\n        }\n        return (/** @type {?} */ (this.rowHeight));\n    }\n    /**\n     * @param {?} group the group with all rows\n     * @return {?}\n     */\n    getGroupHeight(group) {\n        /** @type {?} */\n        let rowHeight = 0;\n        if (group.value) {\n            for (let index = 0; index < group.value.length; index++) {\n                rowHeight += this.getRowAndDetailHeight(group.value[index]);\n            }\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculate row height based on the expanded state of the row.\n     * @param {?} row\n     * @return {?}\n     */\n    getRowAndDetailHeight(row) {\n        /** @type {?} */\n        let rowHeight = this.getRowHeight(row);\n        /** @type {?} */\n        const expanded = this.rowExpansions.get(row);\n        // Adding detail row height if its expanded.\n        if (expanded === 1) {\n            rowHeight += this.getDetailRowHeight(row);\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @param {?} rows the row that needs to be placed in the 2D space.\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    getRowsStyles(rows) {\n        /** @type {?} */\n        const styles = {};\n        // only add styles for the group if there is a group\n        if (this.groupedRows) {\n            styles.width = this.columnGroupWidths.total;\n        }\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            let idx = 0;\n            if (this.groupedRows) {\n                // Get the latest row rowindex in a group\n                /** @type {?} */\n                const row = rows[rows.length - 1];\n                idx = row ? this.getRowIndex(row) : 0;\n            }\n            else {\n                idx = this.getRowIndex(rows);\n            }\n            // const pos = idx * rowHeight;\n            // The position of this row would be the sum of all row heights\n            // until the previous row position.\n            /** @type {?} */\n            const pos = this.rowHeightsCache.query(idx - 1);\n            translateXY(styles, 0, pos);\n        }\n        return styles;\n    }\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    getBottomSummaryRowStyles() {\n        if (!this.scrollbarV || !this.rows || !this.rows.length) {\n            return null;\n        }\n        /** @type {?} */\n        const styles = { position: 'absolute' };\n        /** @type {?} */\n        const pos = this.rowHeightsCache.query(this.rows.length - 1);\n        translateXY(styles, 0, pos);\n        return styles;\n    }\n    /**\n     * Hides the loading indicator\n     * @return {?}\n     */\n    hideIndicator() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => (this.loadingIndicator = false)), 500);\n    }\n    /**\n     * Updates the index of the rows in the viewport\n     * @return {?}\n     */\n    updateIndexes() {\n        /** @type {?} */\n        let first = 0;\n        /** @type {?} */\n        let last = 0;\n        if (this.scrollbarV) {\n            if (this.virtualization) {\n                // Calculation of the first and last indexes will be based on where the\n                // scrollY position would be at.  The last index would be the one\n                // that shows up inside the view port the last.\n                /** @type {?} */\n                const height = parseInt(this.bodyHeight, 0);\n                first = this.rowHeightsCache.getRowIndex(this.offsetY);\n                last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n            }\n            else {\n                // If virtual rows are not needed\n                // We render all in one go\n                first = 0;\n                last = this.rowCount;\n            }\n        }\n        else {\n            // The server is handling paging and will pass an array that begins with the\n            // element at a specified offset.  first should always be 0 with external paging.\n            if (!this.externalPaging) {\n                first = Math.max(this.offset * this.pageSize, 0);\n            }\n            last = Math.min(first + this.pageSize, this.rowCount);\n        }\n        this.indexes = { first, last };\n    }\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     * @return {?}\n     */\n    refreshRowHeightCache() {\n        if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n            return;\n        }\n        // clear the previous row height cache if already present.\n        // this is useful during sorts, filters where the state of the\n        // rows array is changed.\n        this.rowHeightsCache.clearCache();\n        // Initialize the tree only if there are rows inside the tree.\n        if (this.rows && this.rows.length) {\n            this.rowHeightsCache.initCache({\n                rows: this.rows,\n                rowHeight: this.rowHeight,\n                detailRowHeight: this.getDetailRowHeight,\n                externalVirtual: this.scrollbarV && this.externalPaging,\n                rowCount: this.rowCount,\n                rowIndexes: this.rowIndexes,\n                rowExpansions: this.rowExpansions\n            });\n        }\n    }\n    /**\n     * Gets the index for the view port\n     * @return {?}\n     */\n    getAdjustedViewPortIndex() {\n        // Capture the row index of the first row that is visible on the viewport.\n        // If the scroll bar is just below the row which is highlighted then make that as the\n        // first index.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.indexes.first;\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n            return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n        }\n        return viewPortFirstRowIndex;\n    }\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     * @param {?} row\n     * @return {?}\n     */\n    toggleRowExpansion(row) {\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        /** @type {?} */\n        let expanded = this.rowExpansions.get(row);\n        // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n            // const idx = this.rowIndexes.get(row) || 0;\n            /** @type {?} */\n            const idx = this.getRowIndex(row);\n            this.rowHeightsCache.update(idx, detailRowHeight);\n        }\n        // Update the toggled row and update thive nevere heights in the cache.\n        expanded = expanded ^= 1;\n        this.rowExpansions.set(row, expanded);\n        this.detailToggle.emit({\n            rows: [row],\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     * @param {?} expanded\n     * @return {?}\n     */\n    toggleAllRows(expanded) {\n        // clear prev expansions\n        this.rowExpansions.clear();\n        /** @type {?} */\n        const rowExpanded = expanded ? 1 : 0;\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        for (const row of this.rows) {\n            this.rowExpansions.set(row, rowExpanded);\n        }\n        if (this.scrollbarV) {\n            // Refresh the full row heights cache since every row was affected.\n            this.recalcLayout();\n        }\n        // Emit all rows that have been expanded.\n        this.detailToggle.emit({\n            rows: this.rows,\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Recalculates the table\n     * @return {?}\n     */\n    recalcLayout() {\n        this.refreshRowHeightCache();\n        this.updateIndexes();\n        this.updateRows();\n    }\n    /**\n     * Tracks the column\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * Gets the row pinning group styles\n     * @param {?} group\n     * @return {?}\n     */\n    stylesByGroup(group) {\n        /** @type {?} */\n        const widths = this.columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            const totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            const offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            const offset = offsetDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     * @param {?} row\n     * @return {?}\n     */\n    getRowExpanded(row) {\n        if (this.rowExpansions.size === 0 && this.groupExpansionDefault) {\n            for (const group of this.groupedRows) {\n                this.rowExpansions.set(group, 1);\n            }\n        }\n        /** @type {?} */\n        const expanded = this.rowExpansions.get(row);\n        return expanded === 1;\n    }\n    /**\n     * Gets the row index given a row\n     * @param {?} row\n     * @return {?}\n     */\n    getRowIndex(row) {\n        return this.rowIndexes.get(row) || 0;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    onTreeAction(row) {\n        this.treeAction.emit({ row });\n    }\n}\nDataTableBodyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body',\n                template: `\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    class: 'datatable-body'\n                }\n            }] }\n];\n/** @nocollapse */\nDataTableBodyComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableBodyComponent.propDecorators = {\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    loadingIndicator: [{ type: Input }],\n    externalPaging: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    emptyMessage: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    selected: [{ type: Input }],\n    rowIdentity: [{ type: Input }],\n    rowDetail: [{ type: Input }],\n    groupHeader: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    trackByProp: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    groupExpansionDefault: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    groupRowsBy: [{ type: Input }],\n    virtualization: [{ type: Input }],\n    summaryRow: [{ type: Input }],\n    summaryPosition: [{ type: Input }],\n    summaryHeight: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    rows: [{ type: Input }],\n    columns: [{ type: Input }],\n    offset: [{ type: Input }],\n    rowCount: [{ type: Input }],\n    bodyWidth: [{ type: HostBinding, args: ['style.width',] }],\n    bodyHeight: [{ type: Input }, { type: HostBinding, args: ['style.height',] }],\n    scroll: [{ type: Output }],\n    page: [{ type: Output }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }],\n    detailToggle: [{ type: Output }],\n    rowContextmenu: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    scroller: [{ type: ViewChild, args: [ScrollerComponent, { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarV;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.loadingIndicator;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.externalPaging;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.emptyMessage;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selected;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.trackByProp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupExpansionDefault;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupRowsBy;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.virtualization;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryRow;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryPosition;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroll;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.page;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.select;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.detailToggle;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroller;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeightsCache;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.temp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetY;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.indexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidthsWithoutGroup;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowTrackingFn;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.listener;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIndexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowExpansions;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._bodyHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rowCount;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._offset;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._pageSize;\n    /**\n     * Get the height of the detail row.\n     * @type {?}\n     */\n    DataTableBodyComponent.prototype.getDetailRowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableHeaderComponent {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.reorder = new EventEmitter();\n        this.resize = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this._columnGroupWidths = {\n            total: 100\n        };\n        this._styleByGroup = {\n            left: {},\n            center: {},\n            right: {}\n        };\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set innerWidth(val) {\n        this._innerWidth = val;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this._columns) {\n                /** @type {?} */\n                const colByPin = columnsByPin(this._columns);\n                this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n                this.setStylesByGroup();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set headerHeight(val) {\n        if (val !== 'auto') {\n            this._headerHeight = `${val}px`;\n        }\n        else {\n            this._headerHeight = val;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get headerHeight() {\n        return this._headerHeight;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(val);\n        this._columnsByPin = columnsByPinArr(val);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n            this.setStylesByGroup();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offsetX(val) {\n        this._offsetX = val;\n        this.setStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get offsetX() {\n        return this._offsetX;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onLongPressStart({ event, model }) {\n        model.dragging = true;\n        this.dragEventTarget = event;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onLongPressEnd({ event, model }) {\n        this.dragEventTarget = event;\n        // delay resetting so sort can be\n        // prevented if we were dragging\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            // datatable component creates copies from columns on reorder\n            // set dragging to false on new objects\n            /** @type {?} */\n            const column = this._columns.find((/**\n             * @param {?} c\n             * @return {?}\n             */\n            c => c.$$id === model.$$id));\n            if (column) {\n                column.dragging = false;\n            }\n        }), 5);\n    }\n    /**\n     * @return {?}\n     */\n    get headerWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        return '100%';\n    }\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * @param {?} width\n     * @param {?} column\n     * @return {?}\n     */\n    onColumnResized(width, column) {\n        if (width <= column.minWidth) {\n            width = column.minWidth;\n        }\n        else if (width >= column.maxWidth) {\n            width = column.maxWidth;\n        }\n        this.resize.emit({\n            column,\n            prevValue: column.width,\n            newValue: width\n        });\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnReordered({ prevIndex, newIndex, model }) {\n        /** @type {?} */\n        const column = this.getColumn(newIndex);\n        column.isTarget = false;\n        column.targetMarkerContext = undefined;\n        this.reorder.emit({\n            column: model,\n            prevValue: prevIndex,\n            newValue: newIndex\n        });\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onTargetChanged({ prevIndex, newIndex, initialIndex }) {\n        if (prevIndex || prevIndex === 0) {\n            /** @type {?} */\n            const oldColumn = this.getColumn(prevIndex);\n            oldColumn.isTarget = false;\n            oldColumn.targetMarkerContext = undefined;\n        }\n        if (newIndex || newIndex === 0) {\n            /** @type {?} */\n            const newColumn = this.getColumn(newIndex);\n            newColumn.isTarget = true;\n            if (initialIndex !== newIndex) {\n                newColumn.targetMarkerContext = {\n                    class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n                };\n            }\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getColumn(index) {\n        /** @type {?} */\n        const leftColumnCount = this._columnsByPin[0].columns.length;\n        if (index < leftColumnCount) {\n            return this._columnsByPin[0].columns[index];\n        }\n        /** @type {?} */\n        const centerColumnCount = this._columnsByPin[1].columns.length;\n        if (index < leftColumnCount + centerColumnCount) {\n            return this._columnsByPin[1].columns[index - leftColumnCount];\n        }\n        return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onSort({ column, prevValue, newValue }) {\n        // if we are dragging don't sort!\n        if (column.dragging) {\n            return;\n        }\n        /** @type {?} */\n        const sorts = this.calcNewSorts(column, prevValue, newValue);\n        this.sort.emit({\n            sorts,\n            column,\n            prevValue,\n            newValue\n        });\n    }\n    /**\n     * @param {?} column\n     * @param {?} prevValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    calcNewSorts(column, prevValue, newValue) {\n        /** @type {?} */\n        let idx = 0;\n        if (!this.sorts) {\n            this.sorts = [];\n        }\n        /** @type {?} */\n        const sorts = this.sorts.map((/**\n         * @param {?} s\n         * @param {?} i\n         * @return {?}\n         */\n        (s, i) => {\n            s = Object.assign({}, s);\n            if (s.prop === column.prop) {\n                idx = i;\n            }\n            return s;\n        }));\n        if (newValue === undefined) {\n            sorts.splice(idx, 1);\n        }\n        else if (prevValue) {\n            sorts[idx].dir = newValue;\n        }\n        else {\n            if (this.sortType === SortType.single) {\n                sorts.splice(0, this.sorts.length);\n            }\n            sorts.push({ dir: newValue, prop: column.prop });\n        }\n        return sorts;\n    }\n    /**\n     * @return {?}\n     */\n    setStylesByGroup() {\n        this._styleByGroup.left = this.calcStylesByGroup('left');\n        this._styleByGroup.center = this.calcStylesByGroup('center');\n        this._styleByGroup.right = this.calcStylesByGroup('right');\n        this.cd.detectChanges();\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    calcStylesByGroup(group) {\n        /** @type {?} */\n        const widths = this._columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'center') {\n            translateXY(styles, offsetX * -1, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const totalDiff = widths.total - this.innerWidth;\n            /** @type {?} */\n            const offset = totalDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n}\nDataTableHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-header',\n                template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-header'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nDataTableHeaderComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableHeaderComponent.propDecorators = {\n    sortAscendingIcon: [{ type: Input }],\n    sortDescendingIcon: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    dealsWithGroup: [{ type: Input }],\n    targetMarkerTemplate: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    sorts: [{ type: Input }],\n    sortType: [{ type: Input }],\n    allRowsSelected: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    headerHeight: [{ type: HostBinding, args: ['style.height',] }, { type: Input }],\n    columns: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    sort: [{ type: Output }],\n    reorder: [{ type: Output }],\n    resize: [{ type: Output }],\n    select: [{ type: Output }],\n    columnContextmenu: [{ type: Output }],\n    headerWidth: [{ type: HostBinding, args: ['style.width',] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dealsWithGroup;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sorts;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorderable;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dragEventTarget;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorder;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.resize;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columns;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._headerHeight;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._styleByGroup;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throttle a function\n * @param {?} func\n * @param {?} wait\n * @param {?=} options\n * @return {?}\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    /** @type {?} */\n    let context;\n    /** @type {?} */\n    let args;\n    /** @type {?} */\n    let result;\n    /** @type {?} */\n    let timeout = null;\n    /** @type {?} */\n    let previous = 0;\n    /**\n     * @return {?}\n     */\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return (/**\n     * @this {?}\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        /** @type {?} */\n        const remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    });\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n * @param {?} duration\n * @param {?=} options\n * @return {?}\n */\nfunction throttleable(duration, options) {\n    return (/**\n     * @param {?} target\n     * @param {?} key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: (/**\n             * @return {?}\n             */\n            function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            })\n        };\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Calculates the Total Flex Grow\n * @param {?} columns\n * @return {?}\n */\nfunction getTotalFlexGrow(columns) {\n    /** @type {?} */\n    let totalFlexGrow = 0;\n    for (const c of columns) {\n        totalFlexGrow += c.flexGrow || 0;\n    }\n    return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @return {?}\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n    /** @type {?} */\n    const columnsWidth = columnsTotalWidth(allColumns);\n    /** @type {?} */\n    const totalFlexGrow = getTotalFlexGrow(allColumns);\n    /** @type {?} */\n    const colsByGroup = columnsByPin(allColumns);\n    if (columnsWidth !== expectedWidth) {\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n    }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {?} colsByGroup\n * @param {?} maxWidth\n * @param {?} totalFlexGrow\n * @return {?}\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n    // calculate total width and flexgrow points for coulumns that can be resized\n    for (const attr in colsByGroup) {\n        for (const column of colsByGroup[attr]) {\n            if (!column.canAutoResize) {\n                maxWidth -= column.width;\n                totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n            }\n            else {\n                column.width = 0;\n            }\n        }\n    }\n    /** @type {?} */\n    const hasMinWidth = {};\n    /** @type {?} */\n    let remainingWidth = maxWidth;\n    // resize columns until no width is left to be distributed\n    do {\n        /** @type {?} */\n        const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n        remainingWidth = 0;\n        for (const attr in colsByGroup) {\n            for (const column of colsByGroup[attr]) {\n                // if the column can be resize and it hasn't reached its minimum width yet\n                if (column.canAutoResize && !hasMinWidth[column.prop]) {\n                    /** @type {?} */\n                    const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n                    if (column.minWidth !== undefined && newWidth < column.minWidth) {\n                        remainingWidth += newWidth - column.minWidth;\n                        column.width = column.minWidth;\n                        hasMinWidth[column.prop] = true;\n                    }\n                    else {\n                        column.width = newWidth;\n                    }\n                }\n            }\n        }\n    } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @param {?} startIdx\n * @param {?} allowBleed\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth = 300) {\n    /** @type {?} */\n    const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter((/**\n     * @param {?} c\n     * @return {?}\n     */\n    c => {\n        return c.canAutoResize !== false;\n    }));\n    for (const column of columnsToResize) {\n        if (!column.$$oldWidth) {\n            column.$$oldWidth = column.width;\n        }\n    }\n    /** @type {?} */\n    let additionWidthPerColumn = 0;\n    /** @type {?} */\n    let exceedsWindow = false;\n    /** @type {?} */\n    let contentWidth = getContentWidth(allColumns, defaultColWidth);\n    /** @type {?} */\n    let remainingWidth = expectedWidth - contentWidth;\n    /** @type {?} */\n    const columnsProcessed = [];\n    /** @type {?} */\n    const remainingWidthLimit = 1;\n    // This loop takes care of the\n    do {\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\n        exceedsWindow = contentWidth >= expectedWidth;\n        for (const column of columnsToResize) {\n            if (exceedsWindow && allowBleed) {\n                column.width = column.$$oldWidth || column.width || defaultColWidth;\n            }\n            else {\n                /** @type {?} */\n                const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n                if (column.minWidth && newSize < column.minWidth) {\n                    column.width = column.minWidth;\n                    columnsProcessed.push(column);\n                }\n                else if (column.maxWidth && newSize > column.maxWidth) {\n                    column.width = column.maxWidth;\n                    columnsProcessed.push(column);\n                }\n                else {\n                    column.width = newSize;\n                }\n            }\n            column.width = Math.max(0, column.width);\n        }\n        contentWidth = getContentWidth(allColumns);\n        remainingWidth = expectedWidth - contentWidth;\n        removeProcessedColumns(columnsToResize, columnsProcessed);\n    } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n * @param {?} columnsToResize\n * @param {?} columnsProcessed\n * @return {?}\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n    for (const column of columnsProcessed) {\n        /** @type {?} */\n        const index = columnsToResize.indexOf(column);\n        columnsToResize.splice(index, 1);\n    }\n}\n/**\n * Gets the width of the columns\n * @param {?} allColumns\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction getContentWidth(allColumns, defaultColWidth = 300) {\n    /** @type {?} */\n    let contentWidth = 0;\n    for (const column of allColumns) {\n        contentWidth += column.width || defaultColWidth;\n    }\n    return contentWidth;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SortDirection = {\n    asc: 'asc',\n    desc: 'desc',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the next sort direction\n * @param {?} sortType\n * @param {?} current\n * @return {?}\n */\nfunction nextSortDir(sortType, current) {\n    if (sortType === SortType.single) {\n        if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else {\n            return SortDirection.asc;\n        }\n    }\n    else {\n        if (!current) {\n            return SortDirection.asc;\n        }\n        else if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else if (current === SortDirection.desc) {\n            return undefined;\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined')\n        a = 0;\n    if (b === null || typeof b === 'undefined')\n        b = 0;\n    if (a instanceof Date && b instanceof Date) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n    }\n    else if (isNaN(parseFloat(a)) || !isFinite(a) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n        // Convert to string in case of a=0 or b=0\n        a = String(a);\n        b = String(b);\n        // Isn't a number so lowercase the string to properly compare\n        if (a.toLowerCase() < b.toLowerCase())\n            return -1;\n        if (a.toLowerCase() > b.toLowerCase())\n            return 1;\n    }\n    else {\n        // Parse strings as numbers to compare properly\n        if (parseFloat(a) < parseFloat(b))\n            return -1;\n        if (parseFloat(a) > parseFloat(b))\n            return 1;\n    }\n    // equal each other\n    return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n * @param {?} rows\n * @param {?} columns\n * @param {?} dirs\n * @return {?}\n */\nfunction sortRows(rows, columns, dirs) {\n    if (!rows)\n        return [];\n    if (!dirs || !dirs.length || !columns)\n        return [...rows];\n    /**\n     * record the row ordering of results from prior sort operations (if applicable)\n     * this is necessary to guarantee stable sorting behavior\n     * @type {?}\n     */\n    const rowToIndexMap = new Map();\n    rows.forEach((/**\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    (row, index) => rowToIndexMap.set(row, index)));\n    /** @type {?} */\n    const temp = [...rows];\n    /** @type {?} */\n    const cols = columns.reduce((/**\n     * @param {?} obj\n     * @param {?} col\n     * @return {?}\n     */\n    (obj, col) => {\n        if (col.comparator && typeof col.comparator === 'function') {\n            obj[col.prop] = col.comparator;\n        }\n        return obj;\n    }), {});\n    // cache valueGetter and compareFn so that they\n    // do not need to be looked-up in the sort function body\n    /** @type {?} */\n    const cachedDirs = dirs.map((/**\n     * @param {?} dir\n     * @return {?}\n     */\n    dir => {\n        /** @type {?} */\n        const prop = dir.prop;\n        return {\n            prop,\n            dir: dir.dir,\n            valueGetter: getterForProp(prop),\n            compareFn: cols[prop] || orderByComparator\n        };\n    }));\n    return temp.sort((/**\n     * @param {?} rowA\n     * @param {?} rowB\n     * @return {?}\n     */\n    function (rowA, rowB) {\n        for (const cachedDir of cachedDirs) {\n            // Get property and valuegetters for column to be sorted\n            const { prop, valueGetter } = cachedDir;\n            // Get A and B cell values from rows based on properties of the columns\n            /** @type {?} */\n            const propA = valueGetter(rowA, prop);\n            /** @type {?} */\n            const propB = valueGetter(rowB, prop);\n            // Compare function gets five parameters:\n            // Two cell values to be compared as propA and propB\n            // Two rows corresponding to the cells as rowA and rowB\n            // Direction of the sort for this column as SortDirection\n            // Compare can be a standard JS comparison function (a,b) => -1|0|1\n            // as additional parameters are silently ignored. The whole row and sort\n            // direction enable more complex sort logic.\n            /** @type {?} */\n            const comparison = cachedDir.dir !== SortDirection.desc\n                ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n                : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n            // Don't return 0 yet in case of needing to sort by next property\n            if (comparison !== 0)\n                return comparison;\n        }\n        if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB)))\n            return 0;\n        /**\n         * all else being equal, preserve original order of the rows (stable sort)\n         */\n        return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableComponent {\n    /**\n     * @param {?} scrollbarHelper\n     * @param {?} dimensionsHelper\n     * @param {?} cd\n     * @param {?} element\n     * @param {?} differs\n     * @param {?} columnChangesService\n     * @param {?} configuration\n     */\n    constructor(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n        this.scrollbarHelper = scrollbarHelper;\n        this.dimensionsHelper = dimensionsHelper;\n        this.cd = cd;\n        this.columnChangesService = columnChangesService;\n        this.configuration = configuration;\n        /**\n         * List of row objects that should be\n         * represented as selected in the grid.\n         * Default value: `[]`\n         */\n        this.selected = [];\n        /**\n         * Enable vertical scrollbars\n         */\n        this.scrollbarV = false;\n        /**\n         * Enable horz scrollbars\n         */\n        this.scrollbarH = false;\n        /**\n         * The row height; which is necessary\n         * to calculate the height for the lazy rendering.\n         */\n        this.rowHeight = 30;\n        /**\n         * Type of column width distribution formula.\n         * Example: flex, force, standard\n         */\n        this.columnMode = ColumnMode.standard;\n        /**\n         * The minimum header height in pixels.\n         * Pass a falsey for no header\n         */\n        this.headerHeight = 30;\n        /**\n         * The minimum footer height in pixels.\n         * Pass falsey for no footer\n         */\n        this.footerHeight = 0;\n        /**\n         * If the table should use external paging\n         * otherwise its assumed that all data is preloaded.\n         */\n        this.externalPaging = false;\n        /**\n         * If the table should use external sorting or\n         * the built-in basic sorting.\n         */\n        this.externalSorting = false;\n        /**\n         * Show the linear loading bar.\n         * Default value: `false`\n         */\n        this.loadingIndicator = false;\n        /**\n         * Enable/Disable ability to re-order columns\n         * by dragging them.\n         */\n        this.reorderable = true;\n        /**\n         * Swap columns on re-order columns or\n         * move them.\n         */\n        this.swapColumns = true;\n        /**\n         * The type of sorting\n         */\n        this.sortType = SortType.single;\n        /**\n         * Array of sorted columns by property and type.\n         * Default value: `[]`\n         */\n        this.sorts = [];\n        /**\n         * Css class overrides\n         */\n        this.cssClasses = {\n            sortAscending: 'datatable-icon-up',\n            sortDescending: 'datatable-icon-down',\n            pagerLeftArrow: 'datatable-icon-left',\n            pagerRightArrow: 'datatable-icon-right',\n            pagerPrevious: 'datatable-icon-prev',\n            pagerNext: 'datatable-icon-skip'\n        };\n        /**\n         * Message overrides for localization\n         *\n         * emptyMessage     [default] = 'No data to display'\n         * totalMessage     [default] = 'total'\n         * selectedMessage  [default] = 'selected'\n         */\n        this.messages = {\n            // Message to show when array is presented\n            // but contains no values\n            emptyMessage: 'No data to display',\n            // Footer total message\n            totalMessage: 'total',\n            // Footer selected message\n            selectedMessage: 'selected'\n        };\n        /**\n         * A boolean you can use to set the detault behaviour of rows and groups\n         * whether they will start expanded or not. If ommited the default is NOT expanded.\n         *\n         */\n        this.groupExpansionDefault = false;\n        /**\n         * Property to which you can use for determining select all\n         * rows on current page or not.\n         *\n         * \\@memberOf DatatableComponent\n         */\n        this.selectAllRowsOnPage = false;\n        /**\n         * A flag for row virtualization on / off\n         */\n        this.virtualization = true;\n        /**\n         * A flag for switching summary row on / off\n         */\n        this.summaryRow = false;\n        /**\n         * A height of summary row\n         */\n        this.summaryHeight = 30;\n        /**\n         * A property holds a summary row position: top/bottom\n         */\n        this.summaryPosition = 'top';\n        /**\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\n         */\n        this.scroll = new EventEmitter();\n        /**\n         * A cell or row was focused via keyboard or mouse click.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * A cell or row was selected.\n         */\n        this.select = new EventEmitter();\n        /**\n         * Column sort was invoked.\n         */\n        this.sort = new EventEmitter();\n        /**\n         * The table was paged either triggered by the pager or the body scroll.\n         */\n        this.page = new EventEmitter();\n        /**\n         * Columns were re-ordered.\n         */\n        this.reorder = new EventEmitter();\n        /**\n         * Column was resized.\n         */\n        this.resize = new EventEmitter();\n        /**\n         * The context menu was invoked on the table.\n         * type indicates whether the header or the body was clicked.\n         * content contains either the column or the row that was clicked.\n         */\n        this.tableContextmenu = new EventEmitter(false);\n        /**\n         * A row was expanded ot collapsed for tree\n         */\n        this.treeAction = new EventEmitter();\n        this.rowCount = 0;\n        this._offsetX = new BehaviorSubject(0);\n        this._count = 0;\n        this._offset = 0;\n        this._subscriptions = [];\n        /**\n         * This will be used when displaying or selecting rows.\n         * when tracking/comparing them, we'll use the value of this fn,\n         *\n         * (`fn(x) === fn(y)` instead of `x === y`)\n         */\n        this.rowIdentity = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x);\n        // get ref to elm for measuring\n        this.element = element.nativeElement;\n        this.rowDiffer = differs.find({}).create();\n        // apply global settings from Module.forRoot\n        if (this.configuration && this.configuration.messages) {\n            this.messages = Object.assign({}, this.configuration.messages);\n        }\n    }\n    /**\n     * Rows that are displayed in the table.\n     * @param {?} val\n     * @return {?}\n     */\n    set rows(val) {\n        this._rows = val;\n        if (val) {\n            this._internalRows = [...val];\n        }\n        // auto sort on new updates\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // recalculate sizes/etc\n        this.recalculate();\n        if (this._rows && this._groupRowsBy) {\n            // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n            this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n        }\n        this.cd.markForCheck();\n    }\n    /**\n     * Gets the rows.\n     * @return {?}\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * This attribute allows the user to set the name of the column to group the data with\n     * @param {?} val\n     * @return {?}\n     */\n    set groupRowsBy(val) {\n        if (val) {\n            this._groupRowsBy = val;\n            if (this._rows && this._groupRowsBy) {\n                // cretes a new array with the data grouped\n                this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get groupRowsBy() {\n        return this._groupRowsBy;\n    }\n    /**\n     * Columns to be displayed.\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        if (val) {\n            this._internalColumns = [...val];\n            setColumnDefaults(this._internalColumns);\n            this.recalculateColumns();\n        }\n        this._columns = val;\n    }\n    /**\n     * Get the columns.\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * The page size to be shown.\n     * Default value: `undefined`\n     * @param {?} val\n     * @return {?}\n     */\n    set limit(val) {\n        this._limit = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the limit.\n     * @return {?}\n     */\n    get limit() {\n        return this._limit;\n    }\n    /**\n     * The total count of all rows.\n     * Default value: `0`\n     * @param {?} val\n     * @return {?}\n     */\n    set count(val) {\n        this._count = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the count.\n     * @return {?}\n     */\n    get count() {\n        return this._count;\n    }\n    /**\n     * The current offset ( page - 1 ) shown.\n     * Default value: `0`\n     * @param {?} val\n     * @return {?}\n     */\n    set offset(val) {\n        this._offset = val;\n    }\n    /**\n     * @return {?}\n     */\n    get offset() {\n        return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n    }\n    /**\n     * CSS class applied if the header height if fixed height.\n     * @return {?}\n     */\n    get isFixedHeader() {\n        /** @type {?} */\n        const headerHeight = this.headerHeight;\n        return typeof headerHeight === 'string' ? (/** @type {?} */ (headerHeight)) !== 'auto' : true;\n    }\n    /**\n     * CSS class applied to the root element if\n     * the row heights are fixed heights.\n     * @return {?}\n     */\n    get isFixedRow() {\n        return this.rowHeight !== 'auto';\n    }\n    /**\n     * CSS class applied to root element if\n     * vertical scrolling is enabled.\n     * @return {?}\n     */\n    get isVertScroll() {\n        return this.scrollbarV;\n    }\n    /**\n     * CSS class applied to root element if\n     * virtualization is enabled.\n     * @return {?}\n     */\n    get isVirtualized() {\n        return this.virtualization;\n    }\n    /**\n     * CSS class applied to the root element\n     * if the horziontal scrolling is enabled.\n     * @return {?}\n     */\n    get isHorScroll() {\n        return this.scrollbarH;\n    }\n    /**\n     * CSS class applied to root element is selectable.\n     * @return {?}\n     */\n    get isSelectable() {\n        return this.selectionType !== undefined;\n    }\n    /**\n     * CSS class applied to root is checkbox selection.\n     * @return {?}\n     */\n    get isCheckboxSelection() {\n        return this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * CSS class applied to root if cell selection.\n     * @return {?}\n     */\n    get isCellSelection() {\n        return this.selectionType === SelectionType.cell;\n    }\n    /**\n     * CSS class applied to root if single select.\n     * @return {?}\n     */\n    get isSingleSelection() {\n        return this.selectionType === SelectionType.single;\n    }\n    /**\n     * CSS class added to root element if mulit select\n     * @return {?}\n     */\n    get isMultiSelection() {\n        return this.selectionType === SelectionType.multi;\n    }\n    /**\n     * CSS class added to root element if mulit click select\n     * @return {?}\n     */\n    get isMultiClickSelection() {\n        return this.selectionType === SelectionType.multiClick;\n    }\n    /**\n     * Column templates gathered from `ContentChildren`\n     * if described in your markup.\n     * @param {?} val\n     * @return {?}\n     */\n    set columnTemplates(val) {\n        this._columnTemplates = val;\n        this.translateColumns(val);\n    }\n    /**\n     * Returns the column templates.\n     * @return {?}\n     */\n    get columnTemplates() {\n        return this._columnTemplates;\n    }\n    /**\n     * Returns if all rows are selected.\n     * @return {?}\n     */\n    get allRowsSelected() {\n        /** @type {?} */\n        let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n        if (this.selectAllRowsOnPage) {\n            /** @type {?} */\n            const indexes = this.bodyComponent.indexes;\n            /** @type {?} */\n            const rowsOnPage = indexes.last - indexes.first;\n            allRowsSelected = this.selected.length === rowsOnPage;\n        }\n        return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n    }\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     * @return {?}\n     */\n    ngOnInit() {\n        // need to call this immediatly to size\n        // if the table is hidden the visibility\n        // listener will invoke this itself upon show\n        this.recalculate();\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // this has to be done to prevent the change detection\n        // tree from freaking out because we are readjusting\n        if (typeof requestAnimationFrame === 'undefined') {\n            return;\n        }\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        () => {\n            this.recalculate();\n            // emit page for virtual server-side kickoff\n            if (this.externalPaging && this.scrollbarV) {\n                this.page.emit({\n                    count: this.count,\n                    pageSize: this.pageSize,\n                    limit: this.limit,\n                    offset: 0\n                });\n            }\n        }));\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.columnTemplates.changes.subscribe((/**\n         * @param {?} v\n         * @return {?}\n         */\n        v => this.translateColumns(v)));\n        this.listenForColumnInputChanges();\n    }\n    /**\n     * Translates the templates to the column objects\n     * @param {?} val\n     * @return {?}\n     */\n    translateColumns(val) {\n        if (val) {\n            /** @type {?} */\n            const arr = val.toArray();\n            if (arr.length) {\n                this._internalColumns = translateTemplates(arr);\n                setColumnDefaults(this._internalColumns);\n                this.recalculateColumns();\n                this.sortInternalRows();\n                this.cd.markForCheck();\n            }\n        }\n    }\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param {?} originalArray the original array passed via parameter\n     * @param {?} groupBy\n     * @return {?}\n     */\n    groupArrayBy(originalArray, groupBy) {\n        // create a map to hold groups with their corresponding results\n        /** @type {?} */\n        const map = new Map();\n        /** @type {?} */\n        let i = 0;\n        originalArray.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            /** @type {?} */\n            const key = item[groupBy];\n            if (!map.has(key)) {\n                map.set(key, [item]);\n            }\n            else {\n                map.get(key).push(item);\n            }\n            i++;\n        }));\n        /** @type {?} */\n        const addGroup = (/**\n         * @param {?} key\n         * @param {?} value\n         * @return {?}\n         */\n        (key, value) => {\n            return { key, value };\n        });\n        // convert map back to a simple array of objects\n        return Array.from(map, (/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => addGroup(x[0], x[1])));\n    }\n    /*\n       * Lifecycle hook that is called when Angular dirty checks a directive.\n       */\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.rows)) {\n            if (!this.externalSorting) {\n                this.sortInternalRows();\n            }\n            else {\n                this._internalRows = [...this.rows];\n            }\n            // auto group by parent on new update\n            this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n            this.recalculatePages();\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     * @return {?}\n     */\n    recalculate() {\n        this.recalculateDims();\n        this.recalculateColumns();\n    }\n    /**\n     * Window resize handler to update sizes.\n     * @return {?}\n     */\n    onWindowResize() {\n        this.recalculate();\n    }\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     * @param {?=} columns\n     * @param {?=} forceIdx\n     * @param {?=} allowBleed\n     * @return {?}\n     */\n    recalculateColumns(columns = this._internalColumns, forceIdx = -1, allowBleed = this.scrollbarH) {\n        if (!columns)\n            return undefined;\n        /** @type {?} */\n        let width = this._innerWidth;\n        if (this.scrollbarV) {\n            width = width - this.scrollbarHelper.width;\n        }\n        if (this.columnMode === ColumnMode.force) {\n            forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n        }\n        else if (this.columnMode === ColumnMode.flex) {\n            adjustColumnWidths(columns, width);\n        }\n        return columns;\n    }\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     * @return {?}\n     */\n    recalculateDims() {\n        /** @type {?} */\n        const dims = this.dimensionsHelper.getDimensions(this.element);\n        this._innerWidth = Math.floor(dims.width);\n        if (this.scrollbarV) {\n            /** @type {?} */\n            let height = dims.height;\n            if (this.headerHeight)\n                height = height - this.headerHeight;\n            if (this.footerHeight)\n                height = height - this.footerHeight;\n            this.bodyHeight = height;\n        }\n        this.recalculatePages();\n    }\n    /**\n     * Recalculates the pages after a update.\n     * @return {?}\n     */\n    recalculatePages() {\n        this.pageSize = this.calcPageSize();\n        this.rowCount = this.calcRowCount();\n    }\n    /**\n     * Body triggered a page event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onBodyPage({ offset }) {\n        // Avoid pagination caming from body events like scroll when the table\n        // has no virtualization and the external paging is enable.\n        // This means, let's the developer handle pagination by my him(her) self\n        if (this.externalPaging && !this.virtualization) {\n            return;\n        }\n        this.offset = offset;\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    }\n    /**\n     * The body triggered a scroll event.\n     * @param {?} event\n     * @return {?}\n     */\n    onBodyScroll(event) {\n        this._offsetX.next(event.offsetX);\n        this.scroll.emit(event);\n        this.cd.detectChanges();\n    }\n    /**\n     * The footer triggered a page event.\n     * @param {?} event\n     * @return {?}\n     */\n    onFooterPage(event) {\n        this.offset = event.page - 1;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n    }\n    /**\n     * Recalculates the sizes of the page\n     * @param {?=} val\n     * @return {?}\n     */\n    calcPageSize(val = this.rows) {\n        // Keep the page size constant even if the row has been expanded.\n        // This is because an expanded row is still considered to be a child of\n        // the original row.  Hence calculation would use rowHeight only.\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const size = Math.ceil(this.bodyHeight / ((/** @type {?} */ (this.rowHeight))));\n            return Math.max(size, 0);\n        }\n        // if limit is passed, we are paging\n        if (this.limit !== undefined) {\n            return this.limit;\n        }\n        // otherwise use row length\n        if (val) {\n            return val.length;\n        }\n        // other empty :(\n        return 0;\n    }\n    /**\n     * Calculates the row count.\n     * @param {?=} val\n     * @return {?}\n     */\n    calcRowCount(val = this.rows) {\n        if (!this.externalPaging) {\n            if (!val)\n                return 0;\n            if (this.groupedRows) {\n                return this.groupedRows.length;\n            }\n            else if (this.treeFromRelation != null && this.treeToRelation != null) {\n                return this._internalRows.length;\n            }\n            else {\n                return val.length;\n            }\n        }\n        return this.count;\n    }\n    /**\n     * The header triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnContextmenu({ event, column }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n    }\n    /**\n     * The body triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onRowContextmenu({ event, row }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n    }\n    /**\n     * The header triggered a column resize event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnResize({ column, newValue }) {\n        /* Safari/iOS 10.2 workaround */\n        if (column === undefined) {\n            return;\n        }\n        /** @type {?} */\n        let idx;\n        /** @type {?} */\n        const cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @param {?} i\n         * @return {?}\n         */\n        (c, i) => {\n            c = Object.assign({}, c);\n            if (c.$$id === column.$$id) {\n                idx = i;\n                c.width = newValue;\n                // set this so we can force the column\n                // width distribution to be to this value\n                c.$$oldWidth = newValue;\n            }\n            return c;\n        }));\n        this.recalculateColumns(cols, idx);\n        this._internalColumns = cols;\n        this.resize.emit({\n            column,\n            newValue\n        });\n    }\n    /**\n     * The header triggered a column re-order event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnReorder({ column, newValue, prevValue }) {\n        /** @type {?} */\n        const cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => {\n            return Object.assign({}, c);\n        }));\n        if (this.swapColumns) {\n            /** @type {?} */\n            const prevCol = cols[newValue];\n            cols[newValue] = column;\n            cols[prevValue] = prevCol;\n        }\n        else {\n            if (newValue > prevValue) {\n                /** @type {?} */\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i < newValue; i++) {\n                    cols[i] = cols[i + 1];\n                }\n                cols[newValue] = movedCol;\n            }\n            else {\n                /** @type {?} */\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i > newValue; i--) {\n                    cols[i] = cols[i - 1];\n                }\n                cols[newValue] = movedCol;\n            }\n        }\n        this._internalColumns = cols;\n        this.reorder.emit({\n            column,\n            newValue,\n            prevValue\n        });\n    }\n    /**\n     * The header triggered a column sort event.\n     * @param {?} event\n     * @return {?}\n     */\n    onColumnSort(event) {\n        // clean selected rows\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n        this.sorts = event.sorts;\n        // this could be optimized better since it will resort\n        // the rows again on the 'push' detection...\n        if (this.externalSorting === false) {\n            // don't use normal setter so we don't resort\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // Always go to first page when sorting to see the newly sorted data\n        this.offset = 0;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.sort.emit(event);\n    }\n    /**\n     * Toggle all row selection\n     * @param {?} event\n     * @return {?}\n     */\n    onHeaderSelect(event) {\n        if (this.selectAllRowsOnPage) {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            const first = this.bodyComponent.indexes.first;\n            /** @type {?} */\n            const last = this.bodyComponent.indexes.last;\n            /** @type {?} */\n            const allSelected = this.selected.length === last - first;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this._internalRows.slice(first, last));\n            }\n        }\n        else {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            const allSelected = this.selected.length === this.rows.length;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this.rows);\n            }\n        }\n        this.select.emit({\n            selected: this.selected\n        });\n    }\n    /**\n     * A row was selected from body\n     * @param {?} event\n     * @return {?}\n     */\n    onBodySelect(event) {\n        this.select.emit(event);\n    }\n    /**\n     * A row was expanded or collapsed for tree\n     * @param {?} event\n     * @return {?}\n     */\n    onTreeAction(event) {\n        /** @type {?} */\n        const row = event.row;\n        // TODO: For duplicated items this will not work\n        /** @type {?} */\n        const rowIndex = this._rows.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => r[this.treeToRelation] === event.row[this.treeToRelation]));\n        this.treeAction.emit({ row, rowIndex });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        subscription => subscription.unsubscribe()));\n    }\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     * @private\n     * @return {?}\n     */\n    listenForColumnInputChanges() {\n        this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.columnTemplates) {\n                this.columnTemplates.notifyOnChanges();\n            }\n        })));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    sortInternalRows() {\n        this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n    }\n}\nDatatableComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-datatable',\n                template: \"<div visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    class: 'ngx-datatable'\n                },\n                styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;-webkit-transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"]\n            }] }\n];\n/** @nocollapse */\nDatatableComponent.ctorParameters = () => [\n    { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n    { type: DimensionsHelper, decorators: [{ type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: KeyValueDiffers },\n    { type: ColumnChangesService },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['configuration',] }] }\n];\nDatatableComponent.propDecorators = {\n    targetMarkerTemplate: [{ type: Input }],\n    rows: [{ type: Input }],\n    groupRowsBy: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    columns: [{ type: Input }],\n    selected: [{ type: Input }],\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    columnMode: [{ type: Input }],\n    headerHeight: [{ type: Input }],\n    footerHeight: [{ type: Input }],\n    externalPaging: [{ type: Input }],\n    externalSorting: [{ type: Input }],\n    limit: [{ type: Input }],\n    count: [{ type: Input }],\n    offset: [{ type: Input }],\n    loadingIndicator: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    swapColumns: [{ type: Input }],\n    sortType: [{ type: Input }],\n    sorts: [{ type: Input }],\n    cssClasses: [{ type: Input }],\n    messages: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    groupExpansionDefault: [{ type: Input }],\n    trackByProp: [{ type: Input }],\n    selectAllRowsOnPage: [{ type: Input }],\n    virtualization: [{ type: Input }],\n    treeFromRelation: [{ type: Input }],\n    treeToRelation: [{ type: Input }],\n    summaryRow: [{ type: Input }],\n    summaryHeight: [{ type: Input }],\n    summaryPosition: [{ type: Input }],\n    scroll: [{ type: Output }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }],\n    sort: [{ type: Output }],\n    page: [{ type: Output }],\n    reorder: [{ type: Output }],\n    resize: [{ type: Output }],\n    tableContextmenu: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    isFixedHeader: [{ type: HostBinding, args: ['class.fixed-header',] }],\n    isFixedRow: [{ type: HostBinding, args: ['class.fixed-row',] }],\n    isVertScroll: [{ type: HostBinding, args: ['class.scroll-vertical',] }],\n    isVirtualized: [{ type: HostBinding, args: ['class.virtualized',] }],\n    isHorScroll: [{ type: HostBinding, args: ['class.scroll-horz',] }],\n    isSelectable: [{ type: HostBinding, args: ['class.selectable',] }],\n    isCheckboxSelection: [{ type: HostBinding, args: ['class.checkbox-selection',] }],\n    isCellSelection: [{ type: HostBinding, args: ['class.cell-selection',] }],\n    isSingleSelection: [{ type: HostBinding, args: ['class.single-selection',] }],\n    isMultiSelection: [{ type: HostBinding, args: ['class.multi-selection',] }],\n    isMultiClickSelection: [{ type: HostBinding, args: ['class.multi-click-selection',] }],\n    columnTemplates: [{ type: ContentChildren, args: [DataTableColumnDirective,] }],\n    rowDetail: [{ type: ContentChild, args: [DatatableRowDetailDirective, { static: false },] }],\n    groupHeader: [{ type: ContentChild, args: [DatatableGroupHeaderDirective, { static: false },] }],\n    footer: [{ type: ContentChild, args: [DatatableFooterDirective, { static: false },] }],\n    bodyComponent: [{ type: ViewChild, args: [DataTableBodyComponent, { static: false },] }],\n    headerComponent: [{ type: ViewChild, args: [DataTableHeaderComponent, { static: false },] }],\n    rowIdentity: [{ type: Input }],\n    onWindowResize: [{ type: HostListener, args: ['window:resize',] }]\n};\n__decorate([\n    throttleable(5),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], DatatableComponent.prototype, \"onWindowResize\", null);\nif (false) {\n    /**\n     * Template for the target marker of drag target columns.\n     * @type {?}\n     */\n    DatatableComponent.prototype.targetMarkerTemplate;\n    /**\n     * This attribute allows the user to set a grouped array in the following format:\n     *  [\n     *    {groupid=1} [\n     *      {id=1 name=\"test1\"},\n     *      {id=2 name=\"test2\"},\n     *      {id=3 name=\"test3\"}\n     *    ]},\n     *    {groupid=2>[\n     *      {id=4 name=\"test4\"},\n     *      {id=5 name=\"test5\"},\n     *      {id=6 name=\"test6\"}\n     *    ]}\n     *  ]\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupedRows;\n    /**\n     * List of row objects that should be\n     * represented as selected in the grid.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selected;\n    /**\n     * Enable vertical scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarV;\n    /**\n     * Enable horz scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarH;\n    /**\n     * The row height; which is necessary\n     * to calculate the height for the lazy rendering.\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowHeight;\n    /**\n     * Type of column width distribution formula.\n     * Example: flex, force, standard\n     * @type {?}\n     */\n    DatatableComponent.prototype.columnMode;\n    /**\n     * The minimum header height in pixels.\n     * Pass a falsey for no header\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerHeight;\n    /**\n     * The minimum footer height in pixels.\n     * Pass falsey for no footer\n     * @type {?}\n     */\n    DatatableComponent.prototype.footerHeight;\n    /**\n     * If the table should use external paging\n     * otherwise its assumed that all data is preloaded.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalPaging;\n    /**\n     * If the table should use external sorting or\n     * the built-in basic sorting.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalSorting;\n    /**\n     * Show the linear loading bar.\n     * Default value: `false`\n     * @type {?}\n     */\n    DatatableComponent.prototype.loadingIndicator;\n    /**\n     * Type of row selection. Options are:\n     *\n     *  - `single`\n     *  - `multi`\n     *  - `checkbox`\n     *  - `multiClick`\n     *  - `cell`\n     *\n     * For no selection pass a `falsey`.\n     * Default value: `undefined`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectionType;\n    /**\n     * Enable/Disable ability to re-order columns\n     * by dragging them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorderable;\n    /**\n     * Swap columns on re-order columns or\n     * move them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.swapColumns;\n    /**\n     * The type of sorting\n     * @type {?}\n     */\n    DatatableComponent.prototype.sortType;\n    /**\n     * Array of sorted columns by property and type.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.sorts;\n    /**\n     * Css class overrides\n     * @type {?}\n     */\n    DatatableComponent.prototype.cssClasses;\n    /**\n     * Message overrides for localization\n     *\n     * emptyMessage     [default] = 'No data to display'\n     * totalMessage     [default] = 'total'\n     * selectedMessage  [default] = 'selected'\n     * @type {?}\n     */\n    DatatableComponent.prototype.messages;\n    /**\n     * Row specific classes.\n     * Similar implementation to ngClass.\n     *\n     *  [rowClass]=\"'first second'\"\n     *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowClass;\n    /**\n     * A boolean/function you can use to check whether you want\n     * to select a particular row based on a criteria. Example:\n     *\n     *    (selection) => {\n     *      return selection !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectCheck;\n    /**\n     * A function you can use to check whether you want\n     * to show the checkbox for a particular row based on a criteria. Example:\n     *\n     *    (row, column, value) => {\n     *      return row.name !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.displayCheck;\n    /**\n     * A boolean you can use to set the detault behaviour of rows and groups\n     * whether they will start expanded or not. If ommited the default is NOT expanded.\n     *\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupExpansionDefault;\n    /**\n     * Property to which you can use for custom tracking of rows.\n     * Example: 'name'\n     * @type {?}\n     */\n    DatatableComponent.prototype.trackByProp;\n    /**\n     * Property to which you can use for determining select all\n     * rows on current page or not.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectAllRowsOnPage;\n    /**\n     * A flag for row virtualization on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.virtualization;\n    /**\n     * Tree from relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeFromRelation;\n    /**\n     * Tree to relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeToRelation;\n    /**\n     * A flag for switching summary row on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryRow;\n    /**\n     * A height of summary row\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryHeight;\n    /**\n     * A property holds a summary row position: top/bottom\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryPosition;\n    /**\n     * Body was scrolled typically in a `scrollbarV:true` scenario.\n     * @type {?}\n     */\n    DatatableComponent.prototype.scroll;\n    /**\n     * A cell or row was focused via keyboard or mouse click.\n     * @type {?}\n     */\n    DatatableComponent.prototype.activate;\n    /**\n     * A cell or row was selected.\n     * @type {?}\n     */\n    DatatableComponent.prototype.select;\n    /**\n     * Column sort was invoked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.sort;\n    /**\n     * The table was paged either triggered by the pager or the body scroll.\n     * @type {?}\n     */\n    DatatableComponent.prototype.page;\n    /**\n     * Columns were re-ordered.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorder;\n    /**\n     * Column was resized.\n     * @type {?}\n     */\n    DatatableComponent.prototype.resize;\n    /**\n     * The context menu was invoked on the table.\n     * type indicates whether the header or the body was clicked.\n     * content contains either the column or the row that was clicked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.tableContextmenu;\n    /**\n     * A row was expanded ot collapsed for tree\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeAction;\n    /**\n     * Row Detail templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowDetail;\n    /**\n     * Group Header templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupHeader;\n    /**\n     * Footer template gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.footer;\n    /**\n     * Reference to the body component for manually\n     * invoking functions on the body.\n     * @type {?}\n     */\n    DatatableComponent.prototype.bodyComponent;\n    /**\n     * Reference to the header component for manually\n     * invoking functions on the header.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerComponent;\n    /** @type {?} */\n    DatatableComponent.prototype.element;\n    /** @type {?} */\n    DatatableComponent.prototype._innerWidth;\n    /** @type {?} */\n    DatatableComponent.prototype.pageSize;\n    /** @type {?} */\n    DatatableComponent.prototype.bodyHeight;\n    /** @type {?} */\n    DatatableComponent.prototype.rowCount;\n    /** @type {?} */\n    DatatableComponent.prototype.rowDiffer;\n    /** @type {?} */\n    DatatableComponent.prototype._offsetX;\n    /** @type {?} */\n    DatatableComponent.prototype._limit;\n    /** @type {?} */\n    DatatableComponent.prototype._count;\n    /** @type {?} */\n    DatatableComponent.prototype._offset;\n    /** @type {?} */\n    DatatableComponent.prototype._rows;\n    /** @type {?} */\n    DatatableComponent.prototype._groupRowsBy;\n    /** @type {?} */\n    DatatableComponent.prototype._internalRows;\n    /** @type {?} */\n    DatatableComponent.prototype._internalColumns;\n    /** @type {?} */\n    DatatableComponent.prototype._columns;\n    /** @type {?} */\n    DatatableComponent.prototype._columnTemplates;\n    /** @type {?} */\n    DatatableComponent.prototype._subscriptions;\n    /**\n     * This will be used when displaying or selecting rows.\n     * when tracking/comparing them, we'll use the value of this fn,\n     *\n     * (`fn(x) === fn(y)` instead of `x === y`)\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowIdentity;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.dimensionsHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.columnChangesService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableHeaderCellComponent {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this.sortFn = this.onSort.bind(this);\n        this.selectFn = this.select.emit.bind(this.select);\n        this.cellContext = {\n            column: this.column,\n            sortDir: this.sortDir,\n            sortFn: this.sortFn,\n            allRowsSelected: this.allRowsSelected,\n            selectFn: this.selectFn\n        };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set allRowsSelected(value) {\n        this._allRowsSelected = value;\n        this.cellContext.allRowsSelected = value;\n    }\n    /**\n     * @return {?}\n     */\n    get allRowsSelected() {\n        return this._allRowsSelected;\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get column() {\n        return this._column;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set sorts(val) {\n        this._sorts = val;\n        this.sortDir = this.calcSortDir(val);\n        this.cellContext.sortDir = this.sortDir;\n        this.sortClass = this.calcSortClass(this.sortDir);\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get sorts() {\n        return this._sorts;\n    }\n    /**\n     * @return {?}\n     */\n    get columnCssClasses() {\n        /** @type {?} */\n        let cls = 'datatable-header-cell';\n        if (this.column.sortable)\n            cls += ' sortable';\n        if (this.column.resizeable)\n            cls += ' resizeable';\n        if (this.column.headerClass) {\n            if (typeof this.column.headerClass === 'string') {\n                cls += ' ' + this.column.headerClass;\n            }\n            else if (typeof this.column.headerClass === 'function') {\n                /** @type {?} */\n                const res = this.column.headerClass({\n                    column: this.column\n                });\n                if (typeof res === 'string') {\n                    cls += res;\n                }\n                else if (typeof res === 'object') {\n                    /** @type {?} */\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true)\n                            cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        /** @type {?} */\n        const sortDir = this.sortDir;\n        if (sortDir) {\n            cls += ` sort-active sort-${sortDir}`;\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n        return this.column.headerTemplate === undefined ? this.column.name : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get width() {\n        return this.column.width;\n    }\n    /**\n     * @return {?}\n     */\n    get isCheckboxable() {\n        return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onContextmenu($event) {\n        this.columnContextmenu.emit({ event: $event, column: this.column });\n    }\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    calcSortDir(sorts) {\n        if (sorts && this.column) {\n            /** @type {?} */\n            const sort = sorts.find((/**\n             * @param {?} s\n             * @return {?}\n             */\n            (s) => {\n                return s.prop === this.column.prop;\n            }));\n            if (sort)\n                return sort.dir;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onSort() {\n        if (!this.column.sortable)\n            return;\n        /** @type {?} */\n        const newValue = nextSortDir(this.sortType, this.sortDir);\n        this.sort.emit({\n            column: this.column,\n            prevValue: this.sortDir,\n            newValue\n        });\n    }\n    /**\n     * @param {?} sortDir\n     * @return {?}\n     */\n    calcSortClass(sortDir) {\n        if (sortDir === SortDirection.asc) {\n            return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n        }\n        else if (sortDir === SortDirection.desc) {\n            return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n        }\n        else {\n            return `sort-btn`;\n        }\n    }\n}\nDataTableHeaderCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-header-cell',\n                template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-header-cell'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nDataTableHeaderCellComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableHeaderCellComponent.propDecorators = {\n    sortType: [{ type: Input }],\n    sortAscendingIcon: [{ type: Input }],\n    sortDescendingIcon: [{ type: Input }],\n    isTarget: [{ type: Input }],\n    targetMarkerTemplate: [{ type: Input }],\n    targetMarkerContext: [{ type: Input }],\n    allRowsSelected: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    column: [{ type: Input }],\n    headerHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    sorts: [{ type: Input }],\n    sort: [{ type: Output }],\n    select: [{ type: Output }],\n    columnContextmenu: [{ type: Output }],\n    columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n    name: [{ type: HostBinding, args: ['attr.title',] }],\n    minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n    maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n    width: [{ type: HostBinding, args: ['style.width.px',] }],\n    onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.isTarget;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype._allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.headerHeight;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortClass;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableFooterComponent {\n    constructor() {\n        this.selectedCount = 0;\n        this.page = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get isVisible() {\n        return this.rowCount / this.pageSize > 1;\n    }\n    /**\n     * @return {?}\n     */\n    get curPage() {\n        return this.offset + 1;\n    }\n}\nDataTableFooterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-footer',\n                template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-footer'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTableFooterComponent.propDecorators = {\n    footerHeight: [{ type: Input }],\n    rowCount: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    offset: [{ type: Input }],\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    totalMessage: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    selectedCount: [{ type: Input }],\n    selectedMessage: [{ type: Input }],\n    page: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerHeight;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.rowCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pageSize;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.offset;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.totalMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerTemplate;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.page;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTablePagerComponent {\n    constructor() {\n        this.change = new EventEmitter();\n        this._count = 0;\n        this._page = 1;\n        this._size = 0;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set size(val) {\n        this._size = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set count(val) {\n        this._count = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get count() {\n        return this._count;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set page(val) {\n        this._page = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        /** @type {?} */\n        const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n        return Math.max(count || 0, 1);\n    }\n    /**\n     * @return {?}\n     */\n    canPrevious() {\n        return this.page > 1;\n    }\n    /**\n     * @return {?}\n     */\n    canNext() {\n        return this.page < this.totalPages;\n    }\n    /**\n     * @return {?}\n     */\n    prevPage() {\n        this.selectPage(this.page - 1);\n    }\n    /**\n     * @return {?}\n     */\n    nextPage() {\n        this.selectPage(this.page + 1);\n    }\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    selectPage(page) {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n            this.page = page;\n            this.change.emit({\n                page\n            });\n        }\n    }\n    /**\n     * @param {?=} page\n     * @return {?}\n     */\n    calcPages(page) {\n        /** @type {?} */\n        const pages = [];\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = this.totalPages;\n        /** @type {?} */\n        const maxSize = 5;\n        /** @type {?} */\n        const isMaxSized = maxSize < this.totalPages;\n        page = page || this.page;\n        if (isMaxSized) {\n            startPage = page - Math.floor(maxSize / 2);\n            endPage = page + Math.floor(maxSize / 2);\n            if (startPage < 1) {\n                startPage = 1;\n                endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n            }\n            else if (endPage > this.totalPages) {\n                startPage = Math.max(this.totalPages - maxSize + 1, 1);\n                endPage = this.totalPages;\n            }\n        }\n        for (let num = startPage; num <= endPage; num++) {\n            pages.push({\n                number: num,\n                text: (/** @type {?} */ (((/** @type {?} */ (num)))))\n            });\n        }\n        return pages;\n    }\n}\nDataTablePagerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-pager',\n                template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n                host: {\n                    class: 'datatable-pager'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTablePagerComponent.propDecorators = {\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    size: [{ type: Input }],\n    count: [{ type: Input }],\n    page: [{ type: Input }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.change;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._count;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._page;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._size;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ProgressBarComponent {\n}\nProgressBarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-progress',\n                template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Keys = {\n    up: 38,\n    down: 40,\n    return: 13,\n    escape: 27,\n    left: 37,\n    right: 39,\n};\nKeys[Keys.up] = 'up';\nKeys[Keys.down] = 'down';\nKeys[Keys.return] = 'return';\nKeys[Keys.escape] = 'escape';\nKeys[Keys.left] = 'left';\nKeys[Keys.right] = 'right';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyRowComponent {\n    /**\n     * @param {?} differs\n     * @param {?} scrollbarHelper\n     * @param {?} cd\n     * @param {?} element\n     */\n    constructor(differs, scrollbarHelper, cd, element) {\n        this.differs = differs;\n        this.scrollbarHelper = scrollbarHelper;\n        this.cd = cd;\n        this.treeStatus = 'collapsed';\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this._groupStyles = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this._element = element.nativeElement;\n        this._rowDiffer = differs.find({}).create();\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        this.recalculateColumns(val);\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set innerWidth(val) {\n        if (this._columns) {\n            /** @type {?} */\n            const colByPin = columnsByPin(this._columns);\n            this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        }\n        this._innerWidth = val;\n        this.recalculateColumns();\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offsetX(val) {\n        this._offsetX = val;\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get offsetX() {\n        return this._offsetX;\n    }\n    /**\n     * @return {?}\n     */\n    get cssClass() {\n        /** @type {?} */\n        let cls = 'datatable-body-row';\n        if (this.isSelected) {\n            cls += ' active';\n        }\n        if (this.rowIndex % 2 !== 0) {\n            cls += ' datatable-row-odd';\n        }\n        if (this.rowIndex % 2 === 0) {\n            cls += ' datatable-row-even';\n        }\n        if (this.rowClass) {\n            /** @type {?} */\n            const res = this.rowClass(this.row);\n            if (typeof res === 'string') {\n                cls += ` ${res}`;\n            }\n            else if (typeof res === 'object') {\n                /** @type {?} */\n                const keys = Object.keys(res);\n                for (const k of keys) {\n                    if (res[k] === true) {\n                        cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get columnsTotalWidths() {\n        return this._columnGroupWidths.total;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._rowDiffer.diff(this.row)) {\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * @return {?}\n     */\n    buildStylesByGroup() {\n        this._groupStyles.left = this.calcStylesByGroup('left');\n        this._groupStyles.center = this.calcStylesByGroup('center');\n        this._groupStyles.right = this.calcStylesByGroup('right');\n        this.cd.markForCheck();\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    calcStylesByGroup(group) {\n        /** @type {?} */\n        const widths = this._columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            const totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            const offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    onActivate(event, index) {\n        event.cellIndex = index;\n        event.rowElement = this._element;\n        this.activate.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isTargetRow = event.target === this._element;\n        /** @type {?} */\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetRow) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                rowElement: this._element\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseenter(event) {\n        this.activate.emit({\n            type: 'mouseenter',\n            event,\n            row: this.row,\n            rowElement: this._element\n        });\n    }\n    /**\n     * @param {?=} val\n     * @return {?}\n     */\n    recalculateColumns(val = this.columns) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(this._columns);\n        this._columnsByPin = columnsByPinArr(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n    }\n    /**\n     * @return {?}\n     */\n    onTreeAction() {\n        this.treeAction.emit();\n    }\n}\nDataTableBodyRowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body-row',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nDataTableBodyRowComponent.ctorParameters = () => [\n    { type: KeyValueDiffers },\n    { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nDataTableBodyRowComponent.propDecorators = {\n    columns: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    expanded: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    row: [{ type: Input }],\n    group: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    rowIndex: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    treeStatus: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    cssClass: [{ type: HostBinding, args: ['class',] }],\n    rowHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    columnsTotalWidths: [{ type: HostBinding, args: ['style.width.px',] }],\n    activate: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onMouseenter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.expanded;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.row;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.group;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.isSelected;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowIndex;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeStatus;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._element;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._groupStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype._rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableRowWrapperComponent {\n    /**\n     * @param {?} cd\n     * @param {?} differs\n     */\n    constructor(cd, differs) {\n        this.cd = cd;\n        this.differs = differs;\n        this.rowContextmenu = new EventEmitter(false);\n        this.groupContext = {\n            group: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this.rowContext = {\n            row: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this._expanded = false;\n        this.rowDiffer = differs.find({}).create();\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.rowContext.rowIndex = val;\n        this.groupContext.rowIndex = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set expanded(val) {\n        this._expanded = val;\n        this.groupContext.expanded = val;\n        this.rowContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.row)) {\n            this.rowContext.row = this.row;\n            this.groupContext.group = this.row;\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onContextmenu($event) {\n        this.rowContextmenu.emit({ event: $event, row: this.row });\n    }\n    /**\n     * @return {?}\n     */\n    getGroupHeaderStyle() {\n        /** @type {?} */\n        const styles = {};\n        styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n        styles['backface-visibility'] = 'hidden';\n        styles['width'] = this.innerWidth;\n        return styles;\n    }\n}\nDataTableRowWrapperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-row-wrapper',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-row-wrapper'\n                }\n            }] }\n];\n/** @nocollapse */\nDataTableRowWrapperComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: KeyValueDiffers }\n];\nDataTableRowWrapperComponent.propDecorators = {\n    innerWidth: [{ type: Input }],\n    rowDetail: [{ type: Input }],\n    groupHeader: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    detailRowHeight: [{ type: Input }],\n    row: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    rowContextmenu: [{ type: Output }],\n    rowIndex: [{ type: Input }],\n    expanded: [{ type: Input }],\n    onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.detailRowHeight;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.row;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupContext;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyCellComponent {\n    /**\n     * @param {?} element\n     * @param {?} cd\n     */\n    constructor(element, cd) {\n        this.cd = cd;\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.cellContext = {\n            onCheckboxChangeFn: this.onCheckboxChangeFn,\n            activateFn: this.activateFn,\n            row: this.row,\n            group: this.group,\n            value: this.value,\n            column: this.column,\n            rowHeight: this.rowHeight,\n            isSelected: this.isSelected,\n            rowIndex: this.rowIndex,\n            treeStatus: this.treeStatus,\n            onTreeAction: this.onTreeAction.bind(this)\n        };\n        this._element = element.nativeElement;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    set group(group) {\n        this._group = group;\n        this.cellContext.group = group;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get group() {\n        return this._group;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowHeight(val) {\n        this._rowHeight = val;\n        this.cellContext.rowHeight = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set isSelected(val) {\n        this._isSelected = val;\n        this.cellContext.isSelected = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get isSelected() {\n        return this._isSelected;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set expanded(val) {\n        this._expanded = val;\n        this.cellContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.cellContext.rowIndex = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get column() {\n        return this._column;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    set row(row) {\n        this._row = row;\n        this.cellContext.row = row;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get row() {\n        return this._row;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set sorts(val) {\n        this._sorts = val;\n        this.calcSortDir = this.calcSortDir(val);\n    }\n    /**\n     * @return {?}\n     */\n    get sorts() {\n        return this._sorts;\n    }\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    set treeStatus(status) {\n        if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n            this._treeStatus = 'collapsed';\n        }\n        else {\n            this._treeStatus = status;\n        }\n        this.cellContext.treeStatus = this._treeStatus;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get treeStatus() {\n        return this._treeStatus;\n    }\n    /**\n     * @return {?}\n     */\n    get columnCssClasses() {\n        /** @type {?} */\n        let cls = 'datatable-body-cell';\n        if (this.column.cellClass) {\n            if (typeof this.column.cellClass === 'string') {\n                cls += ' ' + this.column.cellClass;\n            }\n            else if (typeof this.column.cellClass === 'function') {\n                /** @type {?} */\n                const res = this.column.cellClass({\n                    row: this.row,\n                    group: this.group,\n                    column: this.column,\n                    value: this.value,\n                    rowHeight: this.rowHeight\n                });\n                if (typeof res === 'string') {\n                    cls += res;\n                }\n                else if (typeof res === 'object') {\n                    /** @type {?} */\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true) {\n                            cls += ` ${k}`;\n                        }\n                    }\n                }\n            }\n        }\n        if (!this.sortDir) {\n            cls += ' sort-active';\n        }\n        if (this.isFocused) {\n            cls += ' active';\n        }\n        if (this.sortDir === SortDirection.asc) {\n            cls += ' sort-asc';\n        }\n        if (this.sortDir === SortDirection.desc) {\n            cls += ' sort-desc';\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get width() {\n        return this.column.width;\n    }\n    /**\n     * @return {?}\n     */\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get height() {\n        /** @type {?} */\n        const height = this.rowHeight;\n        if (isNaN(height)) {\n            return height;\n        }\n        return height + 'px';\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        this.checkValueUpdates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkValueUpdates() {\n        /** @type {?} */\n        let value = '';\n        if (!this.row || !this.column) {\n            value = '';\n        }\n        else {\n            /** @type {?} */\n            const val = this.column.$$valueGetter(this.row, this.column.prop);\n            /** @type {?} */\n            const userPipe = this.column.pipe;\n            if (userPipe) {\n                value = userPipe.transform(val);\n            }\n            else if (value !== undefined) {\n                value = val;\n            }\n        }\n        if (this.value !== value) {\n            this.value = value;\n            this.cellContext.value = value;\n            this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        this.isFocused = true;\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.isFocused = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        this.activate.emit({\n            type: 'click',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDblClick(event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isTargetCell = event.target === this._element;\n        /** @type {?} */\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                group: this.group,\n                rowHeight: this.rowHeight,\n                column: this.column,\n                value: this.value,\n                cellElement: this._element\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onCheckboxChange(event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element,\n            treeStatus: 'collapsed'\n        });\n    }\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    calcSortDir(sorts) {\n        if (!sorts) {\n            return;\n        }\n        /** @type {?} */\n        const sort = sorts.find((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => {\n            return s.prop === this.column.prop;\n        }));\n        if (sort) {\n            return sort.dir;\n        }\n    }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    stripHtml(html) {\n        if (!html.replace) {\n            return html;\n        }\n        return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    }\n    /**\n     * @return {?}\n     */\n    onTreeAction() {\n        this.treeAction.emit(this.row);\n    }\n    /**\n     * @param {?} column\n     * @param {?} row\n     * @return {?}\n     */\n    calcLeftMargin(column, row) {\n        /** @type {?} */\n        const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n        return column.isTreeColumn ? row.level * levelIndent : 0;\n    }\n}\nDataTableBodyCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body-cell',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nDataTableBodyCellComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nDataTableBodyCellComponent.propDecorators = {\n    displayCheck: [{ type: Input }],\n    group: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    expanded: [{ type: Input }],\n    rowIndex: [{ type: Input }],\n    column: [{ type: Input }],\n    row: [{ type: Input }],\n    sorts: [{ type: Input }],\n    treeStatus: [{ type: Input }],\n    activate: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    cellTemplate: [{ type: ViewChild, args: ['cellTemplate', { read: ViewContainerRef, static: true },] }],\n    columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n    width: [{ type: HostBinding, args: ['style.width.px',] }],\n    minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n    maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n    height: [{ type: HostBinding, args: ['style.height',] }],\n    onFocus: [{ type: HostListener, args: ['focus',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n    onDblClick: [{ type: HostListener, args: ['dblclick', ['$event'],] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellTemplate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sanitizedValue;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.value;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.isFocused;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.onCheckboxChangeFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activateFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._isSelected;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._row;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._group;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._treeStatus;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selected\n * @param {?} row\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRows(selected, row, comparefn) {\n    /** @type {?} */\n    const selectedIndex = comparefn(row, selected);\n    if (selectedIndex > -1) {\n        selected.splice(selectedIndex, 1);\n    }\n    else {\n        selected.push(row);\n    }\n    return selected;\n}\n/**\n * @param {?} selected\n * @param {?} rows\n * @param {?} index\n * @param {?} prevIndex\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n    /** @type {?} */\n    const reverse = index < prevIndex;\n    for (let i = 0; i < rows.length; i++) {\n        /** @type {?} */\n        const row = rows[i];\n        /** @type {?} */\n        const greater = i >= prevIndex && i <= index;\n        /** @type {?} */\n        const lesser = i <= prevIndex && i >= index;\n        /** @type {?} */\n        let range = { start: 0, end: 0 };\n        if (reverse) {\n            range = {\n                start: index,\n                end: prevIndex\n            };\n        }\n        else {\n            range = {\n                start: prevIndex,\n                end: index + 1\n            };\n        }\n        if ((reverse && lesser) || (!reverse && greater)) {\n            // if in the positive range to be added to `selected`, and\n            // not already in the selected array, add it\n            if (i >= range.start && i <= range.end) {\n                selected.push(row);\n            }\n        }\n    }\n    return selected;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Model() { }\nif (false) {\n    /** @type {?} */\n    Model.prototype.type;\n    /** @type {?} */\n    Model.prototype.event;\n    /** @type {?} */\n    Model.prototype.row;\n    /** @type {?} */\n    Model.prototype.rowElement;\n    /** @type {?} */\n    Model.prototype.cellElement;\n    /** @type {?} */\n    Model.prototype.cellIndex;\n}\nclass DataTableSelectionComponent {\n    constructor() {\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @param {?} row\n     * @return {?}\n     */\n    selectRow(event, index, row) {\n        if (!this.selectEnabled)\n            return;\n        /** @type {?} */\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        const multi = this.selectionType === SelectionType.multi;\n        /** @type {?} */\n        const multiClick = this.selectionType === SelectionType.multiClick;\n        /** @type {?} */\n        let selected = [];\n        if (multi || chkbox || multiClick) {\n            if (event.shiftKey) {\n                selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n            }\n            else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n                selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n            }\n            else {\n                selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n            }\n        }\n        else {\n            selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n        }\n        if (typeof this.selectCheck === 'function') {\n            selected = selected.filter(this.selectCheck.bind(this));\n        }\n        this.selected.splice(0, this.selected.length);\n        this.selected.push(...selected);\n        this.prevIndex = index;\n        this.select.emit({\n            selected\n        });\n    }\n    /**\n     * @param {?} model\n     * @param {?} index\n     * @return {?}\n     */\n    onActivate(model, index) {\n        const { type, event, row } = model;\n        /** @type {?} */\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n        if (select) {\n            this.selectRow(event, index, row);\n        }\n        else if (type === 'keydown') {\n            if (((/** @type {?} */ (event))).keyCode === Keys.return) {\n                this.selectRow(event, index, row);\n            }\n            else {\n                this.onKeyboardFocus(model);\n            }\n        }\n        this.activate.emit(model);\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    onKeyboardFocus(model) {\n        const { keyCode } = (/** @type {?} */ (model.event));\n        /** @type {?} */\n        const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n        if (shouldFocus) {\n            /** @type {?} */\n            const isCellSelection = this.selectionType === SelectionType.cell;\n            if (!model.cellElement || !isCellSelection) {\n                this.focusRow(model.rowElement, keyCode);\n            }\n            else if (isCellSelection) {\n                this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n            }\n        }\n    }\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    focusRow(rowElement, keyCode) {\n        /** @type {?} */\n        const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n        if (nextRowElement)\n            nextRowElement.focus();\n    }\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    getPrevNextRow(rowElement, keyCode) {\n        /** @type {?} */\n        const parentElement = rowElement.parentElement;\n        if (parentElement) {\n            /** @type {?} */\n            let focusElement;\n            if (keyCode === Keys.up) {\n                focusElement = parentElement.previousElementSibling;\n            }\n            else if (keyCode === Keys.down) {\n                focusElement = parentElement.nextElementSibling;\n            }\n            if (focusElement && focusElement.children.length) {\n                return focusElement.children[0];\n            }\n        }\n    }\n    /**\n     * @param {?} cellElement\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @param {?} cellIndex\n     * @return {?}\n     */\n    focusCell(cellElement, rowElement, keyCode, cellIndex) {\n        /** @type {?} */\n        let nextCellElement;\n        if (keyCode === Keys.left) {\n            nextCellElement = cellElement.previousElementSibling;\n        }\n        else if (keyCode === Keys.right) {\n            nextCellElement = cellElement.nextElementSibling;\n        }\n        else if (keyCode === Keys.up || keyCode === Keys.down) {\n            /** @type {?} */\n            const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n            if (nextRowElement) {\n                /** @type {?} */\n                const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n                if (children.length)\n                    nextCellElement = children[cellIndex];\n            }\n        }\n        if (nextCellElement)\n            nextCellElement.focus();\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    getRowSelected(row) {\n        return this.getRowSelectedIdx(row, this.selected) > -1;\n    }\n    /**\n     * @param {?} row\n     * @param {?} selected\n     * @return {?}\n     */\n    getRowSelectedIdx(row, selected) {\n        if (!selected || !selected.length)\n            return -1;\n        /** @type {?} */\n        const rowId = this.rowIdentity(row);\n        return selected.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => {\n            /** @type {?} */\n            const id = this.rowIdentity(r);\n            return id === rowId;\n        }));\n    }\n}\nDataTableSelectionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-selection',\n                template: `\n    <ng-content></ng-content>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTableSelectionComponent.propDecorators = {\n    rows: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectEnabled: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    rowIdentity: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selected;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectEnabled;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.activate;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.select;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.prevIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ISummaryColumn() { }\nif (false) {\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryFunc;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryTemplate;\n    /** @type {?} */\n    ISummaryColumn.prototype.prop;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.pipe;\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction defaultSumFunc(cells) {\n    /** @type {?} */\n    const cellsWithValues = cells.filter((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    cell => !!cell));\n    if (!cellsWithValues.length) {\n        return null;\n    }\n    if (cellsWithValues.some((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    cell => typeof cell !== 'number'))) {\n        return null;\n    }\n    return cellsWithValues.reduce((/**\n     * @param {?} res\n     * @param {?} cell\n     * @return {?}\n     */\n    (res, cell) => res + cell));\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction noopSumFunc(cells) {\n    return null;\n}\nclass DataTableSummaryRowComponent {\n    constructor() {\n        this.summaryRow = {};\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (!this.columns || !this.rows) {\n            return;\n        }\n        this.updateInternalColumns();\n        this.updateValues();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateInternalColumns() {\n        this._internalColumns = this.columns.map((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => (Object.assign({}, col, { cellTemplate: col.summaryTemplate }))));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateValues() {\n        this.summaryRow = {};\n        this.columns\n            .filter((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => !col.summaryTemplate))\n            .forEach((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => {\n            /** @type {?} */\n            const cellsFromSingleColumn = this.rows.map((/**\n             * @param {?} row\n             * @return {?}\n             */\n            row => row[col.prop]));\n            /** @type {?} */\n            const sumFunc = this.getSummaryFunction(col);\n            this.summaryRow[col.prop] = col.pipe\n                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n                : sumFunc(cellsFromSingleColumn);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} column\n     * @return {?}\n     */\n    getSummaryFunction(column) {\n        if (column.summaryFunc === undefined) {\n            return defaultSumFunc;\n        }\n        else if (column.summaryFunc === null) {\n            return noopSumFunc;\n        }\n        else {\n            return column.summaryFunc;\n        }\n    }\n}\nDataTableSummaryRowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-summary-row',\n                template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n                host: {\n                    class: 'datatable-summary-row'\n                }\n            }] }\n];\nDataTableSummaryRowComponent.propDecorators = {\n    rows: [{ type: Input }],\n    columns: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    innerWidth: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.columns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype._internalColumns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.summaryRow;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxDatatableModule {\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param {?} configuration\n     * @return {?}\n     */\n    static forRoot(configuration) {\n        return {\n            ngModule: NgxDatatableModule,\n            providers: [{ provide: 'configuration', useValue: configuration }]\n        };\n    }\n}\nNgxDatatableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n                declarations: [\n                    DataTableFooterTemplateDirective,\n                    VisibilityDirective,\n                    DraggableDirective,\n                    ResizeableDirective,\n                    OrderableDirective,\n                    LongPressDirective,\n                    ScrollerComponent,\n                    DatatableComponent,\n                    DataTableColumnDirective,\n                    DataTableHeaderComponent,\n                    DataTableHeaderCellComponent,\n                    DataTableBodyComponent,\n                    DataTableFooterComponent,\n                    DataTablePagerComponent,\n                    ProgressBarComponent,\n                    DataTableBodyRowComponent,\n                    DataTableRowWrapperComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableBodyCellComponent,\n                    DataTableSelectionComponent,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DatatableFooterDirective,\n                    DatatableGroupHeaderTemplateDirective,\n                    DataTableSummaryRowComponent\n                ],\n                exports: [\n                    DatatableComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableColumnDirective,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DataTableFooterTemplateDirective,\n                    DatatableFooterDirective,\n                    DataTablePagerComponent,\n                    DatatableGroupHeaderTemplateDirective\n                ]\n            },] }\n];\n/**\n * Interface definition for INgxDatatableConfig global configuration\n * @record\n */\nfunction INgxDatatableConfig() { }\nif (false) {\n    /** @type {?} */\n    INgxDatatableConfig.prototype.messages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ClickType = {\n    single: 'single',\n    double: 'double',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column Type\n * @record\n */\nfunction TableColumn() { }\nif (false) {\n    /**\n     * Internal unique id\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$id;\n    /**\n     * Internal for column width distributions\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$oldWidth;\n    /**\n     * Internal for setColumnDefaults\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$valueGetter;\n    /**\n     * Determines if column is checkbox\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.checkboxable;\n    /**\n     * Determines if the column is frozen to the left\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenLeft;\n    /**\n     * Determines if the column is frozen to the right\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenRight;\n    /**\n     * The grow factor relative to other columns. Same as the flex-grow\n     * API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n     * take any available extra width and distribute it proportionally\n     * according to all columns' flexGrow values.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.flexGrow;\n    /**\n     * Min width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.minWidth;\n    /**\n     * Max width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.maxWidth;\n    /**\n     * The default width of the column, in pixels\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.width;\n    /**\n     * Can the column be resized\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.resizeable;\n    /**\n     * Custom sort comparator\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.comparator;\n    /**\n     * Custom pipe transforms\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.pipe;\n    /**\n     * Can the column be sorted\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.sortable;\n    /**\n     * Can the column be re-arranged by dragging\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.draggable;\n    /**\n     * Whether the column can automatically resize to fill space in the table.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.canAutoResize;\n    /**\n     * Column name or label\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.name;\n    /**\n     * Property to bind to the row. Example:\n     *\n     * `someField` or `some.field.nested`, 0 (numeric)\n     *\n     * If left blank, will use the name as camel case conversion\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.prop;\n    /**\n     * Cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellTemplate;\n    /**\n     * Header template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerTemplate;\n    /**\n     * Tree toggle template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeToggleTemplate;\n    /**\n     * CSS Classes for the cell\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellClass;\n    /**\n     * CSS classes for the header\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerClass;\n    /**\n     * Header checkbox enabled\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerCheckboxable;\n    /**\n     * Is tree displayed on this column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.isTreeColumn;\n    /**\n     * Width of the tree level indent\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeLevelIndent;\n    /**\n     * Summary function\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryFunc;\n    /**\n     * Summary cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryTemplate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SortPropDir() { }\nif (false) {\n    /** @type {?} */\n    SortPropDir.prototype.dir;\n    /** @type {?} */\n    SortPropDir.prototype.prop;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n    document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction elementsFromPoint(x, y) {\n    /** @type {?} */\n    const elements = [];\n    /** @type {?} */\n    const previousPointerEvents = [];\n    /** @type {?} */\n    let current;\n    // TODO: window.getComputedStyle should be used with inferred type (Element)\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let d;\n    //if (document === undefined) return elements;\n    // get all elements via elementFromPoint, and remove them from hit-testing in order\n    while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n        // push the element and its current style\n        elements.push(current);\n        previousPointerEvents.push({\n            value: current.style.getPropertyValue('pointer-events'),\n            priority: current.style.getPropertyPriority('pointer-events')\n        });\n        // add \"pointer-events: none\", to get to the underlying element\n        current.style.setProperty('pointer-events', 'none', 'important');\n    }\n    // restore the previous pointer-events values\n    for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]);) {\n        elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n    }\n    // return our results\n    return elements;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY };\n//# sourceMappingURL=swimlane-ngx-datatable.js.map\n","export default \"<div class=\\\"wrapper\\\">\\n  <app-sidebar></app-sidebar>\\n  <div class=\\\"main-panel\\\">\\n    <app-navbar></app-navbar>\\n    <div class=\\\"main-panel\\\">\\n      <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n    <!--<app-footer></app-footer>-->\\n  </div>\\n  <!--<div class=\\\"fixed-plugin\\\">\\n    <div class=\\\"dropdown show-dropdown\\\">\\n      <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\">\\n        <i class=\\\"fa fa-cog fa-2x\\\"> </i>\\n      </a>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li class=\\\"header-title\\\"> Sidebar Background</li>\\n        <li class=\\\"adjustments-line\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"switch-trigger background-color\\\">\\n            <div class=\\\"badge-colors text-center\\\">\\n              <span class=\\\"badge filter badge-primary active\\\" data-color=\\\"primary\\\"></span>\\n              <span class=\\\"badge filter badge-info\\\" data-color=\\\"blue\\\"></span>\\n              <span class=\\\"badge filter badge-success\\\" data-color=\\\"green\\\"></span>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n          </a>\\n        </li>\\n        <li class=\\\"adjustments-line text-center color-change\\\">\\n          <span class=\\\"color-label\\\">LIGHT MODE</span>\\n          <span class=\\\"badge light-badge mr-2\\\"></span>\\n          <span class=\\\"badge dark-badge ml-2\\\"></span>\\n          <span class=\\\"color-label\\\">DARK MODE</span>\\n        </li>\\n        <li class=\\\"button-container\\\">\\n          <a href=\\\"https://www.creative-tim.com/product/black-dashboard\\\" target=\\\"_blank\\\"\\n            class=\\\"btn btn-primary btn-block btn-round\\\">Download Now</a>\\n          <a href=\\\"https://demos.creative-tim.com/black-dashboard/docs/1.0/getting-started/introduction.html\\\"\\n            target=\\\"_blank\\\" class=\\\"btn btn-default btn-block btn-round\\\">\\n            Documentation\\n          </a>\\n        </li>\\n        <li class=\\\"header-title\\\">Thank you for 95 shares!</li>\\n        <li class=\\\"button-container text-center\\\">\\n          <button id=\\\"twitter\\\" class=\\\"btn btn-round btn-info\\\"><i class=\\\"fab fa-twitter\\\"></i> &middot; 45</button>\\n          <button id=\\\"facebook\\\" class=\\\"btn btn-round btn-info\\\"><i class=\\\"fab fa-facebook-f\\\"></i> &middot; 50</button>\\n          <br>\\n          <br>\\n          <a class=\\\"github-button\\\" href=\\\"https://github.com/creativetimofficial/black-dashboard\\\"\\n            data-icon=\\\"octicon-star\\\" data-size=\\\"large\\\" data-show-count=\\\"true\\\"\\n            aria-label=\\\"Star ntkme/github-buttons on GitHub\\\">Star</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>-->\\n</div>\"","export default \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <ul class=\\\"nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            Creative Tim\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            About Us\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            Blog\\n          </a>\\n        </li>\\n      </ul>\\n      <div class=\\\"copyright\\\">\\n        ©\\n        <script>\\n          document.write(new Date().getFullYear())\\n        </script>2019 construido por \\n        <a href=\\\"javascript:void(0)\\\" target=\\\"_blank\\\">Ventun</a>\\n      </div>\\n    </div>\\n  </footer>\"","export default \"<nav class=\\\"navbar sticky-top navbar-expand-lg\\\" data=\\\"blue\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-wrapper\\\">\\r\\n            <div class=\\\"navbar-toggle d-inline\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\r\\n                    <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\r\\n                    <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\r\\n                    <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <a class=\\\"navbar-brand\\\" style=\\\"top: 0;\\\">\\r\\n                <img src=\\\"/assets/img/ventun.png\\\">\\r\\n            </a>\\r\\n        </div>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navigation\\\">\\r\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                <!--<li class=\\\"input-group\\\">\\r\\n                    <span style=\\\"display: inline;\\\">Equipo Actual: <h2 style=\\\"display: inline; padding: 0!important; margin: 10px 0 0 0!important; top: 20px!important;\\\">{{equipoActual}}</h2></span>\\r\\n                </li>\\r\\n                <li class=\\\"search-bar input-group\\\">\\r\\n                    <button class=\\\"btn btn-link\\\" id=\\\"search-button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchModal\\\"><i\\r\\n                            class=\\\"tim-icons icon-zoom-split\\\"></i>\\r\\n                        <span class=\\\"d-lg-none d-md-block\\\">Empresas</span>\\r\\n                    </button>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown nav-item\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle nav-link\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <div class=\\\"notification d-none d-lg-block d-xl-block\\\"></div>\\r\\n                        <i class=\\\"tim-icons icon-sound-wave\\\"></i>\\r\\n                        <p class=\\\"d-lg-none\\\">\\r\\n                            Notifications\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-menu-right dropdown-navbar\\\">\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"#\\\" class=\\\"nav-item dropdown-item\\\">Mike John responded to your\\r\\n                                email</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">You have 5 more\\r\\n                                tasks</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Your friend\\r\\n                                Michael is in town</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Another\\r\\n                                notification</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Another one</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>-->\\r\\n                <li class=\\\"dropdown nav-item\\\">\\r\\n                    <a class=\\\"dropdown-toggle nav-link\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <div class=\\\"photo\\\">\\r\\n                            <img src=\\\"{{urlGlobal}}{{perfil}}\\\">\\r\\n                        </div>\\r\\n                        <b class=\\\"caret d-none d-lg-block d-xl-block\\\" style=\\\"left: 50px!important;\\\"></b>\\r\\n                        <span>&nbsp;&nbsp;&nbsp;&nbsp;{{userName}}</span>\\r\\n                        <p class=\\\"d-lg-none\\\" (click)=\\\"cerrarSesion();\\\" routerLink=\\\"/sign/login\\\" routerLinkActive=\\\"active\\\">\\r\\n                            Cerrar Sessión\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-navbar\\\">\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\"\\r\\n                                routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\">Perfil</a></li>\\r\\n                        <li class=\\\"dropdown-divider\\\"></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"cerrarSesion();\\\"\\r\\n                                class=\\\"nav-item dropdown-item\\\" routerLink=\\\"/sign/login\\\" routerLinkActive=\\\"active\\\">Cerrar\\r\\n                                Sessión</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"separator d-lg-none\\\"></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-toast></app-toast>\\r\\n</nav>\\r\\n<div class=\\\"modal modal-search fade\\\" id=\\\"searchModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"searchModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <label class=\\\"input-group-text\\\" style=\\\"background-color: var(--primary);width: 80px;\\\" for=\\\"listaEquipos\\\">Equipo</label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"listaEquipos\\\" name=\\\"listaEquipos\\\" #listaEquipos=\\\"ngModel\\\"  (ngModelChange)=\\\"updateEmp($event, true)\\\" [(ngModel)]=\\\"name\\\">\\r\\n                        <option [ngValue]=\\\"undefined\\\" selected>Elige un Equipo...</option>\\r\\n                        <option *ngFor=\\\"let equipo of lista\\\" [(ngValue)]=\\\"equipo.id\\\">{{equipo.valor}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"sidebar\\\" style=\\\"height: 85vh;\\\">\\n  <div class=\\\"logo\\\">\\n    <a class=\\\"simple-text\\\">\\n      <div class=\\\"logo-img\\\" (click)=\\\"minimizeSidebar()\\\">\\n        <img src=\\\"/assets/img/ventun.png\\\" />\\n      </div>\\n    </a>\\n  </div>\\n\\n  <div class=\\\"sidebar-wrapper\\\">\\n    <ul class=\\\"nav\\\">\\n      <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuitem of menuItems\\\">\\n        <!--If is a single link-->\\n        <a [routerLink]=\\\"[menuitem.path]\\\" *ngIf=\\\"menuitem.type === 'link' && menuitem.visible\\\">\\n          <i class=\\\"tim-icons {{ menuitem.icontype }}\\\"></i>\\n          <p>{{ menuitem.title }}</p>\\n        </a>\\n        <!--If it have a submenu-->\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#{{ menuitem.collapse }}\\\" *ngIf=\\\"menuitem.type === 'sub' && menuitem.visible\\\"\\n          (click)=\\\"myFunc($event, menuitem); (menuitem.isCollapsed = !menuitem.isCollapsed)\\\"\\n          [attr.aria-expanded]=\\\"!menuitem.isCollapsed\\\">\\n          <i class=\\\"tim-icons {{ menuitem.icontype }}\\\"></i>\\n          <p>{{ menuitem.title }}<b class=\\\"caret\\\"></b></p>\\n        </a>\\n\\n        <!--Display the submenu items-->\\n        <div id=\\\"{{ menuitem.collapse }}\\\" class=\\\"collapse\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\n          <ul class=\\\"nav\\\">\\n            <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let childitem of menuitem.children\\\">\\n              <a [routerLink]=\\\"[menuitem.path, childitem.path]\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">{{ childitem.ab }}</span>\\n                <span class=\\\"sidebar-normal\\\">{{ childitem.title }}</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n      <li style=\\\"visibility: hidden; height: 80px;\\\"></li>\\n    </ul>\\n  </div>\\n</div>\"","export default \"<div *ngIf=\\\"shouldShowErrors()\\\" class=\\\"roedor\\\">\\n    <p class=\\\"globito\\\" *ngFor=\\\"let error of listOfErrors()\\\">{{error}}</p>\\n</div>\"","export default \"<h3>Agenda el Pedido</h3>\\n<div class=\\\"container\\\">\\n    <!--<div class=\\\"row\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"codigo\\\">Código Pedido</label><br>\\n            <label class=\\\"text-primary\\\" style=\\\"font-size: 3em;\\\">201023000023</label>\\n        </div>\\n    </div>-->\\n    <form (ngSubmit)=\\\"enviar()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <legend class=\\\"col-form-legend col-12\\\">Datos del Clientes</legend>\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"nombreCliente\\\">Nombre del Cliente</label>\\n                <input type=\\\"text\\\" name=\\\"nombreCliente\\\" id=\\\"nombreCliente\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Nombres del Cliente\\\" aria-describedby=\\\"helpNombres\\\" #nombreCliente=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"pedido.nombreCliente\\\" required>\\n                <app-show-errors [control]=\\\"nombreCliente\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"apellidoCliente\\\">Apellidos del Cliente</label>\\n                <input type=\\\"text\\\" name=\\\"apellidoCliente\\\" id=\\\"apellidoCliente\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Apellidos del Cliente\\\" aria-describedby=\\\"helpApellidos\\\" #apellidoCliente=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"pedido.apellidoCliente\\\" required>\\n                <app-show-errors [control]=\\\"apellidoCliente\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"direccion\\\">Dirección del Cliente</label>\\n                <input type=\\\"text\\\" name=\\\"direccion\\\" id=\\\"direccion\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Dirección del Cliente\\\" aria-describedby=\\\"helpDireccion\\\" #direccion=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"pedido.direccion\\\" required>\\n                <app-show-errors [control]=\\\"direccion\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n            <div class=\\\"form-group col-6\\\">\\n                <label for=\\\"telefono\\\">Teléfono del Cliente</label>\\n                <input type=\\\"tel\\\" name=\\\"telefono\\\" id=\\\"telefono\\\" class=\\\"form-control\\\" placeholder=\\\"Teléfono del Cliente\\\"\\n                    minlength=\\\"6\\\" aria-describedby=\\\"helpTelefono\\\" #telefono=\\\"ngModel\\\" [(ngModel)]=\\\"pedido.telefono\\\"\\n                    required>\\n                <app-show-errors [control]=\\\"telefono\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n            <div class=\\\"form-group col-12\\\">\\n                <label for=\\\"telefono\\\">Ubicación según el Mapa</label>\\n                <input type=\\\"text\\\" name=\\\"geolocalizacion\\\" id=\\\"geolocalizacion\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Ubicación según el Mapa\\\" aria-describedby=\\\"helpGeolocalizacion\\\"\\n                    #geolocalizacion=\\\"ngModel\\\" [(ngModel)]=\\\"pedido.geolocalizacion\\\" required>\\n                <app-show-errors [control]=\\\"geolocalizacion\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"contextForm.invalid\\\">Agendar</button>\\n        </div>\\n    </form>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-md-8\\\"></div>\\n        <div class=\\\"col-12 col-md-4\\\" style=\\\"border: 1px solid #e14eca; padding: 10px;\\\">\\n            <div class=\\\"form-group row\\\" *ngFor=\\\"let item of pedido.productos; let i=index\\\">\\n                <label class=\\\"text-muted col-8\\\">{{item.nombre}}</label>\\n                <label class=\\\"text-muted col-4\\\">{{item.cantidad}}<span\\n                        style=\\\"color: red;\\\">x</span>{{item.costo}}</label>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <label class=\\\"text-muted col-6\\\"></label>\\n                <label class=\\\"col-6\\\" style=\\\"color: white; font-size: 1.3em;\\\">Total: {{totalCompra}}bs</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<h3>Compra de Productos</h3>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-6 col-md-9\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"producto card text-white\\\" *ngFor=\\\"let item of productos; let i=index\\\"\\n                style=\\\"margin: 10px!important; width: 200px; background-color: white; border-color: yellow;\\\"\\n                (click)=\\\"comprando(item)\\\">\\n                <img class=\\\"card-img-top\\\" src=\\\"{{urlGlobal}}{{item.imagen}}\\\"\\n                    style=\\\"height: 150px; width: 150px; background-color: white; display: block; margin: auto;\\\"\\n                    alt=\\\"Imágen del producto\\\">\\n                <div class=\\\"card-body\\\" style=\\\"background-color: rgb(25, 92, 179);\\\">\\n                    <div class=\\\"row card-title\\\">\\n                        <h4 class=\\\"col-8\\\" style=\\\"margin-bottom: 0;\\\">{{item.acronym}}</h4>\\n                        <h5 class=\\\"col-4\\\" style=\\\"top: 4px; margin-bottom: 0;\\\">{{item.costo}}bs</h5>\\n                    </div>\\n                    <p class=\\\"card-text\\\">{{item.nombre}}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-6 col-md-3\\\" *ngIf=\\\"compra.length>0\\\">\\n        <div class=\\\"float-buy\\\" style=\\\"width: 100%; overflow: hidden; position: -webkit-sticky; position: sticky; top: 25%; padding: 10px 10px 0 10px;\\\">\\n            <div class=\\\"row\\\">\\n                <h3 class=\\\"col-8\\\">Detalle de la Compra</h3> \\n                <h4 class=\\\"col-4\\\" style=\\\"color: white; top: 20px;\\\">Total: {{totalCompra}}bs</h4>\\n            </div>\\n            <div class=\\\"minus row\\\" *ngFor=\\\"let prod of compra; let i=index\\\"\\n                style=\\\"font-size: 1.2em; color: whitesmoke; margin-bottom: 10px;\\\" (click)=\\\"quitar(prod.id)\\\">\\n                <div class=\\\"col-7\\\">{{prod.nombre}}</div>\\n                <div class=\\\"col\\\">{{prod.cantidad}}<span style=\\\"color: red;\\\">x</span>{{prod.costo}}bs</div>\\n                <div class=\\\"col-2\\\"><i class=\\\"far fa-minus-square fa-lg\\\" style=\\\"color: rgba(255, 0, 0, 0.9);\\\"></i></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <input class=\\\"col-12 btn btn-secondary\\\" type=\\\"button\\\" value=\\\"Comprar\\\" (click)=\\\"comprar()\\\">\\n            </div>\\n            <div class=\\\"row\\\">\\n                <input class=\\\"col-12 btn btn-warning\\\" type=\\\"button\\\" value=\\\"Cancelar\\\" (click)=\\\"cancelar()\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"modal modal-search fade\\\" id=\\\"searchModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"searchModal\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <label class=\\\"input-group-text\\\" style=\\\"background-color: var(--primary);width: 80px;\\\" for=\\\"listaEquipos\\\">Equipo</label>\\n                    </div>\\n                    <select class=\\\"custom-select\\\" id=\\\"listaEquipos\\\" name=\\\"listaEquipos\\\" #listaEquipos=\\\"ngModel\\\"  (ngModelChange)=\\\"updateEmp($event)\\\" [(ngModel)]=\\\"name\\\">\\n                        <option [ngValue]=\\\"undefined\\\" selected>Elige un Equipo...</option>\\n                        <option *ngFor=\\\"let equipo of lista\\\" [(ngValue)]=\\\"equipo.id\\\">{{equipo.valor}}</option>\\n                    </select>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\n    <h2>Mis Asociados</h2>\\n    <div class=\\\"col-6 col-md-4 col-lg-3\\\" style=\\\"margin: 10px; float: left;\\\" *ngFor=\\\"let item of asociados\\\">\\n        <span>{{item.profile.ci}} {{item.profile.expedido | expedido: ListDepts}}</span>\\n        <div class=\\\"row ficha\\\" [routerLink]=\\\"['/descendenciaFicha', item._id]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">\\n            <div class=\\\"col-4\\\">\\n                <ng-container *ngIf=\\\"item.profile?.photo; then conFoto; else sinFoto\\\"></ng-container>\\n                <ng-template #conFoto>\\n                    <img class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{item.profile.photo}}\\\" srcset=\\\"{{urlGlobal}}{{item.profile.photo}} 100w\\\" alt=\\\"Foto de Perfil\\\">\\n                </ng-template>\\n                <ng-template #sinFoto>\\n                    <img class=\\\"foto\\\" src=\\\"assets/img/noPicture.png\\\" srcset=\\\"assets/img/noPicture.png 200w\\\" alt=\\\"Sin foto de Perfil\\\">\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-8\\\" style=\\\"overflow: hidden;\\\">\\n                <p hidden>{{item._id}}</p>\\n                <span class=\\\"row\\\">{{item.profile.firstName}} {{item.profile.lastNameP}}\\n                    {{item.profile.lastNameM}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.phone}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.email}}</span>\\n                <div class=\\\"row\\\" style=\\\"border-top: 1px solid red;\\\">\\n                    <div class=\\\"col-4\\\"><span>1200bs</span></div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>5 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-right\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>6 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-down\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <h2 class=\\\"col-12 col-md-4 card-title\\\">Mis Asociados</h2>\\n            <div class=\\\"col-12 col-md-8 toolbar\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n                        class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\"\\n                    (click)=\\\"refreshFunction($event)\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/invitacion']\\\"\\n                    [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nueva Invitación</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"dataTables_wrapper\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n                        <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\"\\n                            (change)=\\\"entriesChange($event)\\\" style=\\\"width: 100px;\\\">\\n                            <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n                            <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n                            <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n                        </select>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> asociados </label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n                        <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n                        <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n                            style=\\\"width: 100px;\\\">\\n                            <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Activo</option>\\n                            <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Inactivo</option>\\n                            <option value=\\\"2\\\" [selected]=\\\"estado==2\\\">Eliminado</option>\\n                            <option value=\\\"3\\\" [selected]=\\\"estado==3\\\">Deudor</option>\\n                        </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-md-4\\\">\\n                    <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n                        <label>\\n                            <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\"\\n                (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\"\\n                [treeFromRelation]=\\\"parentId\\\" [treeToRelation]=\\\"id\\\" (treeAction)=\\\"onTreeAction($event)\\\">\\n\\n                <ngx-datatable-column name=\\\"C.I.\\\" [isTreeColumn]=\\\"true\\\" prop=\\\"profile.ci\\\" [treeLevelIndent]=\\\"20\\\">{{ci}}\\n\\n                    <ng-template ngx-datatable-tree-toggle let-tree=\\\"cellContext\\\">\\n                        <button [disabled]=\\\"tree.treeStatus === 'disabled'\\\" (click)=\\\"tree.onTreeAction()\\\">\\n                            <span *ngIf=\\\"tree.treeStatus === 'loading'\\\">\\n                                <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'collapsed'\\\">\\n                                <i class=\\\"fas fa-level-up-alt\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'expanded'\\\">\\n                                <i class=\\\"fas fa-level-down-alt\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'disabled'\\\">\\n                                <i class=\\\"fas fa-skull-crossbones\\\"></i>\\n                            </span>\\n                        </button>\\n                    </ng-template>\\n\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Nombre\\\" prop=\\\"profile.firstName\\\">{{firstName}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Apellido Paterno\\\" prop=\\\"profile.lastNameP\\\">{{lastNameP}}\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Apellido Materno\\\" prop=\\\"profile.lastNameM\\\">{{lastNameM}}\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Estado\\\">\\n                    <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n                        <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n                            Activo\\n                        </ng-container>\\n                        <ng-template #elseTemplate>\\n                            Inactivo\\n                        </ng-template>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n\\n                <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n                    [resizeable]=\\\"false\\\">\\n                    <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n                        let-selectFn=\\\"selectFn\\\">\\n                        Ficha\\n                    </ng-template>\\n                    <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\"\\n                        let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n                        <a class=\\\"btn btn-round btn-warning btn-icon btn-sm\\\" (click)=\\\"deleteFunction($event)\\\">\\n                            <i class=\\\"far fa-id-badge\\\" style=\\\"margin-top: 7px;\\\"></i></a> <!-- [routerLink]=\\\"['/descendenciaFicha', profile.firstName]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">-->\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-user card\\\">\\n    <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\">Asociado {{title}}</h4>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <ul class=\\\"nav nav-tabs card-header-tabs\\\" style=\\\"margin-left: 0.1em!important;\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#resumen\\\" data-toggle=\\\"pill\\\" class=\\\"nav-link active\\\">Resumen</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#cuotas\\\" data-toggle=\\\"pill\\\" class=\\\"nav-link\\\">Cuotas</a>\\n            </li>\\n        </ul>\\n        <div class=\\\"tab-content\\\" id=\\\"descendenciaTab\\\">\\n            <div class=\\\"tab-pane fade show active container\\\" id=\\\"resumen\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"resumen-tab\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                        <h4>Información Personal</h4>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"ci\\\">C.I.</label>\\n                            <span id=\\\"ci\\\" name=\\\"ci\\\">{{person.profile?.ci}} {{person.profile?.expedido | expedido: ListDepts}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"nombre\\\">Nombre</label>\\n                            <span id=\\\"nombre\\\" name=\\\"nombre\\\">{{person.profile?.lastNameP}} {{person.profile?.lastNameM}}\\n                                {{person.profile?.firstName}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"fecha\\\">Fecha de Naciemiento</label>\\n                            <span id=\\\"fecha\\\" name=\\\"fecha\\\">{{person.profile?.birthDate | date: 'shortDate'}}</span>\\n                        </div>\\n                        <br>\\n                        <h4>Datos de Contacto</h4>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"phone\\\">Teléfono</label>\\n                            <span id=\\\"phone\\\" name=\\\"phone\\\">{{person.contact?.phone}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"email\\\">e-mail</label>\\n                            <span id=\\\"email\\\" name=\\\"email\\\">{{person.contact?.email}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"web\\\">Página web</label>\\n                            <span id=\\\"web\\\" name=\\\"web\\\">{{person.contact?.web}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"country\\\">País</label>\\n                            <span id=\\\"country\\\" name=\\\"country\\\">{{person.contact?.address?.country | nombre: ListDepts}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"state\\\">Departamento</label>\\n                            <span id=\\\"state\\\" name=\\\"state\\\">{{person.contact?.address?.state.id | nombre: ListDepts}}</span><!--valor en lugar de id-->\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"city\\\">Ciudad</label>\\n                            <span id=\\\"city\\\" name=\\\"city\\\">{{person.contact?.address?.city.id | nombre: ListDepts}}</span><!--valor en lugar de id-->\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"especificLocation\\\">Dirección</label>\\n                            <span id=\\\"especificLocation\\\"\\n                                name=\\\"especificLocation\\\">{{person.contact?.address?.especificLocation}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-6\\\">\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"foto\\\">Fotografía</label>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <img id=\\\"foto\\\" style=\\\"width: 250px\\\" name=\\\"foto\\\" class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{person.profile?.photo}}\\\"\\n                                srcset=\\\"{{urlGlobal}}{{person.profile?.photo}} 200w\\\" alt=\\\"Sin foto de Perfil\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"tab-pane fade container\\\" id=\\\"cuotas\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"cuotas-tab\\\">\\n                <div class=\\\"row\\\">\\n                    <!--<div class=\\\"update ml-auto mr-auto\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"saveService()\\\">Save</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"cancelStaff()\\\">Cancel</button>\\n                        <a href=\\\"#profile\\\" class=\\\"nav-link btn btn-primary\\\">Profile</a>\\n                    </div>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"col-4 col-md-3\\\" style=\\\"margin: 10px; float: left;\\\" *ngFor=\\\"let item of asociados\\\">\\n        <div class=\\\"row ficha\\\" (click)=\\\"verAsociado(item._id)\\\">\\n            <!--[routerLink]=\\\"['/descendenciaFicha', item._id]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">-->\\n            <div class=\\\"col-4\\\">\\n                <ng-container *ngIf=\\\"item.profile?.photo; then conFoto; else sinFoto\\\"></ng-container>\\n                <ng-template #conFoto>\\n                    <img class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{item.profile.photo}}\\\" srcset=\\\"{{urlGlobal}}{{item.profile.photo}} 100w\\\"\\n                        alt=\\\"Foto de Perfil\\\">\\n                </ng-template>\\n                <ng-template #sinFoto>\\n                    <img class=\\\"foto\\\" src=\\\"assets/img/noPicture.png\\\" srcset=\\\"assets/img/noPicture.png 200w\\\"\\n                        alt=\\\"Sin foto de Perfil\\\">\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-8\\\">\\n                <p hidden>{{item._id}}</p>\\n                <span class=\\\"row\\\">{{item.profile.firstName}} {{item.profile.lastNameP}}\\n                    {{item.profile.lastNameM}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.phone}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.email}}</span>\\n                <div class=\\\"row\\\" style=\\\"border-top: 1px solid red;\\\">\\n                    <div class=\\\"col-4\\\"><span>1200bs</span></div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>5 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-right\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>6 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-down\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<h3>Pedidos {{titulo}}</h3>\\n<div class=\\\"row\\\">\\n    <div class=\\\"card ficha\\\" style=\\\"\\\" *ngFor=\\\"let item of pedidos; let i=index\\\" data-toggle=\\\"modal\\\"\\n        data-target=\\\"#ampliado\\\" (click)=\\\"ampliar(item);\\\">\\n        <h2 class=\\\"text-secondary text-center\\\"\\n            style=\\\"padding: 5px 10px!important;margin-bottom: 0; text-decoration: underline solid var(--primary);\\\">\\n            {{item.codigo}}</h2>\\n        <ng-container *ngIf=\\\"item.usuario.id == ''; then thenTemplate; else elseTemplate\\\"></ng-container>\\n        <ng-template #thenTemplate>\\n            <img class=\\\"card-img-top\\\" src=\\\"{{urlGlobal}}{{urlImage}}\\\" alt=\\\"\\\"\\n                style=\\\"height: 100px; width: 150px; display: block; margin: auto; border-radius: 30px; display: none;\\\">\\n        </ng-template>\\n        <ng-template #elseTemplate>\\n            <img class=\\\"card-img-top\\\" src=\\\"{{urlGlobal}}{{item.usuario.fotografia}}\\\" alt=\\\"\\\"\\n                style=\\\"height: 100px; width: 150px; display: block; margin: auto; border-radius: 30px;\\\">\\n        </ng-template>\\n\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 text-center\\\" style=\\\"color: white;\\\">\\n                    {{item.sucursal}}\\n                </div>\\n                <div class=\\\"col-6\\\" style=\\\"font-size: 1.3em;\\\">\\n                    <a target=\\\"_blank\\\" style=\\\"color: white;\\\"\\n                        href=\\\"https://www.google.com/maps/place/Factory+Grill+%26+Bar/@-17.7962017,-63.1809039,16.75z/data=!4m5!3m4!1s0x93f1e81559a85bc1:0x2f01d75de6fffcc!8m2!3d-17.7962127!4d-63.1806028\\\">\\n                        <i class=\\\"fas fa-map-marked-alt fa-lg\\\"></i> Origen\\n                    </a></div>\\n                <div class=\\\"col-6\\\" style=\\\"font-size: 1.3em;\\\">\\n                    <a target=\\\"_blank\\\" href=\\\"{{item.geolocalizacion}}\\\" style=\\\"color: white;\\\">\\n                        <i class=\\\"fas fa-map-marked-alt fa-lg\\\"></i> Destino\\n                    </a>\\n                </div>\\n            </div>\\n            <h4 class=\\\"card-text\\\" style=\\\"margin-top: 10px;\\\">{{item.fechaHora | date:'medium'}}</h4>\\n            <h4 class=\\\"card-text\\\" style=\\\"float: right;\\\">{{item.restar}}</h4>\\n        </div>\\n        <div class=\\\"card-footer text-muted\\\" style=\\\"padding: 1px 10px!important; color: white!important;\\\">\\n            {{titulo}}\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"ampliado\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"pedidoElegido\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\" style=\\\"background-color: gainsboro;\\\">\\n            <div class=\\\"modal-header\\\" style=\\\"background-color: var(--gray-dark);\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"pedidoElegido\\\" style=\\\"color: white; font-size: 1.1em;\\\">Pedidos {{titulo}}\\n                </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" style=\\\"margin-top: -30px;\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-header\\\"\\n                style=\\\"border-bottom: 1px solid var(--gray-dark); margin-left: 30px!important; margin-right: 30px!important; padding-top: 5px; padding-bottom: 5px;\\\">\\n                <h2 style=\\\"color: black; margin: 0 auto!important;\\\">{{elegido?.codigo}}</h2>\\n            </div>\\n            <div class=\\\"modal-body\\\" style=\\\"padding-bottom: 5px; padding-top: 5px;\\\">\\n                <div class=\\\"row\\\">\\n                    <h4 class=\\\"col-12\\\" style=\\\"color: black; margin-bottom: 5px;\\\">Nombre: {{elegido?.nombreCliente}}\\n                        {{elegido?.apellidoCliente}}</h4>\\n                    <h4 class=\\\"col-12\\\" style=\\\"color: black; margin-bottom: 5px;\\\">Dirección: {{elegido?.direccion}}</h4>\\n                    <h4 class=\\\"col-12\\\" style=\\\"color: black; margin-bottom: 5px;\\\">\\n                        Detalle\\n                    </h4>\\n                    <div class=\\\"col-12\\\" *ngFor=\\\"let prod of elegido?.productos; let i=index\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\"></div>\\n                            <div class=\\\"col-9\\\" style=\\\"color: black;\\\">{{prod.nombre}}</div>\\n                            <div class=\\\"col-2\\\" style=\\\"color: black;\\\">{{prod.cantidad}}</div>\\n                        </div>\\n                    </div>\\n                    <h4 class=\\\"col-12\\\" style=\\\"color: black; margin-bottom: 0;\\\">Teléfono: {{elegido?.telefono}}</h4>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"modal-footer\\\"\\n                style=\\\"border-top: 1px solid var(--gray-dark); margin-left: 30px!important; margin-right: 30px!important;\\\">\\n                <div class=\\\"row\\\">\\n                    <h4 class=\\\"col-12\\\" style=\\\"color: black; margin: 0 auto!important;\\\">Pedido Asignado a:</h4>\\n                    <h5 class=\\\"col-12\\\" style=\\\"color: black; margin: 0 auto!important;\\\">Nombre: {{elegido?.usuario.nombre}}</h5>\\n                    <h5 class=\\\"col-6\\\" style=\\\"color: black; margin: 0 auto!important;\\\">Vehículo: {{elegido?.usuario.tipoVehiculo}}</h5>\\n                    <h5 class=\\\"col-6\\\" style=\\\"color: black; margin: 0 auto!important;\\\">Placa: {{elegido?.usuario.placaVehiculo}}</h5>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"modal-footer\\\" style=\\\"background-color: var(--gray-dark); color: white; padding-top: 5px; padding-bottom: 5px;\\\">\\n                <input *ngIf=\\\"btnAccion != ''\\\" type=\\\"button\\\" class=\\\" btn btn-primary\\\"\\n                    style=\\\"margin: 0 auto; width: 80%;\\\" value=\\\"{{btnAccion}}\\\"\\n                    (click)=\\\"btnPedido(elegido?._id)\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <div class=\\\"row\\\">\\n      <h2 class=\\\"col-12 col-md-4 card-title\\\">Lista de Invitados</h2>\\n      <div class=\\\"col-12 col-md-8 toolbar\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n            class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\" (click)=\\\"refreshFunction($event)\\\"><i\\n            class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/invitacion']\\\"\\n          [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nueva Invitación</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"dataTables_wrapper\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n            <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n              class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"entriesChange($event)\\\"\\n              style=\\\"width: 100px;\\\">\\n              <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n              <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n              <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n            </select>\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> invitaciones </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n            <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n            <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n              class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n              style=\\\"width: 100px;\\\">\\n              <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Vigente</option>\\n              <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Caduco</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-12 col-md-4\\\">\\n          <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n            <label>\\n              <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <!--\\n          <ngx-datatable-column name=\\\"My Custom Column Header\\\" prop=\\\"client\\\">\\n        <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <strong>{{ value.clientCode }} </strong> - {{ value.clientName }}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      -->\\n      <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n        [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\" (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\">\\n\\n        <ngx-datatable-column name=\\\"C.I.\\\" prop=\\\"profile.ci\\\">{{ci}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Nombre\\\" prop=\\\"profile.firstName\\\">{{firstName}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Apellido Paterno\\\" prop=\\\"profile.lastNameP\\\">{{lastNameP}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Apellido Materno\\\" prop=\\\"profile.lastNameM\\\">{{lastNameM}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Fecha\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.date | date:'dd-MM-yyyy'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Estado\\\">\\n          <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n            <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n              Vigente\\n            </ng-container>\\n            <ng-template #elseTemplate>\\n              Caduco\\n            </ng-template>\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n        <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n          <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n            let-selectFn=\\\"selectFn\\\">\\n            Acciones\\n          </ng-template>\\n          <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\"\\n            let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n            <a class=\\\"btn btn-round btn-warning btn-icon btn-sm edit\\\" (click)=\\\"editFunction($event)\\\">\\n              <i class=\\\"fas fa-user-edit\\\" style=\\\"margin-top: 7px;\\\"></i>\\n            </a>\\n            <a class=\\\"btn btn-round btn-danger btn-icon btn-sm remove\\\" (click)=\\\"deleteFunction($event)\\\"><i\\n                class=\\\"fas fa-times\\\" style=\\\"margin-top: 7px;\\\"></i></a>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </div>\\n\\n  </div>\\n  <!-- end content-->\\n</div>\\n<!--  end card  -->\"","export default \"<div class=\\\"content\\\" (desdeElHijo)=\\\"recibeDeHijo($event)\\\">\\n  <div class=\\\"form-sign center z-depth-4\\\">\\n    <!--<img src=\\\"assets/img/logos/v.png\\\" alt=\\\"Ventun\\\">-->\\n    <h2 class=\\\"center\\\">Invitación</h2>\\n    <hr>\\n    <form (ngSubmit)=\\\"onRegister()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\" class=\\\"{{procesando}}\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"ci\\\">CI</label>\\n          <input type=\\\"text\\\" name=\\\"ci\\\" #ci=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.ci\\\" id=\\\"ci\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Cédula de Identidad\\\" minlength=\\\"6\\\" (focusout)=\\\"verificarUsuario()\\\" required>\\n          <app-show-errors [control]=\\\"ci\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"expedido\\\" class=\\\"control-label\\\">Expedido en:</label>\\n          <select name=\\\"expedido\\\" #expedido=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.expedido\\\" id=\\\"expedido\\\"\\n            class=\\\"form-control\\\" aria-hidden=\\\"true\\\" required>\\n            <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n            <option *ngFor='let littleDepa of depasCI' [ngValue]=\\\"littleDepa._id\\\">\\n              {{littleDepa.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"expedido\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <!--<div class=\\\"form-group col-6 col-md-4\\\">\\n          <a class=\\\"btn btn-warning\\\" style=\\\"margin-top: 28px;\\\" (click)=\\\"verificarUsuario()\\\">Verificar Usuario</a>\\n        </div>-->\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"nombre\\\">Nombre</label>\\n          <input type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.firstName\\\" id=\\\"nombre\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Nombre Invitado\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"nombre\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"apellidoP\\\">Apellido Paterno</label>\\n          <input type=\\\"text\\\" name=\\\"apellidoP\\\" #apellidoP=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.lastNameP\\\"\\n            id=\\\"apellidoP\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido Paterno\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"apellidoP\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"apellidoM\\\">Apellido Materno</label>\\n          <input type=\\\"text\\\" name=\\\"apellidoM\\\" #apellidoM=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.lastNameM\\\"\\n            id=\\\"apellidoM\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido Materno\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"apellidoM\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"gender\\\">Sexo</label>\\n          <select class=\\\"form-control\\\" name=\\\"gender\\\" #gender=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.gender\\\"\\n            id=\\\"gender\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"0\\\">\\n              Hombre\\n            </option>\\n            <option [ngValue]=\\\"1\\\">\\n              Mujer\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"gender\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"birthDate\\\" class=\\\"optional\\\">Fecha de Nacimiento</label>\\n          <input type=\\\"date\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.birthDate\\\"\\n            id=\\\"birthDate\\\" class=\\\"form-control\\\" placeholder=\\\"Fecha de Nacimiento\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"phone\\\">Teléfono</label>\\n          <input type=\\\"phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.phone\\\" id=\\\"phone\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Número Telefónico\\\" minlength=\\\"7\\\" required>\\n          <app-show-errors [control]=\\\"phone\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"email\\\" class=\\\"optional\\\">e-mail</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.email\\\"\\n            id=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\\\">\\n          <app-show-errors [control]=\\\"email\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\" hidden>\\n          <label for=\\\"password\\\">Contraseña</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"invitation.password\\\" id=\\\"password\\\" placeholder=\\\"Contraseña\\\">\\n          <app-show-errors [control]=\\\"password\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n\\n      <div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"local\\\" class=\\\"control-label\\\">País</label>\\n            <select name=\\\"local\\\" #local=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.country\\\" id=\\\"local\\\"\\n              aria-hidden=\\\"true\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"updateSelectedValue($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleLocal of ListLOCMain' [ngValue]=\\\"littleLocal._id\\\">\\n                {{littleLocal.name}}\\n              </option>\\n            </select>\\n\\n            <app-show-errors [control]=\\\"local\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"depaMini\\\" class=\\\"control-label\\\">Departamento</label>\\n            <select name=\\\"depaMini\\\" #depaMini=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.state.id\\\" id=\\\"depaMini\\\"\\n              class=\\\"form-control\\\" aria-hidden=\\\"true\\\" (ngModelChange)=\\\"updateSelectDepartamento($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleDepa of listDepa' [ngValue]=\\\"littleDepa._id\\\">\\n                {{littleDepa.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"depaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"cityMini\\\" class=\\\"control-label\\\">Ciudad</label>\\n            <select class=\\\"form-control\\\" name=\\\"cityMini\\\" id=\\\"cityMini\\\" #cityMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"invitation.contact.address.city.id\\\" aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectCiudad($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleCiudad of listCiudad' [ngValue]=\\\"littleCiudad._id\\\">\\n                {{littleCiudad.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"cityMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"zonaMini\\\" class=\\\"control-label\\\">Zona</label>\\n            <select class=\\\"form-control\\\" name=\\\"zonaMini\\\" id=\\\"zonaMini\\\" #zonaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"invitation.contact.address.zone.id\\\" aria-hidden=\\\"true\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleZona of listZona' [ngValue]=\\\"littleZona._id\\\">\\n                {{littleZona.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"zonaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <!---->\\n          <div class=\\\"form-group col-md-8 campoFormulario\\\">\\n            <label class=\\\"control-label\\\">\\n              Calle\\n            </label>\\n            <input type=\\\"text\\\" name=\\\"streetDirecction\\\" class=\\\"form-control\\\" id=\\\"streetDirecction\\\"\\n              #streetDirecction=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.especificLocation\\\" required>\\n            <app-show-errors [control]=\\\"streetDirecction\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"codePostal\\\" class=\\\"control-label optional\\\">Zip Code</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Code Postal\\\" class=\\\"form-control\\\" name=\\\"codePostal\\\" id=\\\"codePostal\\\"\\n              #codePostal=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.codePostal\\\" minlength=\\\"4\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"companyName\\\">Empresa</label>\\n          <input style=\\\"color: white;\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            value=\\\"{{companiaActual}}\\\" readonly>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"sucursalName\\\">Sucursal</label>\\n          <select class=\\\"form-control\\\" id=\\\"sucursalName\\\" name=\\\"sucursalName\\\" #sucursalName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"job.sucursalName\\\" (ngModelChange)=\\\"updateSelectSucursal($event)\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option *ngFor='let item of this.listSucursal' [ngValue]=\\\"item._id\\\">\\n              {{item.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"sucursalName\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"typeAccount\\\">Rol</label>\\n          <select class=\\\"form-control\\\" id=\\\"typeAccount\\\" name=\\\"typeAccount\\\" #typeAccount=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"job.typeAccount\\\" (ngModelChange)=\\\"updateSelectRol($event)\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option *ngFor='let item of this.ListRol' [ngValue]=\\\"item._id\\\">\\n              {{item.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"typeAccount\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\" *ngIf=\\\"verVehiculo\\\">\\n        <div class=\\\"form-gro col-md-6\\\">\\n          <label for=\\\"tipoVehiculo\\\">Tipo Vehículo</label>\\n          <select class=\\\"form-control\\\" id=\\\"tipoVehiculo\\\" name=\\\"tipoVehiculo\\\" #tipoVehiculo=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"invitation.vehiculo.tipoVehiculo\\\" (ngModelChange)=\\\"updateSelectVehiculo($event)\\\">\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option *ngFor='let item of this.ListVehiculo' [ngValue]=\\\"item._id\\\">\\n              {{item.name}}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-gro col-md-6\\\">\\n          <label for=\\\"placaVehiculo\\\" class=\\\"control-label optional\\\">Placa Vehículo</label>\\n          <input type=\\\"text\\\" placeholder=\\\"Placa vehículo\\\" class=\\\"form-control\\\" name=\\\"placaVehiculo\\\" id=\\\"placaVehiculo\\\"\\n            #placaVehiculo=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.vehiculo.placaVehiculo\\\" minlength=\\\"6\\\">\\n        </div>\\n        <div class=\\\"form-gro col-md-6\\\">\\n          <label for=\\\"detallesVehiculo\\\" class=\\\"control-label optional\\\">Detalles Vehículo</label>\\n          <textarea name=\\\"detallesVehiculo\\\" id=\\\"detallesVehiculo\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Detalles sobre el vehículo\\\" #detallesVehiculo=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"invitation.vehiculo.detallesVehiculo\\\"></textarea>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\" hidden>\\n        <div class=\\\"form-group col-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input id=\\\"acuerdo\\\" name=\\\"acuerdo\\\" type=\\\"checkbox\\\" #acuerdo=\\\"ngModel\\\"\\n                class=\\\"form-control form-check-input\\\" [(ngModel)]=\\\"invitation.estado\\\">\\n              <span class=\\\"form-check-sign\\\">Estoy de acuerdo con Términos de Servicio y Política de Privacidad</span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\" style=\\\"margin-top: 15px;\\\">\\n        <button *ngIf=\\\"usuarioValido\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n          [disabled]=\\\"contextForm.invalid\\\">Invitar</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"procesando {{esVisible}}\\\">\\n  <h3>Procesando Solicitud</h3>\\n  <i class=\\\"fas fa-spinner fa-lg fa-spin\\\" style=\\\"margin: 0 auto; display: block; color: white;\\\"></i>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <h2 class=\\\"col-12 col-md-4 card-title\\\">Estado de pedidos agendados</h2>\\n            <div class=\\\"col-12 col-md-8 toolbar\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n                        class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\"\\n                    (click)=\\\"refreshFunction($event)\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n                <!--<button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/cargaProducto']\\\"\\n                    [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nuevo Producto</button>-->\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"dataTables_wrapper\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n                        <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\"\\n                            (change)=\\\"entriesChange($event)\\\" style=\\\"width: 100px;\\\">\\n                            <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n                            <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n                            <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n                        </select>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> pedidos </label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n                        <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n                        <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n                            style=\\\"width: 100px;\\\">\\n                            <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Pendientes</option>\\n                            <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Cancelados</option>\\n                            <option value=\\\"2\\\" [selected]=\\\"estado==2\\\">Asignados</option>\\n                            <option value=\\\"3\\\" [selected]=\\\"estado==3\\\">Recogidos</option>\\n                            <option value=\\\"4\\\" [selected]=\\\"estado==4\\\">En Tránsito</option>\\n                            <option value=\\\"5\\\" [selected]=\\\"estado==5\\\">Entregados</option>\\n                        </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-md-4\\\">\\n                    <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n                        <label>\\n                            <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\"\\n                (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\"\\n                [treeFromRelation]=\\\"parentId\\\" [treeToRelation]=\\\"id\\\" (treeAction)=\\\"onTreeAction($event)\\\">\\n\\n                <ngx-datatable-column name=\\\"Código\\\" prop=\\\"codigo\\\">{{codigo}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Nombre del Cliente\\\" prop=\\\"nombreCliente\\\">{{nombreCliente}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Apellido del Cliente\\\" prop=\\\"apellidoCliente\\\">{{apellidoCliente}}\\n                </ngx-datatable-column>\\n\\n                <ngx-datatable-column name=\\\"Fecha y hora\\\" prop=\\\"fechaHora\\\">{{fechaHora|date:'short'}}\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Teléfono Cliente\\\" prop=\\\"telefono\\\">{{telefono}}\\n                </ngx-datatable-column>\\n                <!--<ngx-datatable-column name=\\\"Estado\\\">\\n                    <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n                        <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n                            Habilitado\\n                        </ng-container>\\n                        <ng-template #elseTemplate>\\n                            Inhabilitado\\n                        </ng-template>\\n                    </ng-template>\\n                </ngx-datatable-column>-->\\n            </ngx-datatable>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header \\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6 text-left\\\">\\n            <h5 class=\\\"card-category\\\">Total</h5>\\n            <h2 class=\\\"card-title\\\">Cuentas</h2>\\n          </div>\\n          <!--<div class=\\\"col-sm-6\\\">\\n            <div class=\\\"btn-group btn-group-toggle float-right\\\" data-toggle=\\\"buttons\\\">\\n              <label class=\\\"btn btn-sm btn-primary btn-simple active\\\" id=\\\"0\\\">\\n                <input type=\\\"radio\\\" name=\\\"options\\\" checked>\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Accounts</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-single-02\\\"></i>\\n                </span>\\n              </label>\\n              <label class=\\\"btn btn-sm btn-primary btn-simple\\\" id=\\\"1\\\">\\n                <input type=\\\"radio\\\" class=\\\"d-none d-sm-none\\\" name=\\\"options\\\">\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Purchases</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-gift-2\\\"></i>\\n                </span>\\n              </label>\\n              <label class=\\\"btn btn-sm btn-primary btn-simple\\\" id=\\\"2\\\">\\n                <input type=\\\"radio\\\" class=\\\"d-none\\\" name=\\\"options\\\">\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Sessions</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-tap-02\\\"></i>\\n                </span>\\n              </label>\\n            </div>\\n          </div>-->\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartBig1\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Ventas</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-bell-55 text-primary\\\"></i> 763,215</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartLinePurple\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Cobros diarios</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-delivery-fast text-info\\\"></i> 3,500€</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"CountryChart\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Cantidad de Asociados</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-send text-success\\\"></i> 12,100K</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartLineGreen\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6 col-md-12\\\">\\n    <div class=\\\"card card-tasks\\\">\\n      <div class=\\\"card-header \\\">\\n        <h6 class=\\\"title d-inline\\\">Asociados(5)</h6>\\n        <p class=\\\"card-category d-inline\\\">today</p>\\n        <div class=\\\"dropdown\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-link dropdown-toggle btn-icon\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"tim-icons icon-settings-gear-63\\\"></i>\\n          </button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Another action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Something else</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-body \\\">\\n        <div class=\\\"table-full-width table-responsive\\\">\\n          <table class=\\\"table\\\">\\n            <tbody>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Update the Documentation</p>\\n                  <p class=\\\"text-muted\\\">Dwuamish Head, Seattle, WA 8:47 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">GDPR Compliance</p>\\n                  <p class=\\\"text-muted\\\">The GDPR is a regulation that requires businesses to protect the personal data\\n                    and privacy of Europe citizens for transactions that occur within EU member states.</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Solve the issues</p>\\n                  <p class=\\\"text-muted\\\">Fifty percent of all respondents said they would be more likely to shop at a\\n                    company </p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Release v2.0.0</p>\\n                  <p class=\\\"text-muted\\\">Ra Ave SW, Seattle, WA 98116, SUA 11:19 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Export the processed files</p>\\n                  <p class=\\\"text-muted\\\">The report also shows that consumers will not easily forgive a company once a\\n                    breach exposing their personal data occurs. </p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Arival at export process</p>\\n                  <p class=\\\"text-muted\\\">Capitol Hill, Seattle, WA 12:34 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-6 col-md-12\\\">\\n    <div class=\\\"card \\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\"> Simple Table</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table tablesorter \\\" id=\\\"\\\">\\n            <thead class=\\\" text-primary\\\">\\n              <tr>\\n                <th>\\n                  Name\\n                </th>\\n                <th>\\n                  Country\\n                </th>\\n                <th>\\n                  City\\n                </th>\\n                <th class=\\\"text-center\\\">\\n                  Salary\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>\\n                  Dakota Rice\\n                </td>\\n                <td>\\n                  Niger\\n                </td>\\n                <td>\\n                  Oud-Turnhout\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $36,738\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Minerva Hooper\\n                </td>\\n                <td>\\n                  Curaçao\\n                </td>\\n                <td>\\n                  Sinaai-Waas\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $23,789\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Sage Rodriguez\\n                </td>\\n                <td>\\n                  Netherlands\\n                </td>\\n                <td>\\n                  Baileux\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $56,142\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Philip Chaney\\n                </td>\\n                <td>\\n                  Korea, South\\n                </td>\\n                <td>\\n                  Overland Park\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $38,735\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Doris Greene\\n                </td>\\n                <td>\\n                  Malawi\\n                </td>\\n                <td>\\n                  Feldkirchen in Kärnten\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $63,542\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Mason Porter\\n                </td>\\n                <td>\\n                  Chile\\n                </td>\\n                <td>\\n                  Gloucester\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $78,615\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Jon Porter\\n                </td>\\n                <td>\\n                  Portugal\\n                </td>\\n                <td>\\n                  Gloucester\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $98,615\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>-->\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <h2 class=\\\"col-12 col-md-4 card-title\\\">Lista de Productos</h2>\\n            <div class=\\\"col-12 col-md-8 toolbar\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n                        class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\"\\n                    (click)=\\\"refreshFunction($event)\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/cargaProducto']\\\"\\n                    [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nuevo Producto</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"dataTables_wrapper\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n                        <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\"\\n                            (change)=\\\"entriesChange($event)\\\" style=\\\"width: 100px;\\\">\\n                            <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n                            <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n                            <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n                        </select>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> productos </label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n                        <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n                        <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n                            style=\\\"width: 100px;\\\">\\n                            <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Habilitado</option>\\n                            <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Inhabilitado</option>\\n                            <option value=\\\"2\\\" [selected]=\\\"estado==2\\\">Eliminado</option>\\n                        </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-md-4\\\">\\n                    <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n                        <label>\\n                            <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\"\\n                (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\"\\n                [treeFromRelation]=\\\"parentId\\\" [treeToRelation]=\\\"id\\\" (treeAction)=\\\"onTreeAction($event)\\\">\\n\\n                <ngx-datatable-column name=\\\"Código\\\" prop=\\\"acronym\\\">{{acronym}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Nombre del Producto\\\" prop=\\\"nombre\\\">{{nombre}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Descripción\\\" prop=\\\"descripcion\\\">{{descripcion}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Precio\\\" prop=\\\"costo\\\">{{costo}}</ngx-datatable-column>\\n                <!--<ngx-datatable-column name=\\\"Estado\\\">\\n                    <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n                        <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n                            Habilitado\\n                        </ng-container>\\n                        <ng-template #elseTemplate>\\n                            Inhabilitado\\n                        </ng-template>\\n                    </ng-template>\\n                </ngx-datatable-column>-->\\n\\n\\n                <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n                    [resizeable]=\\\"false\\\">\\n                    <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n                        let-selectFn=\\\"selectFn\\\">\\n                        Producto\\n                    </ng-template>\\n                    <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\"\\n                        let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n                        <a class=\\\"btn btn-round btn-warning btn-icon btn-sm\\\" (click)=\\\"deleteFunction($event)\\\">\\n                            <i class=\\\"far fa-id-badge\\\" style=\\\"margin-top: 7px;\\\"></i></a> <!-- [routerLink]=\\\"['/descendenciaFicha', profile.firstName]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">-->\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<h3>{{opcion}} producto</h3>\\n<div class=\\\"container\\\">\\n    <form (ngSubmit)=\\\"guardar()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-4\\\">\\n                <label for=\\\"acronym\\\">Código de Producto</label>\\n                <input type=\\\"text\\\" name=\\\"acronym\\\" id=\\\"acronym\\\" class=\\\"form-control\\\" placeholder=\\\"Código de Producto\\\"\\n                    aria-describedby=\\\"helpCodigo\\\" #acronym=\\\"ngModel\\\" [(ngModel)]=\\\"producto.acronym\\\" required>\\n                <app-show-errors [control]=\\\"acronym\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-12\\\">\\n                <label for=\\\"nombre\\\">Nombre del Producto a la venta</label>\\n                <input type=\\\"text\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Nombre del Producto a la venta\\\" aria-describedby=\\\"helpNombre\\\" #nombre=\\\"ngModel\\\"\\n                    [(ngModel)]=\\\"producto.nombre\\\" required>\\n                <app-show-errors [control]=\\\"nombre\\\" class=\\\"show-err\\\"></app-show-errors>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-4\\\">\\n                <label>Imagen del Producto</label>\\n                <div class=\\\"fileupload fileupload-new\\\" data-provides=\\\"fileupload\\\"><input type=\\\"hidden\\\">\\n                    <div class=\\\"fileupload-new thumbnail\\\"><img class=\\\"e2e-inner-html-interpolated\\\" alt=\\\"\\\"\\n                            src=\\\"{{urlGlobal}}{{urlImage}}\\\" style=\\\"width: 200px\\\">\\n                    </div>\\n                    <div class=\\\"fileupload-preview fileupload-exists thumbnail\\\" style=\\\"line-height: 10px;\\\"></div>\\n                    <div class=\\\"user-edit-image-buttons\\\">\\n                        <span class=\\\"btn btn-azure btn-file\\\">\\n                            <app-upload [mostrar]='mostrar' [title]=\\\"title_upload\\\" [path]=\\\"path_server\\\"\\n                                (desdeElHijo)=\\\"recibeDeHijo($event);\\\">\\n                            </app-upload>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-8\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-12\\\">\\n                        <label for=\\\"costo\\\">Costo del Producto (Bs)</label>\\n                        <input type=\\\"number\\\" name=\\\"costo\\\" id=\\\"costo\\\" class=\\\"form-control\\\"\\n                            placeholder=\\\"Precio del Producto a la Venta\\\" aria-describedby=\\\"helpCosto\\\" #costo=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"producto.costo\\\" required>\\n                        <app-show-errors [control]=\\\"costo\\\" class=\\\"show-err\\\"></app-show-errors>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-12\\\">\\n                        <label for=\\\"descripcion\\\">Descripción del Producto</label>\\n                        <textarea name=\\\"descripcion\\\" id=\\\"descripcion\\\" cols=\\\"30\\\" rows=\\\"20\\\"\\n                            placeholder=\\\"Descripción del Producto\\\" class=\\\"form-control\\\"\\n                            aria-describedby=\\\"helpDescripcion\\\" #descripcion=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"producto.descripcion\\\"></textarea>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"contextForm.invalid\\\">Guardar</button>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"content\\\">\\n  <div class=\\\"form-sign center z-depth-4\\\">\\n    <!--<img src=\\\"assets/img/logos/v.png\\\" alt=\\\"Ventun\\\">-->\\n    <h2 class=\\\"center\\\">Información Personal</h2>\\n    <hr>\\n    <form (ngSubmit)=\\\"onUpdate()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\" *ngIf=\\\"perfil\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"ci\\\">CI</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ci\\\" #ci=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.profile.ci\\\" id=\\\"ci\\\"\\n            placeholder=\\\"Cédula de Identidad\\\" required>\\n          <app-show-errors [control]=\\\"ci\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"expedido\\\" class=\\\"control-label\\\">Expedido en:</label>\\n          <select class=\\\"form-control\\\" name=\\\"expedido\\\" id=\\\"expedido\\\" #expedido=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.expedido\\\" required aria-hidden=\\\"true\\\">\\n            <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n            <option *ngFor='let littleDepa of depasCI' [ngValue]=\\\"littleDepa._id\\\">\\n              {{littleDepa.name}}\\n            </option>\\n          </select>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"firstName\\\">Nombre</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.firstName\\\" id=\\\"firstName\\\" placeholder=\\\"Nombre Usuario\\\" required>\\n          <app-show-errors [control]=\\\"firstName\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"lastNameP\\\">Apellido Paterno</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastNameP\\\" #lastNameP=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.lastNameP\\\" id=\\\"lastNameP\\\" placeholder=\\\"Apellido Paterno\\\" required>\\n          <app-show-errors [control]=\\\"lastNameP\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"lastNameM\\\">Apellido Materno</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastNameM\\\" #lastNameM=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.lastNameM\\\" id=\\\"lastNameM\\\" placeholder=\\\"Apellido Materno\\\" required>\\n          <app-show-errors [control]=\\\"lastNameM\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n\\n\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"changePass\\\"></label>\\n          <input class=\\\"form-control btn btn-primary\\\" type=\\\"button\\\" value=\\\"Cambio de Contraseña\\\" routerLink=\\\"/sign/password\\\" routerLinkActive=\\\"active\\\" name=\\\"changePass\\\" style=\\\"padding: 0 10px;\\\">\\n        </div>\\n\\n\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"gender\\\">Sexo</label>\\n          <select class=\\\"form-control\\\" id=\\\"gender\\\" name=\\\"gender\\\" #gender=\\\"ngModel\\\" tabindex=\\\"-1\\\"\\n            [(ngModel)]=\\\"perfil.profile.gender\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"0\\\">\\n              Hombre\\n            </option>\\n            <option [ngValue]=\\\"1\\\">\\n              Mujer\\n            </option>\\n          </select>\\n        </div>\\n        <!--\\n          <input type=\\\"date\\\" id=\\\"bday\\\" name=\\\"bday\\\" max=today min=\\\"1919-01-01\\\" class=\\\"form-control\\\" #bday=\\\"ngModel\\\"\\n              [ngModel]=\\\"mySeller.xCurrent.profile.birthDate | date:'yyyy-MM-dd'\\\"\\n              (ngModelChange)=\\\"mySeller.xCurrent.profile.birthDate = $event\\\">\\n        -->\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"birthDate\\\">Fecha de Nacimiento</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\"\\n            [ngModel]=\\\"perfil.profile.birthDate\\\" (ngModelChange)=\\\"perfil.profile.birthDate = $event\\\" id=\\\"birthDate\\\"\\n            placeholder=\\\"Fecha de Nacimiento\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"phone\\\">Teléfono</label>\\n          <input type=\\\"phone\\\" class=\\\"form-control\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.phone\\\"\\n            id=\\\"phone\\\" placeholder=\\\"Número Telefónico\\\" required>\\n          <app-show-errors [control]=\\\"phone\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"email\\\">e-mail</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.email\\\"\\n            id=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\">\\n          <app-show-errors [control]=\\\"email\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n\\n      <div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"local\\\" class=\\\"control-label\\\">País</label>\\n            <select class=\\\"form-control\\\" name=\\\"local\\\" id=\\\"local\\\" #local=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.country\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectedValue($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleLocal of ListLOCMain' [ngValue]=\\\"littleLocal._id\\\">\\n                {{littleLocal.name}}\\n              </option>\\n            </select>\\n\\n            <app-show-errors [control]=\\\"local\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"depaMini\\\" class=\\\"control-label\\\">Departamento</label>\\n            <select class=\\\"form-control\\\" name=\\\"depaMini\\\" id=\\\"depaMini\\\" #depaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.state.id\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectDepartamento($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleDepa of listDepa' [ngValue]=\\\"littleDepa._id\\\">\\n                {{littleDepa.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"depaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"cityMini\\\" class=\\\"control-label\\\">Ciudad</label>\\n            <select class=\\\"form-control\\\" name=\\\"cityMini\\\" id=\\\"cityMini\\\" #cityMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.city.id\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectCiudad($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleCiudad of listCiudad' [ngValue]=\\\"littleCiudad._id\\\">\\n                {{littleCiudad.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"cityMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"zonaMini\\\" class=\\\"control-label\\\">Zona</label>\\n            <select tabindex=\\\"-1\\\" class=\\\"form-control\\\" name=\\\"zonaMini\\\" id=\\\"zonaMini\\\" #zonaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.zone.id\\\" required aria-hidden=\\\"true\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleZona of listZona' [ngValue]=\\\"littleZona._id\\\">\\n                {{littleZona.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"zonaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-8 campoFormulario\\\">\\n            <label class=\\\"control-label\\\">\\n              Street\\n            </label>\\n            <input name=\\\"streetDirecction\\\" class=\\\"form-control\\\" id=\\\"streetDirecction\\\" type=\\\"text\\\" required\\n              #streetDirecction=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.address.especificLocation\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"codePostal\\\" class=\\\"control-label\\\">Zip Code</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Code Postal\\\" class=\\\"form-control\\\" name=\\\"codePostal\\\" id=\\\"codePostal\\\"\\n              #codePostal=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.codePostal\\\" minlength=\\\"4\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Imagen Personal</label>\\n            <div class=\\\"fileupload fileupload-new\\\" data-provides=\\\"fileupload\\\"><input type=\\\"hidden\\\">\\n              <div class=\\\"fileupload-new thumbnail\\\"><img class=\\\"e2e-inner-html-interpolated\\\" alt=\\\"\\\"\\n                  src=\\\"{{urlGlobal}}{{urlImage}}\\\" style=\\\"width: 200px\\\">\\n              </div>\\n              <div class=\\\"fileupload-preview fileupload-exists thumbnail\\\" style=\\\"line-height: 10px;\\\"></div>\\n              <div class=\\\"user-edit-image-buttons\\\">\\n                <span class=\\\"btn btn-azure btn-file\\\">\\n                  <app-upload [mostrar]='mostrar' [title]=\\\"title_upload\\\" [path]=\\\"path_server\\\"\\n                    (desdeElHijo)=\\\"recibeDeHijo($event);\\\">\\n                  </app-upload>\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\" *ngIf=\\\"perfil.estado == 0\\\">\\n        <div class=\\\"form-group col-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input id=\\\"estado\\\" name=\\\"estado\\\" type=\\\"checkbox\\\" #estado=\\\"ngModel\\\" class=\\\"form-control form-check-input\\\"\\n                [(ngModel)]=\\\"perfil.estado\\\" required>\\n              <span class=\\\"form-check-sign\\\">Estoy de acuerdo con <a href=\\\"http://ventun.com/index.php/terms\\\" target=\\\"_blank\\\">Términos de Servicio</a> y <a href=\\\"http://ventun.com/index.php/privacy\\\" target=\\\"_blank\\\">Política de Privacidad</a></span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <!--<div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"estado\\\">Estado</label>\\n          <select class=\\\"form-control\\\" id=\\\"estado\\\" name=\\\"estado\\\" #estado=\\\"ngModel\\\" tabindex=\\\"-1\\\"\\n            [(ngModel)]=\\\"perfil.estado\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"1\\\">\\n              Activo\\n            </option>\\n            <option [ngValue]=\\\"0\\\">\\n              Inactivo\\n            </option>\\n          </select>\\n        </div>\\n      </div>-->\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"contextForm.invalid\\\">Modificar Usuario</button>\\n    </form>\\n  </div>\\n</div>\"","export default \"<form id=\\\"fSeller\\\" name=\\\"fSeller\\\" #fSeller='ngForm' *ngIf=\\\"job\\\">\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"ciMain\\\">ciMain</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ciMain\\\" #ciMain=\\\"ngModel\\\" [(ngModel)]=\\\"job.ciMain\\\"\\n      id=\\\"ciMain\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"companyName\\\">companyName</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"companyName\\\" #companyName=\\\"ngModel\\\" [(ngModel)]=\\\"job.companyName\\\"\\n      id=\\\"companyName\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"typeAccount\\\">typeAccount</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"typeAccount\\\" #typeAccount=\\\"ngModel\\\" [(ngModel)]=\\\"job.typeAccount\\\"\\n      id=\\\"typeAccount\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"guardar()\\\">GUARDAR</button>\\n</form>\"","export default \"<!--<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{cssClass(alert)}} alert-dismissable\\\">\\n        {{alert.message}}\\n        <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n    </div>-->\\n<div aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\" style=\\\"position: relative;\\\" attr.id=\\\"{{idx}}\\\">\\n    <div style=\\\"position: absolute; top: 40px; right: 0;\\\">\\n\\n        <div class=\\\"toast {{tipoAlert}}\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" data-delay=\\\"4000\\\">\\n            <div class=\\\"toast-header\\\">\\n                <strong class=\\\"mr-auto\\\">{{title}}</strong>\\n                <small class=\\\"text-muted\\\">Ahora</small>\\n                <button type=\\\"button\\\" class=\\\"ml-2 mb-1 close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"toast-body\\\">\\n                {{message}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div id=\\\"divMainFile\\\">\\n  <label for=\\\"imageUp\\\" style=\\\"margin-bottom:0; background-color: #344675;\\\">Elige un Imagen</label>\\n  <input class=\\\"custom-control {{muestraUP}}\\\" type=\\\"file\\\" accept=\\\"image/jpeg\\\" name=\\\"imageUp\\\" id=\\\"imageUp\\\" value=\\\"Sube imagen\\\"(change)=\\\"onFileSelected($event)\\\" style=\\\"z-index: 0!important;\\\">\\n\\n  <div class=\\\"card text-center float-left  {{muestraMIDDLE}}\\\">\\n    <div id=\\\"card-body\\\" class=\\\"card-body\\\">\\n      <div class=\\\"card text-white cardCompleto float-left\\\" *ngFor=\\\"let item of datosImagen; let i=index\\\">\\n        <img src=\\\"{{item.src}}\\\" class=\\\"figure-img img-fluid rounded img-thumbnail\\\" alt=\\\"{{item.dataName}}\\\"\\n          style=\\\"max-width: 164!important; max-height: 224px; margin: 20px 10px;\\\">\\n        <div class=\\\"card-img-overlay\\\">\\n          <p class=\\\"card-text\\\">{{item.dataName}}</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-round btn-warning btn-icon\\\" (click)=\\\"deleteFunction($event, item.dataName)\\\"\\n            style=\\\"margin-top: 15%;\\\">\\n            <i class=\\\"fas fa-times\\\" style=\\\"margin-top: 7px;\\\"></i>\\n          </a>\\n        </div>\\n        <div class='progress'>\\n          <div id='pbFile{{item.dataName}}' class='progress-bar progress-bar-striped bg-success' role='progressbar'\\n            aria-valuenow='25' aria-valuemin='0' aria-valuemax='100'></div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr style=\\\"clear: both;\\\">\\n    <div class=\\\"card-footer text-muted {{muestraDOWN}}\\\" *ngIf=\\\"mostrar==true\\\">\\n      <input class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\" value=\\\"Subir Imagen\\\" (click)=\\\"onUpload()\\\">\\n      <input class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" value=\\\"Cancelar\\\" (click)=\\\"onCancel()\\\">\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdmComponent } from \"./adm.component\";\nimport { MainComponent } from \"./views/main/main.component\";\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { StaffListComponent } from './views/staff-list/staff-list.component';\nimport { InvitationComponent } from './views/invitation/invitation.component';\nimport { DescendenciaFichaComponent } from './views/descendencia-ficha/descendencia-ficha.component';\nimport { DescendenciaProfileComponent } from './views/descendencia-profile/descendencia-profile.component';\nimport { InvitationListComponent } from './views/invitation-list/invitation-list.component';\nimport { DescendenciaListComponent } from './views/descendencia-list/descendencia-list.component';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ProductsLoadComponent } from './views/products-load/products-load.component';\nimport { ProductListComponent } from './views/product-list/product-list.component';\nimport { CompraProductoComponent } from './views/compra-producto/compra-producto.component';\nimport { AgendaPedidoComponent } from './views/agenda-pedido/agenda-pedido.component';\nimport { ListaAgendadosComponent } from './views/lista-agendados/lista-agendados.component';\nimport { FichaPedidoComponent } from './views/ficha-pedido/ficha-pedido.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: AdmComponent, \n    canActivate: [AuthenticationService],\n    children:[{ path: '', component: MainComponent }]\n  },\n  //{ path: '', redirectTo: 'main', pathMatch: 'full' },\n\n  {\n    path: 'main',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{path: '', component: MainComponent}]\n  },\n  {\n    path:'profile',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: ProfileComponent}]\n  },\n  {\n    path:'job',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: StaffListComponent}]\n  },\n  {\n    path:'invitacion',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationComponent}]\n  },\n  {\n    path:'invitacion/:_id',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationComponent}]\n  },\n  {\n    path:'invitacionLista',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationListComponent}]\n  },\n  {\n    path:'descendenciaFicha',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaFichaComponent}]\n  },\n  {\n    path:'descendenciaFicha/:id',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaProfileComponent}]\n  },\n  {\n    path:'descendenciaLista',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaListComponent}]\n  },\n  {\n    path:'cargaProducto',\n    component: AdmComponent,\n    children: [{ path: '', component: ProductsLoadComponent}]\n  },\n  {\n    path:'editaProducto/:producto',\n    component: AdmComponent,\n    children: [{ path: '', component: ProductsLoadComponent}]\n  },\n  {\n    path:'listaProductos',\n    component: AdmComponent,\n    children: [{ path: '', component: ProductListComponent}]\n  },\n  {\n    path:'compraProductos',\n    component: AdmComponent,\n    children: [{ path: '', component: CompraProductoComponent}]\n  },\n  {\n    path:'agendaPedido',\n    component: AdmComponent,\n    children: [{ path: '', component: AgendaPedidoComponent}]\n  },\n  {\n    path:'pedidosAgendados',\n    component: AdmComponent,\n    children: [{ path: '', component: ListaAgendadosComponent}]\n  },\n  {\n    path:'pedidos/:estado',\n    component: AdmComponent,\n    children: [{ path: '', component: FichaPedidoComponent}]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdmRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9hZG0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adm',\n  templateUrl: './adm.component.html',\n  styleUrls: ['./adm.component.css']\n})\nexport class AdmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\n\nimport { AdmRoutingModule } from './adm-routing.module';\nimport { AdmComponent } from './adm.component';\nimport { NavbarComponent } from './layouts/navbar/navbar.component';\nimport { SidebarComponent } from './layouts/sidebar/sidebar.component';\nimport { FooterComponent } from './layouts/footer/footer.component';\nimport { ModulesModule } from \"../modules/modules.module\";\nimport { MainComponent } from './views/main/main.component';\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { StaffListComponent } from './views/staff-list/staff-list.component';\nimport { InvitationComponent } from './views/invitation/invitation.component';\nimport { ShowErrorsComponent } from './tools/show-errors/show-errors.component';\nimport { DescendenciaFichaComponent } from './views/descendencia-ficha/descendencia-ficha.component';\nimport { DescendenciaProfileComponent } from './views/descendencia-profile/descendencia-profile.component';\nimport { DescendenciaListComponent } from './views/descendencia-list/descendencia-list.component';\nimport { InvitationListComponent } from './views/invitation-list/invitation-list.component';\nimport { ExpedidoPipe } from '../pipes/expedido.pipe';\nimport { NombrePipe } from '../pipes/nombre.pipe';\nimport { ConfigurationComponent } from './views/configuration/configuration.component';\nimport { ProductListComponent } from \"./views/product-list/product-list.component\";\nimport { ProductsLoadComponent } from \"./views/products-load/products-load.component\";\nimport { CompraProductoComponent } from \"./views/compra-producto/compra-producto.component\";\nimport { AgendaPedidoComponent } from \"./views/agenda-pedido/agenda-pedido.component\";\nimport { ListaAgendadosComponent } from './views/lista-agendados/lista-agendados.component';\nimport { FichaPedidoComponent } from './views/ficha-pedido/ficha-pedido.component';\n\n\n@NgModule({\n  declarations: [\n    AdmComponent, \n    NavbarComponent, \n    SidebarComponent, \n    FooterComponent, \n    MainComponent, \n    ProfileComponent, \n    StaffListComponent, \n    InvitationComponent,\n    ShowErrorsComponent,\n    DescendenciaFichaComponent,\n    DescendenciaProfileComponent,\n    InvitationListComponent,\n    DescendenciaListComponent,\n    ExpedidoPipe,\n    NombrePipe,\n    ConfigurationComponent,\n    ProductListComponent,\n    ProductsLoadComponent,\n    CompraProductoComponent,\n    AgendaPedidoComponent,\n    ListaAgendadosComponent,\n    FichaPedidoComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxDatatableModule,\n    AdmRoutingModule,\n    ModulesModule\n  ]\n})\nexport class AdmModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".dropdown.nav-item>a {\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL2xheW91dHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi5uYXYtaXRlbT5hIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSJdfQ== */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { globalConfigurations, globalVars } from 'src/app/services/globalVars';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { TypeContext } from 'src/app/models/contextclases';\nimport { field } from 'src/app/models/schema';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\nimport { Router } from '@angular/router';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  lista: field[] = [];\n  urlGlobal = globalVars.filesDomain;\n  public perfil: string;\n  userName: string;\n  equipoActual: string = '';\n\n  @Output() desdeElHijo = new EventEmitter();\n\n  ListCompany: TypeContext[] = [];\n  ListRol: TypeContext[] = [];\n\n  constructor(private connexion: ConnexionService, public globalEquipo: GlobalService, public changeTeam: ChangeLiveService, private _router: Router) {\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<TypeContext>('typecontext').subscribe(reslo => {\n      this.ListCompany = reslo.filter(LOC => LOC.context_id == globalConfigurations.company);\n      this.ListRol = reslo.filter(LOC => LOC.context_id == globalConfigurations.rol);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    setTimeout(() => {\n      let anny = JSON.parse(localStorage.getItem('userCompany'));\n      anny.forEach(element => {\n        this.ListCompany.forEach(comp => {\n          if (element.companyName == comp._id) {\n            this.lista.push({ id: element.companyName, valor: comp.name });\n            if (localStorage.getItem('actual')) {\n              this.updateEmp(localStorage.getItem('actual'), false);\n            } else {\n              this.updateEmp(element.companyName, false);\n            }\n          }\n        });\n      });\n      this.userName = localStorage.getItem('userName');\n      this.perfil = localStorage.getItem('photo');\n    }, 1000);\n  }\n\n  updateEmp(id: string, bol: boolean) {\n    this.ListCompany.forEach(comp => {\n      if (id == comp._id) {\n        this.changeTeam.setEquipo(id);\n        this.desdeElHijo.emit(id);\n        this.globalEquipo.equipo = id;\n        this.equipoActual = comp.name;\n      }\n    });\n    if (bol == true) {\n      //this._router.navigate(['/invitacion/']);\n      window.location.reload();\n      console.log('this.desdeElHijo.emit(id)');\n    }\n  }\n\n  cerrarSesion() {\n    localStorage.clear();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { userPermissions } from 'src/app/services/globalVars';\n\nvar misc: any = {\n  sidebar_mini_active: true\n}\n\nvar permissions: any = [\n  {\n    RoleID: 'adm',\n    menuView: [],\n    subMenuView: []\n  },\n  {\n    RoleID: 'sup',\n    menuView: [],\n    subMenuView: []\n  },\n  {\n    RoleID: 'dist',\n    menuView: [\"Tablero\", \"Registro de Usuarios\", \"Registro de Ventas\", \"Pendientes\", \"Asignados\", \"Productos\", \"Pedidos\", \"Recogidos\", \"Entregados\"],\n    subMenuView: [\"Lista de Productos\", \"Agregar Productos\", \"Lista de Pedidos\"]\n  },\n  {\n    RoleID: 'rep',\n    menuView: [\"Registro de Usuarios\", \"Registro de Ventas\", 'Productos', 'Pedidos'],\n    subMenuView: [\"Lista de Productos\", \"Agregar Productos\", \"Lista de Pedidos\"]\n  }/*,\n  {\n    RoleID: '20003',\n    menuView: [\"Calendar\", \"Supervisors View\", \"STAFF\",\"SERVICE\", \"REPORTS\",\"IMPORT\"],\n    subMenuView: [\"client\", \"new-client\"]\n  }*/\n];\n\nexport interface RouteInfo {\n  path: string;\n  title: string;\n  type: string;\n  icontype: string;\n  collapse?: string;\n  isCollapsed?: boolean;\n  isCollapsing?: any;\n  visible?: boolean;\n  children?: ChildrenItems[];\n}\n\nexport interface ChildrenItems {\n  path: string;\n  title: string;\n  ab: string;\n  visible?: boolean;\n  type?: string;\n}\n\n//Menu Items\nexport const ROUTES: RouteInfo[] = [\n  {\n    path: \"/main\",\n    title: \"Tablero\",\n    type: \"link\",\n    icontype: \"icon-components\"\n  },\n  {\n    path: \"/invitacion\",\n    title: \"Registro de Usuarios\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/compraProductos\",\n    title: \"Registro de Ventas\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/pedidos/1\",\n    title: \"Pendientes\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/pedidos/2\",\n    title: \"Asignados\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"\",\n    title: \"Productos\",\n    type: \"sub\",\n    icontype: \"icon-single-02\",\n    collapse: \"\",\n    isCollapsed: true,\n    children: [\n      { path: \"listaProductos\", title: \"Lista de Productos\", type: \"link\", ab: \"LP\" },\n      { path: \"cargaProducto\", title: \"Agregar Productos\", type: \"link\", ab: \"AP\" }\n    ]\n  },\n  {\n    path: \"\",\n    title: \"Pedidos\",\n    type: \"sub\",\n    icontype: \"icon-single-02\",\n    collapse: \"\",\n    isCollapsed: true,\n    children: [\n      { path: \"pedidosAgendados\", title: \"Lista de Pedidos\", type: \"link\", ab: \"LP\" }/*,\n      { path: \"cargaProducto\", title: \"Agregar Productos\", type: \"link\", ab: \"AP\" }*/\n    ]\n  },\n  /*{\n    path: \"#\",\n    title: \"Invitacion\",\n    type: \"sub\",\n    icontype: \"icon-single-02\",\n    collapse: \"invitacion\",\n    isCollapsed: true,\n    children: [\n      { path: \"invitacion\", title: \"Nueva Invitación\", type: \"link\", ab: \"II\" },\n      { path: \"invitacionLista\", title: \"Lista de Invitaciones\", type: \"link\", ab: \"IL\" }\n    ] this.router.navigate(['/invitacion/' + this.activeRow._id]);\n  },*/\n  {\n    path: \"/pedidos/3\",\n    title: \"Recogidos\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/pedidos/5\",\n    title: \"Entregados\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"#\",\n    title: \"Reportes\",\n    type: \"sub\",\n    icontype: \"icon-badge\",\n    collapse: \"reporte\",\n    isCollapsed: true,\n    children: [\n      { path: \"reporte1\", title: \"Reporte 1\", type: \"link\", ab: \"R1\" },\n      { path: \"reporte2\", title: \"Reporte 2\", type: \"link\", ab: \"R2\" },\n      { path: \"reporte3\", title: \"Reporte 3\", type: \"link\", ab: \"R3\" },\n      { path: \"reporte4\", title: \"Reporte 4\", type: \"link\", ab: \"R4\" }\n    ]\n  }/*,\n  {\n    path: \"#\",\n    title: \"Comisión\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  }*/\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  public menuItems: any[];\n  public isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n    this.permissionsEvent();\n  }\n\n  buscaRol() {\n    let local = JSON.parse(localStorage.getItem('userCompany'));\n    let rol = '';\n    switch (local[0].typeAccount) {\n      case userPermissions.adm:\n        rol = 'adm';\n        break;\n      case userPermissions.dist:\n        rol = 'dist';\n        break;\n      case userPermissions.rep:\n        rol = 'rep';\n        break;\n      case userPermissions.sup:\n        rol = 'sup';\n        break;\n      default:\n        rol = 'rep';\n        break;\n    }\n    return rol;\n  }\n\n  permissionsEvent() {\n    let idPosition = 0;\n    let rol = this.buscaRol();\n    if (localStorage.getItem('userCompany')) {\n      for (let i = 0; i < permissions.length; i++) {\n        if (permissions[i].RoleID == rol) {\n          idPosition = i;\n        }\n      }\n    }\n    this.menuItems.forEach(element => {\n      element.visible = true;\n      permissions[idPosition].menuView.forEach(subElement => {\n        if (element.title == subElement) {\n          element.visible = false;\n        }\n      });\n      if (element.children) {\n        element.children.forEach(childElement => {\n          childElement.visible = true;\n          permissions[idPosition].subMenuView.forEach(subElement => {\n            if (childElement.title == subElement) {\n              childElement.visible = false;\n            }\n          });\n        });\n\n      }\n    });\n  }\n\n  sleep(milliseconds) {\n    var start = new Date().getTime();\n    for (var i = 0; i < 1e7; i++) {\n      if (new Date().getTime() - start > milliseconds) {\n        break;\n      }\n    }\n  }\n\n  myFunc(event, menuitem) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.sleep(10);\n    if (menuitem.isCollapsing === undefined) {\n      menuitem.isCollapsing = true;\n\n      // menuitem.isCollapsed = !menuitem.isCollapsed;\n\n      var element = event.target;\n      while (\n        element.getAttribute(\"data-toggle\") != \"collapse\" &&\n        element != document.getElementsByTagName(\"html\")[0]\n      ) {\n        element = element.parentNode;\n      }\n      element = element.parentNode.children[1];\n\n      if (\n        element.classList.contains(\"collapse\") &&\n        !element.classList.contains(\"show\")\n      ) {\n        element.classList = \"before-collapsing\";\n        var style = element.scrollHeight;\n\n        element.classList = \"collapsing\";\n        setTimeout(function () {\n          element.setAttribute(\"style\", \"height:\" + style + \"px\");\n        }, 1);\n        setTimeout(function () {\n          element.classList = \"collapse show\";\n          element.removeAttribute(\"style\");\n          menuitem.isCollapsing = undefined;\n        }, 350);\n      } else {\n        var style = element.scrollHeight;\n        setTimeout(function () {\n          element.setAttribute(\"style\", \"height:\" + (style + 20) + \"px\");\n        }, 3);\n        setTimeout(function () {\n          element.classList = \"collapsing\";\n        }, 3);\n        setTimeout(function () {\n          element.removeAttribute(\"style\");\n        }, 20);\n        setTimeout(function () {\n          element.classList = \"collapse\";\n          menuitem.isCollapsing = undefined;\n        }, 400);\n      }\n    }\n  }\n  minimizeSidebar() {\n    const body = document.getElementsByTagName('body')[0];\n    if (body.classList.contains('sidebar-mini')) {\n      misc.sidebar_mini_active = true\n    } else {\n      misc.sidebar_mini_active = false;\n    }\n    if (misc.sidebar_mini_active === true) {\n      body.classList.remove('sidebar-mini');\n      misc.sidebar_mini_active = false;\n    } else {\n      body.classList.add('sidebar-mini');\n      misc.sidebar_mini_active = true;\n    }\n\n    // we simulate the window Resize so the charts will get updated in realtime.\n    const simulateWindowResize = setInterval(function () {\n      window.dispatchEvent(new Event('resize'));\n    }, 180);\n\n    // we stop the simulation of Window Resize after the animations are completed\n    setTimeout(function () {\n      clearInterval(simulateWindowResize);\n    }, 1000);\n  }\n\n  showSidebarMessage(message) {\n    /*this.toastr.show(\n      '<span class=\"now-ui-icons ui-1_bell-53\"></span>', message,\n      {\n        timeOut: 4000,\n        closeButton: true,\n        enableHtml: true,\n        toastClass: \"alert alert-danger alert-with-icon\",\n        positionClass: \"toast-top-right\"\n      }\n    );*/\n  }\n}\n","export default \".roedor{\\r\\n    color: red;\\r\\n}\\r\\n.globito{\\r\\n    color: red !important; \\r\\n    margin-left: 5px;\\r\\n    font-size: 0.75rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3Rvb2xzL3Nob3ctZXJyb3JzL3Nob3ctZXJyb3JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYWRtL3Rvb2xzL3Nob3ctZXJyb3JzL3Nob3ctZXJyb3JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9lZG9ye1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uZ2xvYml0b3tcclxuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDsgXHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-errors',\n  templateUrl: './show-errors.component.html',\n  styleUrls: ['./show-errors.component.css']\n})\nexport class ShowErrorsComponent implements OnInit {\n\n  private static readonly errorMessages = {\n    'required': () => 'Este campo es requerido.',\n    'minlength': (params) => 'La cantidad mínima de caracteres es de ' + params.requiredLength + '.',\n    'maxlength': (params) => 'La cantidad máxima de caracteres es de ' + params.requiredLength + '.',\n    'pattern': (params) => 'The required pattern is: '+ 'mail@ejemplo.com', //params.requiredPattern,\n    'email': () => 'El formato de correo es: mail@ejemplo.com',\n    'years': (params) => params.message,\n    'countryCity': (params) => params.message,\n    'crisCode': (params) => params.message,\n    'telephoneNumbers': (params) => params.message,\n    'telephoneNumber': (params) => params.message\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  private control: AbstractControlDirective | AbstractControl;\n\n  shouldShowErrors(): boolean {\n    return this.control &&\n      this.control.errors &&\n      (this.control.dirty || this.control.touched);\n  }\n\n  listOfErrors(): string[] {\n    //console.log('esto mandamos al directiva show erros:', this.control);\n    return Object.keys(this.control.errors)\n      .map(field => this.getMessage(field, this.control.errors[field]));\n  }\n\n  private getMessage(type: string, params: any) {\n    return ShowErrorsComponent.errorMessages[type](params);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9hZ2VuZGEtcGVkaWRvL2FnZW5kYS1wZWRpZG8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Pedido } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\n\n@Component({\n  selector: 'app-agenda-pedido',\n  templateUrl: './agenda-pedido.component.html',\n  styleUrls: ['./agenda-pedido.component.css']\n})\nexport class AgendaPedidoComponent implements OnInit {\n\n  public pedido: Pedido;\n  public codigoPedido;\n  private localCompany;\n  public totalCompra = 0;\n\n  constructor(private connexion: ConnexionService, private router: Router) { }\n\n  ngOnInit() {\n    this.localCompany = JSON.parse(localStorage.getItem('userCompany'));\n    if (this.localCompany) {\n      this.codigoPedido = 0; //this.generaCodigoVerificacion();\n      this.pedido = new Pedido();\n      this.pedido.productos = JSON.parse(localStorage.getItem('pedido'));\n      this.calculaTotal();\n    } else {\n      this.router.navigate(['/sign/login']);\n    }\n\n  }\n\n  enviar() {\n    this.pedido.codigo = this.codigoPedido;\n    this.pedido.fechaHora = new Date();\n    this.pedido.usuario = {id: '', nombre: '', telefono: '', fotografia: '', tipoVehiculo: '', placaVehiculo: '', detallesVehiculo: ''};\n    this.pedido.companyName = this.localCompany[0].companyName;\n    this.pedido.sucursalName = this.localCompany[0].sucursalName;\n    this.pedido.estadoActual = 1;\n    this.pedido.ubicacionActual = 'bbb';\n    console.log(this.pedido);\n    this.connexion.addObject<Pedido>('creaPedido', this.pedido).subscribe(\n      regis => {\n        console.log('Datos guardados con éxito.');\n        this.router.navigate(['/compraProductos']);\n      },\n      error => { console.log('Error al guardar los datos.'); }\n    );\n  }\n\n  /*generaCodigoVerificacion = () => {\n    return Math.random().toString(36).substring(7);\n  }*/\n\n  calculaTotal() {\n    this.totalCompra = 0;\n    this.pedido.productos.forEach(element => {\n      \n      this.totalCompra += (Number(element.costo) * Number(element.cantidad));\n    });\n  }\n}\n","export default \".producto:hover {\\r\\n    box-shadow: 5px 5px 5px 0px rgba(255,255,255,0.6);\\r\\n}\\r\\n.minus:hover {\\r\\n    cursor: pointer!important;\\r\\n    color: rgba(255, 0, 0, 0.9)!important;\\r\\n    border-bottom: 1px solid rgba(255, 0, 0, 0.5);\\r\\n}\\r\\n.float-buy {\\r\\n    box-shadow: 0px 2px 20px 1px rgba(84,84,84,0.74);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2NvbXByYS1wcm9kdWN0by9jb21wcmEtcHJvZHVjdG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUdJLGlEQUFpRDtBQUNyRDtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLHFDQUFxQztJQUNyQyw2Q0FBNkM7QUFDakQ7QUFFQTtJQUdJLGdEQUFnRDtBQUNwRCIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9jb21wcmEtcHJvZHVjdG8vY29tcHJhLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZHVjdG86aG92ZXIge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiA1cHggNXB4IDVweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjYpO1xyXG4gICAgLW1vei1ib3gtc2hhZG93OiA1cHggNXB4IDVweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjYpO1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC42KTtcclxufVxyXG4ubWludXM6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC45KSFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDAsIDAsIDAuNSk7XHJcbn1cclxuXHJcbi5mbG9hdC1idXkge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMnB4IDIwcHggMXB4IHJnYmEoODQsODQsODQsMC43NCk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDBweCAycHggMjBweCAxcHggcmdiYSg4NCw4NCw4NCwwLjc0KTtcclxuICAgIGJveC1zaGFkb3c6IDBweCAycHggMjBweCAxcHggcmdiYSg4NCw4NCw4NCwwLjc0KTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { exit } from 'process';\nimport { Products } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars } from 'src/app/services/globalVars';\n\n@Component({\n  selector: 'app-compra-producto',\n  templateUrl: './compra-producto.component.html',\n  styleUrls: ['./compra-producto.component.css']\n})\nexport class CompraProductoComponent implements OnInit {\n\n  public urlImage = '/assets/img/noProduct.png';\n\n  public productos: Products[];\n  public compra: Array<any> = [];\n  public totalCompra = 0;\n  urlGlobal = globalVars.filesDomain;\n\n  constructor(private cnx: ConnexionService, private router: Router) { }\n\n  ngOnInit() {\n    let localCompany = JSON.parse(localStorage.getItem('userCompany'));\n    if (localCompany) {\n      this.cnx.get_dataWithParams<Products>('products', '?sucursalName='+localCompany[0].sucursalName).subscribe(myProds => {\n        this.productos = myProds;\n      });\n    }\n    \n\n    //this.compra = [];/*\n    //this.compra.id = 0\n    //this.compra.nombre = '';\n    //this.compra.cantidad = 0;*/\n  }\n\n  cont = 0;\n  comprando(item) {\n    this.cont += 1;\n    if (this.compra.length == 0) {\n      this.compra.push({ id: item._id, nombre: item.nombre, cantidad: 1, costo: item.costo });\n    } else {\n      let nuevaCantidad = 1;\n      let ubicacion = -1;\n      for (let i = 0; i < this.compra.length; i++) {\n        if (this.compra[i].id == item._id) {\n          nuevaCantidad = this.compra[i].cantidad + 1;\n          this.compra[i] = { id: item._id, nombre: item.nombre, cantidad: nuevaCantidad, costo: item.costo };\n          ubicacion = i;\n          break;\n        }\n      }\n      if (ubicacion == -1) {\n        this.compra.push({ id: item._id, nombre: item.nombre, cantidad: nuevaCantidad, costo: item.costo });\n      }\n    }\n    this.calculaTotal();\n  }\n\n  quitar(id) {\n    for (let i = 0; i < this.compra.length; i++) {\n      if (this.compra[i].id == id) {\n        let nuevaCantidad = this.compra[i].cantidad - 1;\n        if (nuevaCantidad <= 0) {\n          this.compra.splice(i, 1);\n        } else {\n          this.compra[i] = { id: this.compra[i].id, nombre: this.compra[i].nombre, cantidad: nuevaCantidad, costo: this.compra[i].costo };\n        }\n        break;\n      }\n    }\n    this.calculaTotal();\n  }\n\n  calculaTotal() {\n    this.totalCompra = 0;\n    this.compra.forEach(element => {\n      this.totalCompra += (element.costo * element.cantidad);\n    });\n  }\n\n  comprar() {\n    localStorage.setItem('pedido', JSON.stringify(this.compra));\n    this.router.navigate(['/agendaPedido']);\n  }\n\n  cancelar() {\n    this.compra = [];\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"span {\\r\\n    color: white;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.foto {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n\\r\\n.ficha {\\r\\n    cursor: pointer;\\r\\n    border: 1px solid black;\\r\\n    border-left: 4px solid silver;\\r\\n    padding-right: 4px;\\r\\n}\\r\\n\\r\\n.ficha:hover {\\r\\n    border: 1px solid silver;\\r\\n    box-shadow: 0 0 10px silver;\\r\\n    transition-duration: 300ms;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2Rlc2NlbmRlbmNpYS1maWNoYS9kZXNjZW5kZW5jaWEtZmljaGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLDJCQUEyQjtJQUMzQiwwQkFBMEI7QUFDOUIiLCJmaWxlIjoic3JjL2FwcC9hZG0vdmlld3MvZGVzY2VuZGVuY2lhLWZpY2hhL2Rlc2NlbmRlbmNpYS1maWNoYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3BhbiB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uZm90byB7XHJcbiAgICBtYXJnaW46IDVweCAwO1xyXG59XHJcblxyXG4uZmljaGEge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHNpbHZlcjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDRweDtcclxufVxyXG5cclxuLmZpY2hhOmhvdmVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHNpbHZlcjtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHNpbHZlcjtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDMwMG1zO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { person } from 'src/app/models/person';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { job, Location } from 'src/app/models/schema';\nimport { globalVars } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-descendencia-ficha',\n  templateUrl: './descendencia-ficha.component.html',\n  styleUrls: ['./descendencia-ficha.component.css']\n})\nexport class DescendenciaFichaComponent implements OnInit {\n\n  public person: person;\n  public asociados: any[];\n  urlGlobal = globalVars.filesDomain;\n  ListDepts: Location[] = [];\n\n  constructor(private connexion: ConnexionService, private _router: Router) {\n    this.asociados = [];\n  }\n \n  ngOnInit() {\n    this.connexion.get_dataWithParams<Location>('location','?owner=5e14d611d235a7103c0ba4f6').subscribe(reslo => {\n      this.ListDepts = reslo;\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.person = new person();\n    this.connexion.get_dataWithParamsOne<person>('personAssociated', '?userID=' + localStorage.getItem('code').substr(1) +  '&companyName=' + localStorage.getItem('actual')).subscribe(\n      regis => {\n        this.person = regis[0];\n        this.asociados = regis[0].associated;\n        console.log(regis[0].associated);\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9kZXNjZW5kZW5jaWEtbGlzdC9kZXNjZW5kZW5jaWEtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { person } from 'src/app/models/person';\n\n@Component({\n  selector: 'app-descendencia-list',\n  templateUrl: './descendencia-list.component.html',\n  styleUrls: ['./descendencia-list.component.css']\n})\nexport class DescendenciaListComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  myID: string;\n  activeRow: any;\n\n  constructor(private cnx: ConnexionService, private ruta: ActivatedRoute, private router: Router, public toastService: ToastService, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.myID = localStorage.getItem('code').substr(1);\n    this.obtenerDatos(1, this.myID);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  obtenerDatos(state: number, id: string) {\n    console.log(state, id);\n    this.isLoading = true;\n    this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + id +  '&companyName=' + localStorage.getItem('actual') + '&estado=' + state).subscribe(myAds => {\n      console.log(myAds);\n      this.rows = myAds[0].associated;\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1500);\n      this.temp = myAds[0].associated.map((prop, key) => {\n        return {\n          ...prop,\n          treeStatus: 'collapsed',\n          parentId: null,\n          id: key\n        };\n      });\n    });\n    this.isLoading = false;\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n\n      let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n      this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + row._id + '&companyName=' + myCompanyName[0].companyName + '&estado=' + row.estado).subscribe(myTreeAssoc => {\n        console.log('myAdsmyAds', myTreeAssoc);\n\n        //this.rows = myTreeAssoc[0].associated;\n        let data = myTreeAssoc[0].associated.map((prop, key) => {\n          return {\n            ...prop,\n            treeStatus: 'collapsed',\n            parentId: row.id,\n            id: key\n          };\n        });\n        this.temp = [...this.temp, ...data]\n      });\n      row.treeStatus = 'expanded';\n      this.cd.detectChanges();\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    this.router.navigate(['/descendenciaFicha/' + this.activeRow._id]);\n  }\n}\n","export default \"ul.nav-pills {\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\nul.nav-pills .active{\\r\\n    box-shadow: 0px 5px 15px 0px #ffffff4d;\\r\\n}\\r\\n\\r\\n#descendenciaTab {\\r\\n    padding-top: 16px;\\r\\n}\\r\\n\\r\\n.tab-pane {\\r\\n    background-color: #1e1e2f;\\r\\n}\\r\\n\\r\\nli.nav-item {\\r\\n    background-color: var(--gray-dark);\\r\\n    margin-right: 20px;\\r\\n    border-radius: 0.25rem;\\r\\n    -webkit-border-radius: 0.25rem;\\r\\n    -moz-border-radius: 0.25rem;\\r\\n    -ms-border-radius: 0.25rem;\\r\\n    -o-border-radius: 0.25rem;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    color: white;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.foto {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n\\r\\n.ficha {\\r\\n    cursor: pointer;\\r\\n    border: 1px solid black;\\r\\n    border-left: 4px solid silver;\\r\\n    padding-right: 4px;\\r\\n}\\r\\n\\r\\n.ficha:hover {\\r\\n    border: 1px solid silver;\\r\\n    box-shadow: 0 0 10px silver;\\r\\n    transition-duration: 300ms;\\r\\n}\\r\\n\\r\\n#resumen label {\\r\\n    width: 200px;\\r\\n    margin: 5px 0;\\r\\n    font-size: 1.1em;\\r\\n}\\r\\n\\r\\n#resumen span {\\r\\n    margin: 5px 0;\\r\\n    font-size: 1.1em;\\r\\n}\\r\\n\\r\\n#resumen .row {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2Rlc2NlbmRlbmNpYS1wcm9maWxlL2Rlc2NlbmRlbmNpYS1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxzQ0FBc0M7QUFDMUM7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0Qiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QiwyQkFBMkI7SUFDM0IsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9kZXNjZW5kZW5jaWEtcHJvZmlsZS9kZXNjZW5kZW5jaWEtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwubmF2LXBpbGxzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbnVsLm5hdi1waWxscyAuYWN0aXZle1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IDBweCAjZmZmZmZmNGQ7XHJcbn1cclxuXHJcbiNkZXNjZW5kZW5jaWFUYWIge1xyXG4gICAgcGFkZGluZy10b3A6IDE2cHg7XHJcbn1cclxuLnRhYi1wYW5lIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTFlMmY7XHJcbn1cclxuXHJcbmxpLm5hdi1pdGVtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktZGFyayk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLW1zLWJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbiAgICAtby1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG59XHJcblxyXG5zcGFuIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5mb3RvIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuXHJcbi5maWNoYSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgc2lsdmVyO1xyXG4gICAgcGFkZGluZy1yaWdodDogNHB4O1xyXG59XHJcblxyXG4uZmljaGE6aG92ZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgc2lsdmVyO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggc2lsdmVyO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMzAwbXM7XHJcbn1cclxuXHJcbiNyZXN1bWVuIGxhYmVsIHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICBmb250LXNpemU6IDEuMWVtO1xyXG59XHJcblxyXG4jcmVzdW1lbiBzcGFuIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICBmb250LXNpemU6IDEuMWVtO1xyXG59XHJcblxyXG4jcmVzdW1lbiAucm93IHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { person } from 'src/app/models/person';\nimport { job } from 'src/app/models/schema';\nimport { globalVars } from 'src/app/services/globalVars';\n\n@Component({\n  selector: 'app-descendencia-profile',\n  templateUrl: './descendencia-profile.component.html',\n  styleUrls: ['./descendencia-profile.component.css']\n})\nexport class DescendenciaProfileComponent implements OnInit {\n\n  public person: person;\n  public asociados: job[];\n  urlGlobal = globalVars.filesDomain;\n  ListDepts: Location[] = [];\n  \n  constructor(private connexion: ConnexionService, private ruta: ActivatedRoute, private _router: Router) {\n    this.asociados = [];\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListDepts = reslo;\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.person = new person();\n    this.cargarDatos(this.ruta.snapshot.params['id']);\n    console.log(this.ruta.snapshot.params['id']);\n    \n  }\n\n  cargarDatos(id) {\n    let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n    this.connexion.get_dataWithParamsOne<person>('personAssociated', '?userID=' + id + '&companyName=' + localStorage.getItem('actual')).subscribe(\n      regis => {\n        console.log('regisaa',regis);\n        this.person = regis[0];\n        this.asociados = regis[0].associated;\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n\n  verAsociado(event) {\n    this._router.navigate(['/descendenciaFicha/' + event]);\n    this.cargarDatos(event);\n  }\n\n}\n","export default \".ficha {\\r\\n    width: 250px;\\r\\n    margin-right: 10px;\\r\\n    background: rgb(108,117,125);\\r\\n    background: linear-gradient(180deg, rgba(108,117,125,1) 0%, rgba(50,50,93,1) 15%, rgba(108,117,125,1) 100%);\\r\\n    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#6c757d\\\",endColorstr=\\\"#6c757d\\\",GradientType=1);\\r\\n    -webkit-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#6c757d\\\",endColorstr=\\\"#6c757d\\\",GradientType=1);\\r\\n}\\r\\n\\r\\n.ficha .card-footer {\\r\\n    border-top: 1px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2ZpY2hhLXBlZGlkby9maWNoYS1wZWRpZG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsNEJBQTRCO0lBRzVCLDJHQUEyRztJQUMzRywrR0FBK0c7SUFDL0csdUhBQXVIO0FBQzNIOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvYWRtL3ZpZXdzL2ZpY2hhLXBlZGlkby9maWNoYS1wZWRpZG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWNoYSB7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMTA4LDExNywxMjUpO1xyXG4gICAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDEwOCwxMTcsMTI1LDEpIDAlLCByZ2JhKDUwLDUwLDkzLDEpIDE1JSwgcmdiYSgxMDgsMTE3LDEyNSwxKSAxMDAlKTtcclxuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgxMDgsMTE3LDEyNSwxKSAwJSwgcmdiYSg1MCw1MCw5MywxKSAxNSUsIHJnYmEoMTA4LDExNywxMjUsMSkgMTAwJSk7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDEwOCwxMTcsMTI1LDEpIDAlLCByZ2JhKDUwLDUwLDkzLDEpIDE1JSwgcmdiYSgxMDgsMTE3LDEyNSwxKSAxMDAlKTtcclxuICAgIGZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj1cIiM2Yzc1N2RcIixlbmRDb2xvcnN0cj1cIiM2Yzc1N2RcIixHcmFkaWVudFR5cGU9MSk7XHJcbiAgICAtd2Via2l0LWZpbHRlcjpwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj1cIiM2Yzc1N2RcIixlbmRDb2xvcnN0cj1cIiM2Yzc1N2RcIixHcmFkaWVudFR5cGU9MSk7XHJcbn1cclxuXHJcbi5maWNoYSAuY2FyZC1mb290ZXIge1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJlZDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { Pedido, Location } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { globalVars, globalConfigurations, userPermissions } from 'src/app/services/globalVars';\nimport { TypeContext } from 'src/app/models/contextclases';\nimport { person } from 'src/app/models/person';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-ficha-pedido',\n  templateUrl: './ficha-pedido.component.html',\n  styleUrls: ['./ficha-pedido.component.css']\n})\nexport class FichaPedidoComponent implements OnInit {\n\n  public titulo: string = '';\n  public pedidos: Pedido[] = [];\n  ListVehiculo: TypeContext[] = [];\n  public urlImage = '/assets/img/noPicture.png';\n  public urlGlobal = globalVars.filesDomain;\n  public elegido: any;\n  public estadoActual;\n  public rolActual: string = '';\n  public btnAccion: string = '';\n  public localCompany: any;\n  listSucursal: Location[] = [];\n  private estado: string;\n  public persona: person;\n\n  constructor(private connexion: ConnexionService, private ruta: ActivatedRoute, private router: Router, public toastService: ToastService) {\n    this.persona = new person();\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.listSucursal = reslo.filter(LOC => LOC.typecon_id == '5f6839d468bab21d3861ccc6');\n    });\n    this.localCompany = JSON.parse(localStorage.getItem('userCompany'));\n    this.rolActual = this.buscaRol();\n    this.ruta.paramMap.subscribe((params: ParamMap) => {\n      this.estadoActual = params.get('estado');\n      this.cambiaTitulo(this.estadoActual);\n      this.cargaFichas(this.estadoActual);\n      if ((this.rolActual == 'rep') && (this.estadoActual == '1')) {\n        this.connexion.get_data<TypeContext>('typecontext').subscribe(reslo => {\n          this.ListVehiculo = reslo.filter(LOC => LOC.context_id == globalConfigurations.vehiculo);\n        }, error => {\n          console.log('Hubo un problema al cargar datos. ' + error);\n        });\n        /*this.connexion.get_dataId<person>('person', localStorage.getItem('code')).subscribe(\n          resp => {\n            console.log('resp', resp);\n            this.persona = resp[0];\n          }\n        );*/\n      }\n    });\n  }\n\n  buscaRol() {\n    let rol = '';\n    switch (this.localCompany[0].typeAccount) {\n      case userPermissions.adm:\n        rol = 'adm';\n        break;\n      case userPermissions.dist:\n        rol = 'dist';\n        break;\n      case userPermissions.rep:\n        rol = 'rep';\n        break;\n      case userPermissions.sup:\n        rol = 'sup';\n        break;\n      default:\n        rol = '';\n        break;\n    }\n    return rol;\n  }\n\n  cambiaTitulo(estado) {\n    if (this.rolActual != '') {\n      switch (estado) {\n        case '0':\n          this.titulo = 'Cancelados';\n          this.btnAccion = '';\n          break;\n        case '1':\n          this.titulo = 'Pendientes';\n          if (this.rolActual == 'rep') {\n            this.btnAccion = 'Asignarme';\n          } else {\n            this.btnAccion = 'Cancelar Pedido';\n          }\n          break;\n        case '2':\n          this.titulo = 'Asignados';\n          if (this.rolActual == 'rep') {\n            this.btnAccion = 'Recogido';\n          } else {\n            this.btnAccion = 'Cancelar Pedido';\n          }\n          break;\n        case '3':\n          this.titulo = 'Recogidos';\n          if (this.rolActual == 'rep') {\n            this.btnAccion = 'Entregado';\n          } else {\n            this.btnAccion = 'Cancelar Pedido';\n          }\n          break;\n        case '4':\n          this.titulo = 'en Tránsito';\n          this.btnAccion = '';\n          break;\n        case '5':\n          this.titulo = 'Entregados';\n          this.btnAccion = '';\n          break;\n        default:\n          break;\n      }\n    } else {\n      this.btnAccion = '';\n      this.router.navigate(['/main']);\n    }\n  }\n\n  armaConsulta(estado) {\n    let eleccion = '';\n    if (this.localCompany) {\n      if (userPermissions.adm == this.localCompany[0].typeAccount) {\n        eleccion = '&sucursalName=' + this.localCompany[0].sucursalName;\n      }\n      if (userPermissions.rep == this.localCompany[0].typeAccount) {\n        eleccion = '&companyName=' + this.localCompany[0].companyName;\n        if (estado != 1) {\n          eleccion += '&usuario.id=' + localStorage.code;\n        }\n      }\n    }\n    return '?estadoActual=' + estado + eleccion;\n  }\n\n  cargaFichas(estado) {\n    let consulta = this.armaConsulta(estado);\n    this.connexion.get_dataWithParamsNoAuth<Pedido>('pedido', consulta).subscribe(\n      resp => {\n        let ahora = new Date().getTime();\n        this.pedidos = resp;\n        this.pedidos.forEach(element => {\n          let tiempoTemp = (ahora - new Date(element.fechaHora).getTime()) / (1000 * 60 * 60);\n          let tiempoFinal = '';\n          if (Math.trunc(tiempoTemp) > 0) {\n            tiempoFinal = Math.trunc(tiempoTemp) + ' hrs ' + Math.trunc((-Math.trunc(tiempoTemp) + tiempoTemp) * 60) + ' min';\n          } else {\n            tiempoFinal = Math.trunc((-Math.trunc(tiempoTemp) + tiempoTemp) * 60) + ' min';\n          }\n          element['restar'] = tiempoFinal;\n          for (let i = 0; i < this.listSucursal.length; i++) {\n            if (this.listSucursal[i]._id == element.sucursalName) {\n              element['sucursal'] = this.listSucursal[i].name;\n            }\n          }\n        });\n      },\n      error => {\n        console.log('Error: ', error);\n      }\n    );\n  }\n\n  ampliar(item) {\n    console.log(item);\n    this.elegido = item;\n  }\n\n  btnPedido(id) {\n    this.pedidos.forEach(element => {\n      if (element['_id'] == id) {\n        this.realizaCambio(element);\n      }\n    });\n    $('#ampliado').modal('hide')\n  }\n\n  realizaCambio(element: Pedido) {\n    let nuevoEstado = this.calculaEstado();\n    element.estadoActual = nuevoEstado;\n    if (nuevoEstado != 0) {\n      element.usuario.id = localStorage.getItem('code');\n      element.usuario.nombre = localStorage.getItem('userName');\n      element.usuario.telefono = localStorage.getItem('userPhone');\n      element.usuario.fotografia = localStorage.getItem('photo');\n      //this.urlImage = element.usuario.fotografia;\n      for (let i = 0; i < this.ListVehiculo.length; i++) {\n        if (this.ListVehiculo[i]._id == JSON.parse(localStorage.getItem('vehiculo')).tipoVehiculo) { //this.persona.vehiculo.tipoVehiculo) {\n          element.usuario.tipoVehiculo = this.ListVehiculo[i].name;\n        }\n      }\n\n      element.usuario.placaVehiculo = JSON.parse(localStorage.getItem('vehiculo')).placaVehiculo;\n      element.usuario.detallesVehiculo = JSON.parse(localStorage.getItem('vehiculo')).detallesVehiculo;\n    }\n    this.connexion.editObject<Pedido>('pedido', element).subscribe(\n      resp => {\n        this.cargaFichas(this.estadoActual);\n      },\n      error => {\n        console.log('Error: ' + error);\n      }\n    );\n  }\n\n  calculaEstado() {\n    let nuevoEstado = this.estadoActual;\n    if (this.rolActual == 'rep') {\n      switch (this.estadoActual) {\n        case '0':\n          nuevoEstado = 0;\n          break;\n        case '1':\n          nuevoEstado = 2;\n          break;\n        case '2':\n          nuevoEstado = 3;\n          break;\n        case '3':\n          nuevoEstado = 5;\n          break;\n        case '4':\n          nuevoEstado = 0;\n          break;\n        default:\n          break;\n      }\n    } else {\n      nuevoEstado = 0;\n    }\n    return nuevoEstado;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9pbnZpdGF0aW9uLWxpc3QvaW52aXRhdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { invitation } from 'src/app/models/invitation';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\n\n@Component({\n  selector: 'app-invitation-list',\n  templateUrl: './invitation-list.component.html',\n  styleUrls: ['./invitation-list.component.css']\n})\nexport class InvitationListComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  activeRow: any;\n\n  constructor(private cnx: ConnexionService, private router: Router, public toastService: ToastService, public inLive: ChangeLiveService) { }\n\n  ngOnInit() {\n    //console.log(this.inLive.setEquipo());\n    this.obtenerDatos(this.status);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status);\n  }\n\n  obtenerDatos(state: number) {\n    this.isLoading = true;\n    this.cnx.get_dataWithParams<invitation>('invitation', '?estado=' + state + '&ciMain=' + localStorage.getItem('code').substr(1) + '&companyName=' + localStorage.getItem('actual')).subscribe(myAds => {\n      this.rows = myAds;\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1500);\n      this.temp = myAds.map((prop, key) => {\n        return {\n          ...prop,\n          id: key\n        };\n      });\n    });\n    this.isLoading = false;\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  editFunction($event) {\n    $event.preventDefault();\n    this.router.navigate(['/invitacion/' + this.activeRow._id]);\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    this.activeRow.estado = 0;\n    let nuevaInvitacion: invitation;\n    nuevaInvitacion = this.activeRow;\n    this.cnx.editObject<invitation>('invitationQuick', nuevaInvitacion).subscribe(resp => {\n      console.log('RESP: ', resp);\n      this.obtenerDatos(this.status);\n    });\n    //this.router.navigate(['/invitacion/' + this.activeRow._id]);\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n}\n","export default \".procesa {\\r\\n    opacity: .5;\\r\\n}\\r\\n\\r\\n.noProcesa {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.procesando {\\r\\n    background-color: var(--pink);\\r\\n    width: 30em;\\r\\n    height: 100px;\\r\\n    position: absolute;\\r\\n    border-radius: 20px;\\r\\n    align-content: center;\\r\\n    margin: 0 auto;\\r\\n    box-shadow: 5px 5px 8px -5px white;\\r\\n    -moz-box-shadow: 5px 5px 8px -5px white;\\r\\n    -webkit-box-shadow: 5px 5px 8px -5px white;\\r\\n    top: 50%;\\r\\n    left: calc(50% - 15em);\\r\\n}\\r\\n\\r\\n.procesando > h3{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n    margin: 0;\\r\\n    padding-bottom: 0;\\r\\n}\\r\\n\\r\\n.visible {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.invisible {\\r\\n    display: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2ludml0YXRpb24vaW52aXRhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLFdBQVc7SUFDWCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsY0FBYztJQUNkLGtDQUFrQztJQUNsQyx1Q0FBdUM7SUFDdkMsMENBQTBDO0lBQzFDLFFBQVE7SUFDUixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLFNBQVM7SUFDVCxpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9pbnZpdGF0aW9uL2ludml0YXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9jZXNhIHtcclxuICAgIG9wYWNpdHk6IC41O1xyXG59XHJcblxyXG4ubm9Qcm9jZXNhIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5wcm9jZXNhbmRvIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBpbmspO1xyXG4gICAgd2lkdGg6IDMwZW07XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogY2FsYyg1MCUgLSAxNWVtKTtcclxufVxyXG5cclxuLnByb2Nlc2FuZG8gPiBoM3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbn1cclxuLnZpc2libGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5pbnZpc2libGUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { invitation } from \"src/app/models/invitation\";\nimport { job, address, field, Location, contact, profile, vehiculo } from 'src/app/models/schema';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { person } from 'src/app/models/person';\nimport { isNullOrUndefined } from 'util';\nimport { TypeContext } from 'src/app/models/contextclases';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\nimport { globalConfigurations, userPermissions } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-invitation',\n  templateUrl: './invitation.component.html',\n  styleUrls: ['./invitation.component.css']\n})\nexport class InvitationComponent implements OnInit {\n\n  invitation: invitation;\n  public job: job;\n  public contact: contact;\n  public vehiculo: vehiculo;\n  public profile: profile;\n  public address: address;\n  public field: field;\n  public esVisible: string = 'invisible';\n  public procesando: string = 'noProcesa';\n  public usuarioValido: boolean = true;\n  correct: boolean = false;\n\n  ListCompany: TypeContext[] = [];\n  ListRol: TypeContext[] = [];\n  ListVehiculo: TypeContext[] = [];\n\n  ListLOC: Location[] = [];\n  ListLOCMain: Location[] = [];\n  listDepa: Location[] = [];\n  depasCI: Location[] = [];\n  listCiudad: Location[] = [];\n  listZona: Location[] = [];\n\n  listSucursal: Location[] = [];\n\n  isSaved: boolean = false;\n  companiaActual: string = '';\n  public verVehiculo = false;\n\n\n  constructor(private connexion: ConnexionService, private _router: Router, private route: ActivatedRoute, public toastService: ToastService, public globalEquipo: GlobalService, public inLive: ChangeLiveService) {\n    this.invitation = new invitation();\n    this.job = new job();\n\n    this.contact = new contact();\n    this.vehiculo = new vehiculo();\n    this.profile = new profile();\n    this.address = new address();\n    //this.field = new field();\n    this.invitation.job = this.job;\n    this.isSaved = false;\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem('code').substring(0, 1) == '0') {\n      alert('Su cuenta no está activada.\\nPor favor active su cuenta antes de invitar a una persona.');\n      this._router.navigate(['/profile']);\n    }\n\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListLOC = reslo;\n      this.ListLOCMain = reslo.filter(LOC => LOC.typecon_id == globalConfigurations.pais);\n      this.depasCI = this.ListLOC.filter(LOC => LOC.owner == globalConfigurations.ciudad);\n      this.listSucursal = reslo.filter(LOC => LOC.typecon_id == '5f6839d468bab21d3861ccc6');\n\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.connexion.get_data<TypeContext>('typecontext').subscribe(reslo => {\n      this.ListCompany = reslo.filter(LOC => LOC.context_id == globalConfigurations.company);\n      this.ListRol = reslo.filter(LOC => LOC.context_id == globalConfigurations.rol);\n      this.ListVehiculo = reslo.filter(LOC => LOC.context_id == globalConfigurations.vehiculo);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.invitation.contact = this.contact;\n    this.invitation.vehiculo = this.vehiculo;\n    this.invitation.profile = this.profile;\n    this.contact.address = this.address;\n    this.address.country = '';\n    this.address.city = new field();\n    this.address.state = new field();\n    this.address.zone = new field();\n    //this.invitation.job.push(this.job);\n    if (this.route.snapshot.params['_id']) {\n      setTimeout(() => {\n        this.connexion.get_dataId<invitation>('invitationQuick', this.route.snapshot.params['_id']).subscribe(resp => {\n          this.invitation = resp;\n          this.editAddress(resp.contact.address);\n          this.editCompany(resp.job);\n        });\n      }, 500);\n    }\n    setTimeout(() => {\n      this.updateEmp(localStorage.getItem('actual'));\n    }, 1000);\n  }\n\n  editAddress(direccion: address) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == direccion.country);\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == direccion.state.id);\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == direccion.city.id);\n  }\n\n  editCompany(trabajo: job) {\n    this.ListCompany = this.ListCompany.filter(LOC => LOC._id == trabajo.companyName);\n    this.ListRol = this.ListRol.filter(LOC => LOC._id == trabajo.typeAccount);\n  }\n\n  verificarUsuario() {\n    this.esVisible = 'visible';\n    this.procesando = 'procesa';\n    if (this.invitation.profile.ci) {\n      this.connexion.get_dataWithParamsOne<person>('personInvitation', '?ci=' + this.invitation.profile.ci + '&equipo=' + localStorage.getItem('actual')).subscribe(myUser => {\n        if (myUser['id'] == 0) {\n          this.usuarioValido = false;\n          this.error(myUser['message'], 'Invitación a MLM')\n        } else {\n          this.usuarioValido = true;\n          this.success(myUser['message'], 'Invitación a MLM')\n        }\n        this.procesando = 'noProcesa';\n        this.esVisible = 'invisible';\n      });\n    } else {\n      this.error('CI vacío', 'MLM Invitación');\n    }\n\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  onRegister() {\n    /*if (this.invitado) {\n      for (let i = 0; i < this.invitado.associated.length; i++) {\n        const element = this.invitado.associated[i];\n        if ((element.companyName == this.job.companyName) && (element.typeAccount == this.job.typeAccount)) {\n          this.error('Esta persona ya cuenta con una invitación.', 'MLM Invitación');\n          return 0;\n        }\n      }\n    }*/\n    this.job.companyName = localStorage.getItem('actual');\n    this.esVisible = 'visible';\n    this.procesando = 'procesa';\n    this.isSaved = true;\n    this.agregarDireccion();\n    this.invitation.estado = 1;\n    this.invitation.job = { ciMain: localStorage.getItem('code').substr(1), companyName: this.job.companyName, sucursalName: this.job.sucursalName, typeAccount: this.job.typeAccount };\n    let fechaHora = new Date();\n    this.invitation.date = fechaHora;\n    let pass = this.generarCodigo();\n    this.invitation.codeInvitation = pass;\n    this.invitation.password = pass;\n    this.invitation.profile.photo = '/assets/img/noPicture.png';\n    console.log('invitation', this.invitation);\n    this.connexion.addObject<invitation>('invitation', this.invitation).subscribe(\n      regis => {\n        this.procesando = 'noProcesa';\n        this.esVisible = 'invisible';\n        this.correct = true;\n        alert('La invitación fue realizada de manera correcta');\n        this._router.navigate(['/']);\n      },\n      error => {\n        this.isSaved = false;\n        var errorMessage = <any>error;\n        this.correct = false;\n        switch (errorMessage.status) {\n          case 400:\n            this.usuarioValido = false;\n            alert('El usuario ya fue invitado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            this.usuarioValido = true;\n            alert('Ocurrió un error al intentar invitar el usuario. \\n Por favor verifique los datos e intente nuevamente.');\n            break;\n        }\n      }\n    );\n  }\n\n  generarCodigo() {\n    return 'ABC123';\n  }\n\n  agregarDireccion() {\n    let local, paisMini, depaMini, cityMini, zonaMini;\n    let objDepartamento: field;\n    let objCiudad: field;\n    let objZona: field;\n\n    try {\n      local = $('#local')[0].value;\n      if (!isNullOrUndefined(local)) {\n        let separador = local.split(\": \", 2);\n        paisMini = separador[1];\n        depaMini = $('#depaMini')[0].value;\n      }\n      if (!isNullOrUndefined(depaMini)) {\n        let separador = depaMini.split(\": \", 2);\n        objDepartamento = {\n          id: separador[1],\n          valor: $('#depaMini')[0].options[separador[0]].text\n        }\n      }\n      cityMini = $('#cityMini')[0].value;\n      if (!isNullOrUndefined(cityMini)) {\n        let separador = cityMini.split(\": \", 2);\n        objCiudad = {\n          id: separador[1],\n          valor: $('#cityMini')[0].options[separador[0]].text\n        }\n      };\n\n      zonaMini = $('#zonaMini')[0].value;\n      if (!isNullOrUndefined(zonaMini)) {\n        let separador = zonaMini.split(\": \", 2);\n        objZona = {\n          id: separador[1],\n          valor: $('#zonaMini')[0].options[separador[0]].text\n        }\n      }\n      let objAddress: address = {\n        country: paisMini,\n        state: objDepartamento,\n        city: objCiudad,\n        zone: objZona,\n        geoData: this.invitation.contact.address.geoData,\n        especificLocation: this.invitation.contact.address.especificLocation\n      };\n      this.invitation.contact.address = objAddress;\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  updateSelectedValue(index) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectDepartamento(index) {\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectCiudad(index) {\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectSucursal(index) {\n    //this.listSucursal = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectEquipo(index) {\n    //this.ListCompany = this.ListCompany.filter(LOC => LOC._id == index);\n  }\n\n  updateSelectRol(index) {\n    if (userPermissions.rep == index) {\n      this.verVehiculo = true;\n    } else {\n      this.verVehiculo = false;\n    }\n    //this.ListRol = this.ListRol.filter(LOC => LOC._id == index);\n  }\n\n  updateSelectVehiculo(index) {\n\n  }\n\n  updateEmp(id: string) {\n    this.ListCompany.forEach(comp => {\n      if (id == comp._id) {\n        localStorage.setItem('actual', id);\n        this.companiaActual = comp.name;\n      }\n    });\n  }\n\n  recibeDeHijo(algo) {\n    console.log('ALGO PASO AQUI', algo)\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9saXN0YS1hZ2VuZGFkb3MvbGlzdGEtYWdlbmRhZG9zLmNvbXBvbmVudC5jc3MifQ== */\"","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Pedido } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-lista-agendados',\n  templateUrl: './lista-agendados.component.html',\n  styleUrls: ['./lista-agendados.component.css']\n})\nexport class ListaAgendadosComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  myID: string;\n  activeRow: any;\n  public localCompany: any;\n  public sucursalName: string;\n\n  constructor(private cnx: ConnexionService, private ruta: ActivatedRoute, private router: Router, public toastService: ToastService, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.localCompany = JSON.parse(localStorage.getItem('userCompany'));\n    this.sucursalName = this.localCompany[0].sucursalName;\n    this.obtenerDatos(1, this.sucursalName);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  obtenerDatos(state: number, id: string) {\n    this.isLoading = true;\n    this.cnx.get_dataWithParams<Pedido>('pedido', '?estadoActual=' + state + '&sucursalName=' + this.sucursalName).subscribe(myProds => {\n      console.log(myProds);\n      this.rows = myProds;\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1500);\n      this.temp = myProds.map((prop, key) => {\n        return {\n          ...prop,\n          parentId: null,\n          id: key\n        };\n      });\n    });\n    this.isLoading = false;\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n\n  onTreeAction(event: any) {\n    /*const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n\n      let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n      this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + row._id + '&companyName=' + myCompanyName[0].companyName + '&estado=' + row.estado).subscribe(myTreeAssoc => {\n        console.log('myAdsmyAds', myTreeAssoc);\n\n        //this.rows = myTreeAssoc[0].associated;\n        let data = myTreeAssoc[0].associated.map((prop, key) => {\n          return {\n            ...prop,\n            treeStatus: 'collapsed',\n            parentId: row.id,\n            id: key\n          };\n        });\n        this.temp = [...this.temp, ...data]\n      });\n      row.treeStatus = 'expanded';\n      this.cd.detectChanges();\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }*/\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    //this.router.navigate(['/descendenciaFicha/' + this.activeRow._id]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9tYWluL21haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { person } from 'src/app/models/person';\nimport { job } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  public person: person;\n  urlGlobal = globalVars.filesDomain;\n  \n  constructor(private connexion: ConnexionService) { }\n\n  ngOnInit() {\n    this.person = new person();\n    this.cargarDatos(localStorage.getItem('code').substring(1));\n  }\n\n  cargarDatos(id) {\n    this.connexion.get_dataId<person>('person', id).subscribe(\n      regis => {\n        localStorage.setItem('photo', regis.profile.photo.toString())\n        this.person = regis;\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n  \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Products } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  myID: string;\n  activeRow: any;\n\n  constructor(private cnx: ConnexionService, private ruta: ActivatedRoute, private router: Router, public toastService: ToastService, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.myID = localStorage.getItem('code').substr(1);\n    this.obtenerDatos(1, this.myID);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  obtenerDatos(state: number, id: string) {\n\n    let localCompany = JSON.parse(localStorage.getItem('userCompany'));\n    if (localCompany) {\n      this.isLoading = true;\n      this.cnx.get_dataWithParams<Products>('products', '?sucursalName=' + localCompany[0].sucursalName + '&estado=' + state).subscribe(myProds => {\n        console.log(myProds);\n        this.rows = myProds;\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1500);\n        this.temp = myProds.map((prop, key) => {\n          return {\n            ...prop,\n            parentId: null,\n            id: key\n          };\n        });\n      });\n      this.isLoading = false;\n    }\n\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n\n  onTreeAction(event: any) {\n    /*const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n\n      let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n      this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + row._id + '&companyName=' + myCompanyName[0].companyName + '&estado=' + row.estado).subscribe(myTreeAssoc => {\n        console.log('myAdsmyAds', myTreeAssoc);\n\n        //this.rows = myTreeAssoc[0].associated;\n        let data = myTreeAssoc[0].associated.map((prop, key) => {\n          return {\n            ...prop,\n            treeStatus: 'collapsed',\n            parentId: row.id,\n            id: key\n          };\n        });\n        this.temp = [...this.temp, ...data]\n      });\n      row.treeStatus = 'expanded';\n      this.cd.detectChanges();\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }*/\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    this.router.navigate(['/editaProducto/' + this.activeRow._id]);\n    //this.router.navigate(['/descendenciaFicha/' + this.activeRow._id]);\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9wcm9kdWN0cy1sb2FkL3Byb2R1Y3RzLWxvYWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Products } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars } from 'src/app/services/globalVars';\nimport { ToastService } from 'src/app/services/toast.service';\n\n@Component({\n  selector: 'app-products-load',\n  templateUrl: './products-load.component.html',\n  styleUrls: ['./products-load.component.css']\n})\nexport class ProductsLoadComponent implements OnInit {\n\n  public path_server = 'userFiles/imagesCompany';\n  public mostrar = true;\n  public title_upload = '';\n  public urlImage = '/assets/img/noProduct.png';\n  public opcion = 'Agregar';\n  public productoId: string;\n  urlGlobal = globalVars.filesDomain;\n\n  public producto: Products;\n\n  constructor(private connexion: ConnexionService, private _router: Router, private route: ActivatedRoute, public toastService: ToastService) { }\n\n  ngOnInit() {\n    this.productoId = this.route.snapshot.params['producto'];\n    this.producto = new Products();\n    if (this.productoId) {\n      this.connexion.get_dataId<Products>('products', this.productoId).subscribe(\n        prod => {\n          this.producto = prod;\n          //console.log(prod);\n        },\n        error => {\n          console.log('Ocurrió un error al intentar recuperar los datos.', error);\n          this.error('Ocurrió un error al intentar recuperar los datos.', 'Productos')\n          this._router.navigate(['/listaProductos']);\n        }\n      );\n    } else {\n      this.urlImage = '/assets/img/noProduct.png';\n      this.producto.imagen = this.urlImage;\n      this.producto.existencia = 0;\n      this.producto.estado = 1;\n    }\n\n  }\n\n  recibeDeHijo(event: any) {\n    this.producto.imagen = event.upload.url;\n    this.urlImage = event.upload.url;\n  }\n\n  guardar() {\n    if (this.productoId) {\n      console.log('products', this.producto);\n      this.connexion.editObject<Products>('products', this.producto).subscribe(\n        resp => {\n          //console.log('Datos editados con éxito.',resp);\n          this.success('Datos editados con éxito.', 'Productos');\n          this._router.navigate(['/listaProductos']);\n        },\n        error => {\n          //console.log('Ocurrió un error al intentar guardar los datos.', error);\n          this.error('Ocurrió un error al intentar guardar los datos.', 'Productos');\n          //this._router.navigate(['/listaProductos']);\n        }\n      );\n    } else {\n      let localCompany = JSON.parse(localStorage.getItem('userCompany'));\n      if (localCompany) {\n        this.producto.companyName = localCompany[0].companyName;\n        this.producto.sucursalName = localCompany[0].sucursalName;\n        this.connexion.addObject<Products>('products', this.producto).subscribe(\n          regis => {\n            //console.log('Datos guardados con éxito.');\n            this.success('Datos guardados con éxito.', 'Productos')\n            this.success('Continúa creando nuevos productos', 'Productos')\n            this.ngOnInit();\n          },\n          error => { \n            this.error('Error al guardar los datos.', 'Productos');\n            //console.log('Error al guardar los datos.'); \n          }\n        );\n      } else {\n        this._router.navigate(['/sign/login']);\n      }\n    }\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { person } from \"../../../models/person\";\nimport { job, field, address, Location, contact, profile } from \"../../../models/schema\";\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { globalVars, globalConfigurations } from 'src/app/services/globalVars';\nimport { isNullOrUndefined } from 'util';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  perfil: person;\n  public job: job;\n  public contact: contact;\n  public profile: profile;\n  public address: address;\n\n  ListLOC: Location[] = [];\n  ListLOCMain: Location[] = [];\n  listDepa: Location[] = [];\n  listCiudad: Location[] = [];\n  listZona: Location[] = [];\n  depasCI: Location[] = [];\n\n  public path_server = 'userFiles/profile';\n  public mostrar = true;\n  public title_upload = '';\n  public urlImage = 'assets/img/noPicture.png';\n  urlGlobal = globalVars.filesDomain;\n\n  selectedFile: File[] = [];\n  scaledImage: Blob[] = [];\n  thumbImage: Blob[] = [];\n  datosImagen: any[] = [];\n  porcentajeUpload: string = '0';\n  nombreFile: string = '';\n  countFiles: number = 0;\n  reader: FileReader = new FileReader();\n  upload: boolean;\n\n  public muestraUP: string = 'muestra';\n  public muestraMIDDLE: string = 'noMuestra';\n  public muestraDOWN: string = 'noMuestra';\n  lang: string;\n\n  constructor(private connexion: ConnexionService, private _router: Router) {\n    this.job = new job();\n    this.contact = new contact();\n    this.profile = new profile();\n    this.address = new address();\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListLOC = reslo;\n      this.ListLOCMain = reslo.filter(LOC => LOC.typecon_id == globalConfigurations.pais);\n      this.depasCI = this.ListLOC.filter(LOC => LOC.owner == globalConfigurations.ciudad);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n    let codigo = localStorage.getItem('code').substr(1);\n    if (codigo) {\n      setTimeout(() => {\n        this.connexion.get_dataId<person>('person', codigo).subscribe(myUser => {\n          console.log(myUser);\n          this.perfil = myUser;\n          this.urlImage = myUser.profile.photo.toString();\n          this.listDepa = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.country);\n          this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.state.id);\n          this.listZona = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.city.id);\n        });\n      }, 500);\n    }\n  }\n\n  recibeDeHijo(event: any) {\n    this.perfil.profile.photo = event.upload.url;\n    this.urlImage = event.upload.url;\n  }\n\n  onUpdate() {\n    this.connexion.editObject<person>('person', this.perfil).subscribe(\n      regis => {\n        localStorage.setItem('code', regis['estado'].toString() + regis['_id'].toString());\n        alert('Actualización de Usuario Satisfactorio.');\n        this._router.navigate(['/']);\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar actualizar el usuario. \\n Por favor verifique los datos e intente nuevamente.');\n            break;\n        }\n      }\n    );\n  }\n\n  agregarDireccion() {\n    let local, paisMini, depaMini, cityMini, zonaMini;\n    let objDepartamento: field;\n    let objCiudad: field;\n    let objZona: field;\n\n    try {\n      local = $('#local')[0].value;\n      if (!isNullOrUndefined(local)) {\n        let separador = local.split(\": \", 2);\n        paisMini = separador[1];\n        depaMini = $('#depaMini')[0].value;\n      }\n      if (!isNullOrUndefined(depaMini)) {\n        let separador = depaMini.split(\": \", 2);\n        objDepartamento = {\n          id: separador[1],\n          valor: $('#depaMini')[0].options[separador[0]].text\n        }\n      }\n      cityMini = $('#cityMini')[0].value;\n      if (!isNullOrUndefined(cityMini)) {\n        let separador = cityMini.split(\": \", 2);\n        objCiudad = {\n          id: separador[1],\n          valor: $('#cityMini')[0].options[separador[0]].text\n        }\n      };\n\n      zonaMini = $('#zonaMini')[0].value;\n      if (!isNullOrUndefined(zonaMini)) {\n        let separador = zonaMini.split(\": \", 2);\n        objZona = {\n          id: separador[1],\n          valor: $('#zonaMini')[0].options[separador[0]].text\n        }\n      }\n      let objAddress: address = {\n        country: paisMini,\n        state: objDepartamento,\n        city: objCiudad,\n        zone: objZona,\n        geoData: this.perfil.contact.address.geoData,\n        especificLocation: this.perfil.contact.address.especificLocation\n      };\n      this.perfil.contact.address = objAddress;\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  editSeller(direccion: address) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == direccion.country);\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == direccion.state.id);\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == direccion.city.id);\n  }\n  // Method in component class\n  updateSelectedValue(index) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectDepartamento(index) {\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectCiudad(index) {\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9zdGFmZi1saXN0L3N0YWZmLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { jjob } from 'src/app/models/job';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { job } from 'src/app/models/schema';\n\n@Component({\n  selector: 'app-staff-list',\n  templateUrl: './staff-list.component.html',\n  styleUrls: ['./staff-list.component.css']\n})\nexport class StaffListComponent implements OnInit {\n\n  constructor(private cox: ConnexionService) { }\n\n  jjob: jjob;\n  job: job;\n\n  ngOnInit() {\n    this.jjob = new jjob();\n    this.job = new job();\n    this.job.ciMain = 'A';\n    this.job.companyName = 'B';\n    this.job.typeAccount = 'C';\n  }\n\n  guardar() {\n    console.log('ESTO ES JOB',this.job);\n    this.jjob.job = this.job;\n    this.cox.addObject<jjob>('job', this.jjob).subscribe(\n      res =>{ \n        console.log(res);\n      }\n    );\n  }\n\n}\n","export class Alert {\r\n    type: AlertType;\r\n    message: string;\r\n    title: string;\r\n    alertId: string;\r\n    keepAfterRouteChange: boolean;\r\n\r\n    constructor(init?: Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { job } from \"./schema\";\r\n\r\nexport class jjob {\r\n    job: job;\r\n}","import { job, profile, contact, vehiculo } from \"./schema\";\r\n\r\nexport class person {\r\n    _id: String;\r\n    user: String;\r\n    profile: profile;\r\n    vehiculo: vehiculo;\r\n    contact?: contact;\r\n    associated?: job[];\r\n    estado: Number;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastComponent } from \"./toast/toast.component\";\nimport { ToastService } from \"../services/toast.service\";\nimport { UploadComponent } from './upload/upload.component';\n\n@NgModule({\n  declarations: [ToastComponent, UploadComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: [ToastService],\n  exports: [\n    ToastComponent, UploadComponent\n  ]\n})\nexport class ModulesModule { }\n","export default \".toastMain {\\r\\n    z-index: 2050!important;\\r\\n}\\r\\n\\r\\n.toast {\\r\\n    width: 400px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b2FzdC90b2FzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdG9hc3QvdG9hc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2FzdE1haW4ge1xyXG4gICAgei1pbmRleDogMjA1MCFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi50b2FzdCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { ToastService } from \"../../services/toast.service\";\nimport { AlertType, Alert } from 'src/app/models/alert';\nimport { Subscription } from 'rxjs';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.css']\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n\n  @Input() id: string;\n\n  alerts: Alert[] = [];\n  subscription: Subscription;\n  message: string;\n  title: string;\n  tipoAlert: string;\n\n  constructor(private toastService: ToastService) { }\n\n  ngOnInit() {\n    this.subscription = this.toastService.onAlert(this.id)\n      .subscribe(alert => {\n        if (!alert.message) {\n          // clear alerts when an empty alert is received\n          this.alerts = [];\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n        this.message = alert.message;\n        this.title = alert.title;\n        this.tipoAlert = this.cssClass(alert);\n        $('.toast').toast('show');\n      });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.subscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // remove specified alert from array\n    this.alerts = this.alerts.filter(x => x !== alert);\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    // return css class based on alert type\n    switch (alert.type) {\n      case AlertType.Success:\n        return 'alert alert-success';\n      case AlertType.Error:\n        return 'alert alert-danger';\n      case AlertType.Info:\n        return 'alert alert-info';\n      case AlertType.Warning:\n        return 'alert alert-warning';\n    }\n  }\n\n}","export default \"#divMainFile {\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n    background-color: lightgrey;\\r\\n}\\r\\n\\r\\n.muestra {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.noMuestra {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.cardCompleto:hover>div {\\r\\n    background-color: rgba(0,0,0,.4);\\r\\n}\\r\\n\\r\\n.cardCompleto:hover * {\\r\\n    background-color: var(--color-primary-soft);\\r\\n    opacity: 0.9;\\r\\n    filter:  alpha(opacity=90);\\r\\n    -webkit-filter:  alpha(opacity=90);\\r\\n}\\r\\n\\r\\n.card-text {\\r\\n    opacity: 0.5;\\r\\n    filter:  alpha(opacity=50);\\r\\n    -webkit-filter:  alpha(opacity=50);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLFlBQVk7SUFDWiwwQkFBMEI7SUFDMUIsa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixrQ0FBa0M7QUFDdEMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3VwbG9hZC91cGxvYWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNkaXZNYWluRmlsZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XHJcbn1cclxuXHJcbi5tdWVzdHJhIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4ubm9NdWVzdHJhIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5jYXJkQ29tcGxldG86aG92ZXI+ZGl2IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjQpO1xyXG59XHJcblxyXG4uY2FyZENvbXBsZXRvOmhvdmVyICoge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeS1zb2Z0KTtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIGZpbHRlcjogIGFscGhhKG9wYWNpdHk9OTApO1xyXG4gICAgLXdlYmtpdC1maWx0ZXI6ICBhbHBoYShvcGFjaXR5PTkwKTtcclxufVxyXG5cclxuLmNhcmQtdGV4dCB7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICBmaWx0ZXI6ICBhbHBoYShvcGFjaXR5PTUwKTtcclxuICAgIC13ZWJraXQtZmlsdGVyOiAgYWxwaGEob3BhY2l0eT01MCk7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars, globalImagesSize } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  providers: [ConnexionService],\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  selectedFile: File[] = [];\n  scaledImage: Blob[] = [];\n  thumbImage: Blob[] = [];\n  datosImagen: any[] = [];\n  porcentajeUpload: string = '0';\n  nombreFile: string = '';\n  countFiles: number = 0;\n  reader: FileReader = new FileReader();\n  upload: boolean;\n\n  public muestraUP: string = 'muestra';\n  public muestraMIDDLE: string = 'noMuestra';\n  public muestraDOWN: string = 'noMuestra';\n  lang: string;\n\n  @Input('path') path_server: string;\n  @Input('mostrar') mostrar: boolean;\n  @Input('title') title_upload: string;\n  @Input('name') file_name: string;\n  @Output('') desdeElHijo = new EventEmitter();\n\n  constructor(private http: HttpClient) {\n    \n  }\n\n  ngOnInit() {\n    this.upload = false;\n  }\n\n  sizeCanva(canva: any, widthImg: number, heightImg: number, widthScale: number, heightScale: number) {\n    if (widthImg > heightImg) {\n      const scaleFactorWidth = widthScale / widthImg;\n      canva.width = widthScale;\n      canva.height = heightImg * scaleFactorWidth;\n    } else {\n      const scaleFactorHeight = heightScale / heightImg;\n      canva.width = widthImg * scaleFactorHeight;\n      canva.height = heightScale;\n    }\n    return canva;\n  }\n\n  newtoBlob() {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n      value: function (callback, type?, quality?) {\n        var dataURL = this.toDataURL(type, quality).split(',')[1];\n        setTimeout(function () {\n          let binStr = atob(dataURL);\n          let len = binStr.length;\n          let arr = new Uint8Array(len);\n          for (var i = 0; i < len; i++) {\n            arr[i] = binStr.charCodeAt(i);\n          }\n          callback(new Blob([arr], { type: type || 'image/jpeg' }));\n        });\n      }\n    });\n  }\n\n  onFileSelected(event) {\n    console.log('this.path_serve',this.path_server);\n    var myFiles = event.target.files;\n\n    if (this.upload == true) {\n      this.upload = false;\n      this.onCancel();\n    }\n\n    for (var i = 0, f; f = myFiles[i]; i++) {\n      this.selectedFile.push(f);\n      this.reader = new FileReader();\n      var self = this;\n      this.reader.onload = (function (theFile) {\n        return function (e) {\n          const miImg = new Image();\n          miImg.src = (e.target as any).result;\n          (miImg.onload = () => {\n            var canvaScale = document.createElement('canvas');\n            var canvaThumb = document.createElement('canvas');\n\n            var crc2dScale = <CanvasRenderingContext2D>canvaScale.getContext('2d');\n            var crc2dThumb = <CanvasRenderingContext2D>canvaThumb.getContext('2d');\n\n            canvaScale = self.sizeCanva(canvaScale, miImg.width, miImg.height, globalImagesSize.widthScale, globalImagesSize.heightScale);\n            canvaThumb = self.sizeCanva(canvaThumb, miImg.width, miImg.height, globalImagesSize.thumbWidth, globalImagesSize.thumbHeight);\n            if (miImg.width > miImg.height) {\n              crc2dScale.drawImage(miImg, 0, 0, globalImagesSize.widthScale, canvaScale.height);\n              crc2dThumb.drawImage(miImg, 0, 0, globalImagesSize.thumbWidth, canvaThumb.height);\n            } else {\n              crc2dScale.drawImage(miImg, 0, 0, canvaScale.width, globalImagesSize.heightScale);\n              crc2dThumb.drawImage(miImg, 0, 0, canvaThumb.width, globalImagesSize.thumbHeight);\n            }\n            var nuevaSRC = crc2dThumb.canvas.toDataURL('image/jpeg', 1);\n\n            if (!HTMLCanvasElement.prototype.toBlob) {\n              self.newtoBlob();\n            }\n            crc2dScale.canvas.toBlob(function (blob) {\n              self.scaledImage.push(blob);\n            },\n              'image/jpeg',\n              1\n            );\n            crc2dThumb.canvas.toBlob(function (blob) {\n              self.thumbImage.push(blob);\n            },\n              'image/jpeg',\n              1\n            );\n            self.datosImagen.push({ id: 'img' + theFile.name, src: nuevaSRC, 'dataName': theFile.name });\n          });\n        }\n      })(f);\n      \n      this.reader.readAsDataURL(f);\n    };\n\n    if (myFiles.length > 0) {\n      this.muestraUP = 'muestra';\n      this.muestraMIDDLE = 'muestra';\n      this.muestraDOWN = 'muestra';\n    }\n  }\n\n  onCancel() {\n    for (let i = 0; i < this.selectedFile.length; i++) {\n      this.selectedFile.pop();\n      this.datosImagen.pop();\n    }\n    this.datosImagen = [];\n    this.selectedFile = [];\n    this.reader.abort();\n    this.reader.EMPTY;\n    this.reader = new FileReader();\n    $(\"#fileUpload\").remove();\n    this.muestraMIDDLE = 'noMuestra';\n    this.muestraDOWN = 'noMuestra';\n  }\n\n  deleteFunction($event: any, name: string) {\n    $event.preventDefault();\n\n    if (confirm('¿ Está seguro que desea eliminar la imagen seleccionada. ?')) {\n      let encuentra = -10;\n      for (let i = 0; i < this.selectedFile.length; i++) {\n        if (this.selectedFile[i].name == name) {\n          encuentra = i;\n          if (this.selectedFile.length == 1) {\n            this.onCancel();\n            return;\n          }\n        }\n      }\n      if (encuentra >= 0) {\n        this.scaledImage.splice(encuentra, 1);\n        this.thumbImage.splice(encuentra, 1);\n        this.datosImagen.splice(encuentra, 1);\n        this.selectedFile.splice(encuentra, 1);\n      }\n    }\n  }\n\n  onUpload() {\n    if (!this.selectedFile) {\n      console.log('Archivo Eliminado');\n      return;\n    }\n    var head = new HttpHeaders(\n      {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    );\n    var dt = new Date();\n    \n    for (let index = 0; index < this.selectedFile.length; index++) {\n      let fdScale = new FormData();\n      let nuevoNombre = this.changeName(this.selectedFile[index].name);\n      try {\n        fdScale.append('file_name', nuevoNombre);\n        fdScale.append('file_path', this.path_server);\n        fdScale.append('file', this.scaledImage[index], 'Scale' + dt.getUTCMinutes().toString() + dt.getUTCSeconds().toString() + dt.getUTCMilliseconds().toString() + nuevoNombre);\n\n        this.http.post(globalVars.domain + '/api/v1/image/', fdScale, {\n          reportProgress: true,\n          observe: 'events',\n          headers: head\n        }).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.porcentajeUpload = Math.round(event.loaded / event.total * 100) + \"%\";\n            document.getElementById(\"pbFile\" + this.selectedFile[index].name).style.width = this.porcentajeUpload;\n            document.getElementById(\"pbFile\" + this.selectedFile[index].name).innerHTML = this.porcentajeUpload;\n          }\n        });\n\n      } catch (error) {\n        console.log('Error: ' + error)\n      }\n    }\n\n    for (let index = 0; index < this.selectedFile.length; index++) {\n      let fdThumb = new FormData();\n      let nuevoNombre = this.changeName(this.selectedFile[index].name);\n      try {\n        fdThumb.append('file_name', nuevoNombre);\n        fdThumb.append('file_path', this.path_server + '/thumbnail');\n        fdThumb.append('file', this.thumbImage[index], 'Thumb' + dt.getUTCMinutes().toString() + dt.getUTCSeconds().toString() + dt.getUTCMilliseconds().toString() + nuevoNombre);\n        this.http.post(globalVars.domain + '/api/v1/image/', fdThumb, {\n          observe: 'events',\n          headers: head\n        }).subscribe(event => {\n          if (event.type === HttpEventType.Response) {\n            this.desdeElHijo.emit({ upload: event.body });\n            this.muestraMIDDLE = 'noMuestra';\n            this.muestraDOWN = 'noMuestra';\n          }\n        });\n\n      } catch (error) {\n        console.log('Error: ' + error)\n      }\n    }\n    this.upload = true;\n  }\n\n  escapeRegExp(fileName: string) {\n    return fileName.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n  \n  changeName(nombre: string) {\n    let replaceable = ['+', '-', '*', '`', '´', '[', ']', ' ', '{', '}', '(', ')'];\n    for (let i = 0; i < replaceable.length; i++) {\n      let rep = new RegExp(this.escapeRegExp(replaceable[i]), 'g');\n      //nombre = nombre.replace(replaceable[i], '');\n      nombre = nombre.replace(rep, '');\n    }\n    return nombre;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'expedido'\n})\nexport class ExpedidoPipe implements PipeTransform {\n\n  transform(value: string, args: any): any {\n    let resp;\n    args.forEach(depa => {\n      if (depa._id == value) {\n        resp = depa.acronym;\n      }\n    });\n    return resp;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nombre'\n})\nexport class NombrePipe implements PipeTransform {\n\n  transform(value: string, args: any): any {\n    let resp;\n    args.forEach(depa => {\n      if (depa._id == value) {\n        resp = depa.name;\n      }\n    });\n    return resp;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationStorageService {\n\n  constructor() { }\n\n  public isAuthenticated(): boolean {\n    //return this.getToken() == '1';\n    if (!this.getToken()) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  storeToken(token: string) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"userType\");\n  }\n\n  removeToken() {\n    return localStorage.removeItem(\"token\");\n  }\n}","import { Injectable } from '@angular/core';\nimport { AuthenticationStorageService } from './authentication-storage.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private authenticate: AuthenticationStorageService, private router: Router, private http: HttpClient) { }\n\n  canActivate(): boolean | Promise<boolean> {\n    if (!localStorage.getItem('userCi')) {\n      this.redirectLogin();\n    } else {\n      return true;\n    }\n    /*if (!this.authenticate.isAuthenticated()) {\n      localStorage.clear();\n      console.log('You are not authorised to view this page');\n      this.redirectLogin();\n      return false;\n    }\n    return true;*/\n  }\n\n  redirectLogin() {\n    this.router.navigate(['/sign/login']);\n  }\n}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeLiveService {\n  @Output() mySomeThing: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  initChangeLive\n\n  setEquipo(equipoActual: string) {\n    localStorage.setItem('actual', equipoActual);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  public domain: string;\n  public equipo: string;\n\n  constructor() {\n    this.domain = \"http://localhost:3000\";\n    this.equipo = null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Alert, AlertType } from '../models/alert';\nimport { filter } from 'rxjs/operators';\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    private subject = new Subject<Alert>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert messages\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    // enable subscribing to alerts observable\n    onAlert(alertId?: string): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.alertId === alertId));\n    }\n\n    // convenience methods\n    success(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Success, alertId }));\n    }\n\n    error(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Error, alertId }));\n    }\n\n    info(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Info, alertId }));\n    }\n\n    warn(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Warning, alertId }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        this.keepAfterRouteChange = alert.keepAfterRouteChange;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(alertId?: string) {\n        this.subject.next(new Alert({ alertId }));\n    }\n}\n"],"sourceRoot":"webpack:///"}