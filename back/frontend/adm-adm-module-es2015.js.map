{"version":3,"sources":["./node_modules/@swimlane/ngx-datatable/fesm2015/swimlane-ngx-datatable.js","./src/app/adm/adm.component.html","./src/app/adm/layouts/footer/footer.component.html","./src/app/adm/layouts/navbar/navbar.component.html","./src/app/adm/layouts/sidebar/sidebar.component.html","./src/app/adm/tools/show-errors/show-errors.component.html","./src/app/adm/views/configuration/configuration.component.html","./src/app/adm/views/descendencia-ficha/descendencia-ficha.component.html","./src/app/adm/views/descendencia-list/descendencia-list.component.html","./src/app/adm/views/descendencia-profile/descendencia-profile.component.html","./src/app/adm/views/invitation-list/invitation-list.component.html","./src/app/adm/views/invitation/invitation.component.html","./src/app/adm/views/main/main.component.html","./src/app/adm/views/profile/profile.component.html","./src/app/adm/views/staff-list/staff-list.component.html","./src/app/modules/toast/toast.component.html","./src/app/modules/upload/upload.component.html","./src/app/adm/adm-routing.module.ts","./src/app/adm/adm.component.css","./src/app/adm/adm.component.ts","./src/app/adm/adm.module.ts","./src/app/adm/layouts/footer/footer.component.css","./src/app/adm/layouts/footer/footer.component.ts","./src/app/adm/layouts/navbar/navbar.component.css","./src/app/adm/layouts/navbar/navbar.component.ts","./src/app/adm/layouts/sidebar/sidebar.component.css","./src/app/adm/layouts/sidebar/sidebar.component.ts","./src/app/adm/tools/show-errors/show-errors.component.css","./src/app/adm/tools/show-errors/show-errors.component.ts","./src/app/adm/views/configuration/configuration.component.css","./src/app/adm/views/configuration/configuration.component.ts","./src/app/adm/views/descendencia-ficha/descendencia-ficha.component.css","./src/app/adm/views/descendencia-ficha/descendencia-ficha.component.ts","./src/app/adm/views/descendencia-list/descendencia-list.component.css","./src/app/adm/views/descendencia-list/descendencia-list.component.ts","./src/app/adm/views/descendencia-profile/descendencia-profile.component.css","./src/app/adm/views/descendencia-profile/descendencia-profile.component.ts","./src/app/adm/views/invitation-list/invitation-list.component.css","./src/app/adm/views/invitation-list/invitation-list.component.ts","./src/app/adm/views/invitation/invitation.component.css","./src/app/adm/views/invitation/invitation.component.ts","./src/app/adm/views/main/main.component.css","./src/app/adm/views/main/main.component.ts","./src/app/adm/views/profile/profile.component.css","./src/app/adm/views/profile/profile.component.ts","./src/app/adm/views/staff-list/staff-list.component.css","./src/app/adm/views/staff-list/staff-list.component.ts","./src/app/models/alert.ts","./src/app/models/job.ts","./src/app/models/person.ts","./src/app/modules/modules.module.ts","./src/app/modules/toast/toast.component.css","./src/app/modules/toast/toast.component.ts","./src/app/modules/upload/upload.component.css","./src/app/modules/upload/upload.component.ts","./src/app/pipes/expedido.pipe.ts","./src/app/pipes/nombre.pipe.ts","./src/app/services/authentication-storage.service.ts","./src/app/services/authentication.service.ts","./src/app/services/change-live.service.ts","./src/app/services/global.service.ts","./src/app/services/toast.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuV;AAC9R;AACE;AAChB;AACI;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,WAAW,EAQV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA,WAAW,EAMV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8CAA8C;AAC7E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mCAAmC;AAClE;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,iBAAiB,OAAO,yDAAW,4BAA4B;AAC/D,eAAe,OAAO,oDAAM,EAAE;AAC9B;AACA,WAAW,EAiBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,4BAA4B,0DAAY;AACxC,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC,EAAE;AACzC;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,kCAAkC;AAClC,uBAAuB,EAAE;AACzB,4BAA4B,sDAAS;AACrC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,iCAAiC,sDAAS;AAC1C,sBAAsB,gEAAS;AAC/B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,0BAA0B;AACzD;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,oDAAM,EAAE;AAChC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,eAAe,OAAO,oDAAM,EAAE;AAC9B;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,+BAA+B,EAAE,mBAAmB,EAAE,kEAAkE,EAAE;AAC1H;AACA,WAAW,EAAE;AACb,kCAAkC,EAAE,mBAAmB,EAAE,kEAAkE,EAAE;AAC7H;AACA,WAAW,EAAE;AACb,0BAA0B,EAAE,mBAAmB,EAAE,kEAAkE,EAAE;;AAErH;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,sDAAS;AACrC;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB,iCAAiC,sDAAS;AAC1C,sBAAsB,gEAAS;AAC/B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E;AACA,WAAW,EAoBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,iCAAiC,0DAAY;AAC7C,qCAAqC;AACrC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,8BAA8B;AAC5C,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gBAAgB,wBAAwB;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,eAAe,wBAAwB;AACvC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,0BAA0B;AACzD;AACA;AACA;AACA,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA,eAAe,OAAO,oDAAM,EAAE;AAC9B,qBAAqB,OAAO,oDAAM,EAAE;AACpC,kBAAkB,OAAO,6DAAe,8BAA8B,oBAAoB,IAAI;AAC9F;AACA,WAAW,EAkBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,gCAAgC,0DAAY;AAC5C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,sDAAS;AACjC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,kCAAkC,sDAAS;AAC3C,sBAAsB,gEAAS;AAC/B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,2BAA2B;AAC1D;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,aAAa,OAAO,yDAAW,0BAA0B;AACzD,mBAAmB,OAAO,yDAAW,8BAA8B;AACnE,mBAAmB,OAAO,0DAAY,oCAAoC;AAC1E;AACA,WAAW,EAyBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,EAAE;AAClC;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,yDAAW,8BAA8B,GAAG,OAAO,mDAAK,EAAE;AACrF,mBAAmB,OAAO,yDAAW,6BAA6B,GAAG,OAAO,mDAAK,EAAE;AACnF,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAwCV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,yCAAyC;AACxE;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,uBAAuB;AACzD,sBAAsB,OAAO,0DAAY,iDAAiD,OAAO,yDAAW,gBAAgB,IAAI;AAChI,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAeV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,qCAAqC;AACrC;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iBAAiB,MAAM;AACvB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8CAA8C;AAC7E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,4CAA4C;AAC3E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,0CAA0C;AACzE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mCAAmC;AAClE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,2BAA2B;AACjE,0BAA0B,OAAO,0DAAY,wCAAwC,OAAO,yDAAW,gBAAgB,IAAI;AAC3H,4BAA4B,OAAO,mDAAK,6BAA6B;AACrE,4BAA4B,OAAO,0DAAY,0CAA0C,OAAO,yDAAW,gBAAgB,IAAI;AAC/H,gCAAgC,OAAO,mDAAK,iCAAiC;AAC7E,gCAAgC,OAAO,0DAAY,yCAAyC,OAAO,yDAAW,gBAAgB,IAAI;AAClI;AACA,WAAW,EAmEV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,WAAW,EAGV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,uCAAuC;AACtE;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,uBAAuB;AACzD,sBAAsB,OAAO,0DAAY,+CAA+C,OAAO,yDAAW,gBAAgB,IAAI;AAC9H,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAgBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mCAAmC;AAClE;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,uBAAuB;AACzD,sBAAsB,OAAO,0DAAY,4CAA4C,OAAO,yDAAW,iBAAiB,IAAI;AAC5H;AACA,WAAW,EAmBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,uBAAuB,2CAA2C;AAClE,uBAAuB,+CAA+C;AACtE,uBAAuB,6CAA6C;AACpE;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,yFAAyF;AACxG,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,WAAW,cAAc,YAAY;AACpF;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,iBAAiB;AACzD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EASV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,+CAA+C,EAAE,MAAM,EAAE;AACzD;AACA;AACA;AACA,wDAAwD,EAAE,MAAM,EAAE;AAClE;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,yBAAyB,EAAE;AAC3B;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,wBAAwB,0DAAY;AACpC,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC,gCAAgC,0DAAY;AAC5C,kCAAkC,0DAAY;AAC9C,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,0FAA0F,EAAE;AAC5F,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,cAAc;AAC7B,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,4BAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,8CAA8C;AAC9C,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB;AACxB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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gB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,6BAA6B;AACpD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,oCAAoC;AACzD;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,yDAAW,2BAA2B,GAAG,OAAO,mDAAK,EAAE;AAClF,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,oDAAM,EAAE;AAC3B,eAAe,OAAO,oDAAM,EAAE;AAC9B,cAAc,OAAO,oDAAM,EAAE;AAC7B,cAAc,OAAO,oDAAM,EAAE;AAC7B,yBAAyB,OAAO,oDAAM,EAAE;AACxC,mBAAmB,OAAO,yDAAW,0BAA0B;AAC/D;AACA,WAAW,EAsDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,KAAK;AACV;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjtC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA,4BAA4B,oDAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,gBAAgB;AACzC,oCAAoC,uDAAuD;AAC3F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,aAAa;AACnC,oCAAoC,kDAAkD;AACtF;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,8BAA8B;AACnD,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mCAAmC;AACnC,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;A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AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,qCAAqC;AAC1E;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,cAAc,OAAO,mDAAK,EAAE;AAC5B,oBAAoB,OAAO,yDAAW,8BAA8B,GAAG,OAAO,mDAAK,EAAE;AACrF,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,oDAAM,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B,yBAAyB,OAAO,oDAAM,EAAE;AACxC,wBAAwB,OAAO,yDAAW,oBAAoB;AAC9D,YAAY,OAAO,yDAAW,yBAAyB;AACvD,gBAAgB,OAAO,yDAAW,gCAAgC;AAClE,gBAAgB,OAAO,yDAAW,gCAAgC;AAClE,aAAa,OAAO,yDAAW,6BAA6B;AAC5D,qBAAqB,OAAO,0DAAY,sCAAsC;AAC9E;AACA,WAAW,EAkDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC,mCAAmC,GAAG,mBAAmB;AAClG,UAAU,8BAA8B,GAAG;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,0BAA0B,OAAO,mDAAK,EAAE;AACxC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,YAAY,OAAO,oDAAM,EAAE;AAC3B;AACA,WAAW,EA2BV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA,kCAAkC,EAAE,kBAAkB,EAAE;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAmBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA,oBAAoB;AACpB,sBAAsB;AACtB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,4CAA4C,eAAe;AAC3D,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,6DAAe,EAAE;AAC7B,KAAK,sCAAsC,OAAO,sDAAQ,EAAE,GAAG;AAC/D,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,WAAW,OAAO,mDAAK,EAAE;AACzB,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,yDAAW,oBAAoB;AACtD,iBAAiB,OAAO,yDAAW,8BAA8B,GAAG,OAAO,mDAAK,EAAE;AAClF,0BAA0B,OAAO,yDAAW,6BAA6B;AACzE,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE,oBAAoB,OAAO,0DAAY,qCAAqC;AAC5E;AACA,WAAW,EAyDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,6DAAe;AAC3B;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,WAAW,OAAO,mDAAK,EAAE;AACzB,mBAAmB,OAAO,mDAAK,EAAE;AACjC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,0DAAY,sCAAsC;AAC9E;AACA,WAAW,EA8CV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2BAA2B;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,aAAa,OAAO,mDAAK,EAAE;AAC3B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,WAAW,OAAO,mDAAK,EAAE;AACzB,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,oBAAoB,OAAO,uDAAS,0BAA0B,OAAO,8DAAgB,gBAAgB,IAAI;AACzG,wBAAwB,OAAO,yDAAW,oBAAoB;AAC9D,aAAa,OAAO,yDAAW,6BAA6B;AAC5D,gBAAgB,OAAO,yDAAW,gCAAgC;AAClE,gBAAgB,OAAO,yDAAW,gCAAgC;AAClE,cAAc,OAAO,yDAAW,2BAA2B;AAC3D,eAAe,OAAO,0DAAY,oBAAoB;AACtD,cAAc,OAAO,0DAAY,mBAAmB;AACpD,eAAe,OAAO,0DAAY,gCAAgC;AAClE,kBAAkB,OAAO,0DAAY,mCAAmC;AACxE,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,WAAW,EA8EV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,iBAAiB;AACpC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,kBAAkB;AAClB,WAAW,EAaV;AACD;AACA;AACA,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,mBAAmB;AAClC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,UAAU,eAAe,EAAE;AAC1C,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B;AACA,WAAW,EAmBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EASV;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,QAAQ,oCAAoC;AAC5E;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA,WAAW,EAeV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,oDAAoD;AAC7E;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAA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","file":"adm-adm-module-es2015.js","sourcesContent":["import { Injectable, Inject, Directive, TemplateRef, EventEmitter, ElementRef, NgZone, HostBinding, Output, Input, Renderer2, HostListener, KeyValueDiffers, ContentChildren, Component, ChangeDetectionStrategy, ContentChild, ChangeDetectorRef, ViewChild, ViewEncapsulation, SkipSelf, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, fromEvent, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass ScrollbarHelper {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this.document = document;\n        this.width = this.getWidth();\n    }\n    /**\n     * @return {?}\n     */\n    getWidth() {\n        /** @type {?} */\n        const outer = this.document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.width = '100px';\n        outer.style.msOverflowStyle = 'scrollbar';\n        this.document.body.appendChild(outer);\n        /** @type {?} */\n        const widthNoScroll = outer.offsetWidth;\n        outer.style.overflow = 'scroll';\n        /** @type {?} */\n        const inner = this.document.createElement('div');\n        inner.style.width = '100%';\n        outer.appendChild(inner);\n        /** @type {?} */\n        const widthWithScroll = inner.offsetWidth;\n        outer.parentNode.removeChild(outer);\n        return widthNoScroll - widthWithScroll;\n    }\n}\nScrollbarHelper.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nScrollbarHelper.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /** @type {?} */\n    ScrollbarHelper.prototype.width;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollbarHelper.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\nclass DimensionsHelper {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    getDimensions(element) {\n        return element.getBoundingClientRect();\n    }\n}\nDimensionsHelper.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\nclass ColumnChangesService {\n    constructor() {\n        this.columnInputChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    get columnInputChanges$() {\n        return this.columnInputChanges.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n    onInputChange() {\n        this.columnInputChanges.next();\n    }\n}\nColumnChangesService.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ColumnChangesService.prototype.columnInputChanges;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableFooterTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-footer-template]' },] }\n];\n/** @nocollapse */\nDataTableFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableFooterTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nclass VisibilityDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.runCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this.timeout);\n    }\n    /**\n     * @return {?}\n     */\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    runCheck() {\n        /** @type {?} */\n        const check = (/**\n         * @return {?}\n         */\n        () => {\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.timeout = setTimeout((/**\n                     * @return {?}\n                     */\n                    () => check()), 50);\n                }));\n            }\n        });\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        () => check()));\n    }\n}\nVisibilityDirective.decorators = [\n    { type: Directive, args: [{ selector: '[visibilityObserver]' },] }\n];\n/** @nocollapse */\nVisibilityDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nVisibilityDirective.propDecorators = {\n    isVisible: [{ type: HostBinding, args: ['class.visible',] }],\n    visible: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    VisibilityDirective.prototype.isVisible;\n    /** @type {?} */\n    VisibilityDirective.prototype.visible;\n    /** @type {?} */\n    VisibilityDirective.prototype.timeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    VisibilityDirective.prototype.zone;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\nclass DraggableDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.dragX = true;\n        this.dragY = true;\n        this.dragStart = new EventEmitter();\n        this.dragging = new EventEmitter();\n        this.dragEnd = new EventEmitter();\n        this.isDragging = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n            this.onMousedown(changes['dragEventTarget'].currentValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseup(event) {\n        if (!this.isDragging)\n            return;\n        this.isDragging = false;\n        this.element.classList.remove('dragging');\n        if (this.subscription) {\n            this._destroySubscription();\n            this.dragEnd.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n        // we only want to drag the inner header text\n        /** @type {?} */\n        const isDragElm = ((/** @type {?} */ (event.target))).classList.contains('draggable');\n        if (isDragElm && (this.dragX || this.dragY)) {\n            event.preventDefault();\n            this.isDragging = true;\n            /** @type {?} */\n            const mouseDownPos = { x: event.clientX, y: event.clientY };\n            /** @type {?} */\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.onMouseup(ev)));\n            /** @type {?} */\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.move(ev, mouseDownPos)));\n            this.subscription.add(mouseMoveSub);\n            this.dragStart.emit({\n                event,\n                element: this.element,\n                model: this.dragModel\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} mouseDownPos\n     * @return {?}\n     */\n    move(event, mouseDownPos) {\n        if (!this.isDragging)\n            return;\n        /** @type {?} */\n        const x = event.clientX - mouseDownPos.x;\n        /** @type {?} */\n        const y = event.clientY - mouseDownPos.y;\n        if (this.dragX)\n            this.element.style.left = `${x}px`;\n        if (this.dragY)\n            this.element.style.top = `${y}px`;\n        this.element.classList.add('dragging');\n        this.dragging.emit({\n            event,\n            element: this.element,\n            model: this.dragModel\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nDraggableDirective.decorators = [\n    { type: Directive, args: [{ selector: '[draggable]' },] }\n];\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nDraggableDirective.propDecorators = {\n    dragEventTarget: [{ type: Input }],\n    dragModel: [{ type: Input }],\n    dragX: [{ type: Input }],\n    dragY: [{ type: Input }],\n    dragStart: [{ type: Output }],\n    dragging: [{ type: Output }],\n    dragEnd: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DraggableDirective.prototype.dragEventTarget;\n    /** @type {?} */\n    DraggableDirective.prototype.dragModel;\n    /** @type {?} */\n    DraggableDirective.prototype.dragX;\n    /** @type {?} */\n    DraggableDirective.prototype.dragY;\n    /** @type {?} */\n    DraggableDirective.prototype.dragStart;\n    /** @type {?} */\n    DraggableDirective.prototype.dragging;\n    /** @type {?} */\n    DraggableDirective.prototype.dragEnd;\n    /** @type {?} */\n    DraggableDirective.prototype.element;\n    /** @type {?} */\n    DraggableDirective.prototype.isDragging;\n    /** @type {?} */\n    DraggableDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/** @type {?} */\nconst MouseEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .MouseEvent));\n/** @type {?} */\nconst KeyboardEvent = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global))))\n    .KeyboardEvent));\n/** @type {?} */\nconst Event = (/** @type {?} */ ((((/** @type {?} */ ((typeof window !== 'undefined' && window)))) || ((/** @type {?} */ (global)))).Event));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ResizeableDirective {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this.renderer = renderer;\n        this.resizeEnabled = true;\n        this.resize = new EventEmitter();\n        this.resizing = false;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const renderer2 = this.renderer;\n        /** @type {?} */\n        const node = renderer2.createElement('span');\n        if (this.resizeEnabled) {\n            renderer2.addClass(node, 'resize-handle');\n        }\n        else {\n            renderer2.addClass(node, 'resize-handle--not-resizable');\n        }\n        renderer2.appendChild(this.element, node);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @return {?}\n     */\n    onMouseup() {\n        this.resizing = false;\n        if (this.subscription && !this.subscription.closed) {\n            this._destroySubscription();\n            this.resize.emit(this.element.clientWidth);\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n        /** @type {?} */\n        const isHandle = ((/** @type {?} */ (event.target))).classList.contains('resize-handle');\n        /** @type {?} */\n        const initialWidth = this.element.clientWidth;\n        /** @type {?} */\n        const mouseDownScreenX = event.screenX;\n        if (isHandle) {\n            event.stopPropagation();\n            this.resizing = true;\n            /** @type {?} */\n            const mouseup = fromEvent(document, 'mouseup');\n            this.subscription = mouseup.subscribe((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            (ev) => this.onMouseup()));\n            /** @type {?} */\n            const mouseMoveSub = fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this.move(e, initialWidth, mouseDownScreenX)));\n            this.subscription.add(mouseMoveSub);\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?} initialWidth\n     * @param {?} mouseDownScreenX\n     * @return {?}\n     */\n    move(event, initialWidth, mouseDownScreenX) {\n        /** @type {?} */\n        const movementX = event.screenX - mouseDownScreenX;\n        /** @type {?} */\n        const newWidth = initialWidth + movementX;\n        /** @type {?} */\n        const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n        /** @type {?} */\n        const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n        if (overMinWidth && underMaxWidth) {\n            this.element.style.width = `${newWidth}px`;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nResizeableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[resizeable]',\n                host: {\n                    '[class.resizeable]': 'resizeEnabled'\n                }\n            },] }\n];\n/** @nocollapse */\nResizeableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nResizeableDirective.propDecorators = {\n    resizeEnabled: [{ type: Input }],\n    minWidth: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    resize: [{ type: Output }],\n    onMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    ResizeableDirective.prototype.resizeEnabled;\n    /** @type {?} */\n    ResizeableDirective.prototype.minWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.maxWidth;\n    /** @type {?} */\n    ResizeableDirective.prototype.resize;\n    /** @type {?} */\n    ResizeableDirective.prototype.element;\n    /** @type {?} */\n    ResizeableDirective.prototype.subscription;\n    /** @type {?} */\n    ResizeableDirective.prototype.resizing;\n    /**\n     * @type {?}\n     * @private\n     */\n    ResizeableDirective.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OrderableDirective {\n    /**\n     * @param {?} differs\n     * @param {?} document\n     */\n    constructor(differs, document) {\n        this.document = document;\n        this.reorder = new EventEmitter();\n        this.targetChanged = new EventEmitter();\n        this.differ = differs.find({}).create();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // HACK: Investigate Better Way\n        this.updateSubscriptions();\n        this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.draggables.forEach((/**\n         * @param {?} d\n         * @return {?}\n         */\n        d => {\n            d.dragStart.unsubscribe();\n            d.dragging.unsubscribe();\n            d.dragEnd.unsubscribe();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    updateSubscriptions() {\n        /** @type {?} */\n        const diffs = this.differ.diff(this.createMapDiffs());\n        if (diffs) {\n            /** @type {?} */\n            const subscribe = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ currentValue, previousValue }) => {\n                unsubscribe({ previousValue });\n                if (currentValue) {\n                    currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n                    currentValue.dragging.subscribe(this.onDragging.bind(this));\n                    currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n                }\n            });\n            /** @type {?} */\n            const unsubscribe = (/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ previousValue }) => {\n                if (previousValue) {\n                    previousValue.dragStart.unsubscribe();\n                    previousValue.dragging.unsubscribe();\n                    previousValue.dragEnd.unsubscribe();\n                }\n            });\n            diffs.forEachAddedItem(subscribe);\n            // diffs.forEachChangedItem(subscribe.bind(this));\n            diffs.forEachRemovedItem(unsubscribe);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onDragStart() {\n        this.positions = {};\n        /** @type {?} */\n        let i = 0;\n        for (const dragger of this.draggables.toArray()) {\n            /** @type {?} */\n            const elm = dragger.element;\n            /** @type {?} */\n            const left = parseInt(elm.offsetLeft.toString(), 0);\n            this.positions[dragger.dragModel.prop] = {\n                left,\n                right: left + parseInt(elm.offsetWidth.toString(), 0),\n                index: i++,\n                element: elm\n            };\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onDragging({ element, model, event }) {\n        /** @type {?} */\n        const prevPos = this.positions[model.prop];\n        /** @type {?} */\n        const target = this.isTarget(model, event);\n        if (target) {\n            if (this.lastDraggingIndex !== target.i) {\n                this.targetChanged.emit({\n                    prevIndex: this.lastDraggingIndex,\n                    newIndex: target.i,\n                    initialIndex: prevPos.index\n                });\n                this.lastDraggingIndex = target.i;\n            }\n        }\n        else if (this.lastDraggingIndex !== prevPos.index) {\n            this.targetChanged.emit({\n                prevIndex: this.lastDraggingIndex,\n                initialIndex: prevPos.index\n            });\n            this.lastDraggingIndex = prevPos.index;\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onDragEnd({ element, model, event }) {\n        /** @type {?} */\n        const prevPos = this.positions[model.prop];\n        /** @type {?} */\n        const target = this.isTarget(model, event);\n        if (target) {\n            this.reorder.emit({\n                prevIndex: prevPos.index,\n                newIndex: target.i,\n                model\n            });\n        }\n        this.lastDraggingIndex = undefined;\n        element.style.left = 'auto';\n    }\n    /**\n     * @param {?} model\n     * @param {?} event\n     * @return {?}\n     */\n    isTarget(model, event) {\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        const x = event.x || event.clientX;\n        /** @type {?} */\n        const y = event.y || event.clientY;\n        /** @type {?} */\n        const targets = this.document.elementsFromPoint(x, y);\n        for (const prop in this.positions) {\n            // current column position which throws event.\n            /** @type {?} */\n            const pos = this.positions[prop];\n            // since we drag the inner span, we need to find it in the elements at the cursor\n            if (model.prop !== prop && targets.find((/**\n             * @param {?} el\n             * @return {?}\n             */\n            (el) => el === pos.element))) {\n                return {\n                    pos,\n                    i\n                };\n            }\n            i++;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    createMapDiffs() {\n        return this.draggables.toArray().reduce((/**\n         * @param {?} acc\n         * @param {?} curr\n         * @return {?}\n         */\n        (acc, curr) => {\n            acc[curr.dragModel.$$id] = curr;\n            return acc;\n        }), {});\n    }\n}\nOrderableDirective.decorators = [\n    { type: Directive, args: [{ selector: '[orderable]' },] }\n];\n/** @nocollapse */\nOrderableDirective.ctorParameters = () => [\n    { type: KeyValueDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nOrderableDirective.propDecorators = {\n    reorder: [{ type: Output }],\n    targetChanged: [{ type: Output }],\n    draggables: [{ type: ContentChildren, args: [DraggableDirective, { descendants: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    OrderableDirective.prototype.reorder;\n    /** @type {?} */\n    OrderableDirective.prototype.targetChanged;\n    /** @type {?} */\n    OrderableDirective.prototype.draggables;\n    /** @type {?} */\n    OrderableDirective.prototype.positions;\n    /** @type {?} */\n    OrderableDirective.prototype.differ;\n    /** @type {?} */\n    OrderableDirective.prototype.lastDraggingIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    OrderableDirective.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LongPressDirective {\n    constructor() {\n        this.pressEnabled = true;\n        this.duration = 500;\n        this.longPressStart = new EventEmitter();\n        this.longPressing = new EventEmitter();\n        this.longPressEnd = new EventEmitter();\n        this.mouseX = 0;\n        this.mouseY = 0;\n    }\n    /**\n     * @return {?}\n     */\n    get press() {\n        return this.pressing;\n    }\n    /**\n     * @return {?}\n     */\n    get isLongPress() {\n        return this.isLongPressing;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        // don't do right/middle clicks\n        if (event.which !== 1 || !this.pressEnabled)\n            return;\n        // don't start drag if its on resize handle\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        if (target.classList.contains('resize-handle'))\n            return;\n        this.mouseX = event.clientX;\n        this.mouseY = event.clientY;\n        this.pressing = true;\n        this.isLongPressing = false;\n        /** @type {?} */\n        const mouseup = fromEvent(document, 'mouseup');\n        this.subscription = mouseup.subscribe((/**\n         * @param {?} ev\n         * @return {?}\n         */\n        (ev) => this.onMouseup()));\n        this.timeout = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isLongPressing = true;\n            this.longPressStart.emit({\n                event,\n                model: this.pressModel\n            });\n            this.subscription.add(fromEvent(document, 'mousemove')\n                .pipe(takeUntil(mouseup))\n                .subscribe((/**\n             * @param {?} mouseEvent\n             * @return {?}\n             */\n            (mouseEvent) => this.onMouseMove(mouseEvent))));\n            this.loop(event);\n        }), this.duration);\n        this.loop(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseMove(event) {\n        if (this.pressing && !this.isLongPressing) {\n            /** @type {?} */\n            const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n            /** @type {?} */\n            const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n            if (xThres || yThres) {\n                this.endPress();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    loop(event) {\n        if (this.isLongPressing) {\n            this.timeout = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.longPressing.emit({\n                    event,\n                    model: this.pressModel\n                });\n                this.loop(event);\n            }), 50);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    endPress() {\n        clearTimeout(this.timeout);\n        this.isLongPressing = false;\n        this.pressing = false;\n        this._destroySubscription();\n        this.longPressEnd.emit({\n            model: this.pressModel\n        });\n    }\n    /**\n     * @return {?}\n     */\n    onMouseup() {\n        this.endPress();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubscription();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _destroySubscription() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n}\nLongPressDirective.decorators = [\n    { type: Directive, args: [{ selector: '[long-press]' },] }\n];\nLongPressDirective.propDecorators = {\n    pressEnabled: [{ type: Input }],\n    pressModel: [{ type: Input }],\n    duration: [{ type: Input }],\n    longPressStart: [{ type: Output }],\n    longPressing: [{ type: Output }],\n    longPressEnd: [{ type: Output }],\n    press: [{ type: HostBinding, args: ['class.press',] }],\n    isLongPress: [{ type: HostBinding, args: ['class.longpress',] }],\n    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    LongPressDirective.prototype.pressEnabled;\n    /** @type {?} */\n    LongPressDirective.prototype.pressModel;\n    /** @type {?} */\n    LongPressDirective.prototype.duration;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressStart;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.longPressEnd;\n    /** @type {?} */\n    LongPressDirective.prototype.pressing;\n    /** @type {?} */\n    LongPressDirective.prototype.isLongPressing;\n    /** @type {?} */\n    LongPressDirective.prototype.timeout;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseX;\n    /** @type {?} */\n    LongPressDirective.prototype.mouseY;\n    /** @type {?} */\n    LongPressDirective.prototype.subscription;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollerComponent {\n    /**\n     * @param {?} ngZone\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(ngZone, element, renderer) {\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollbarV = false;\n        this.scrollbarH = false;\n        this.scroll = new EventEmitter();\n        this.scrollYPos = 0;\n        this.scrollXPos = 0;\n        this.prevScrollYPos = 0;\n        this.prevScrollXPos = 0;\n        this._scrollEventListener = null;\n        this.element = element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // manual bind so we don't always listen\n        if (this.scrollbarV || this.scrollbarH) {\n            /** @type {?} */\n            const renderer = this.renderer;\n            this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n            this._scrollEventListener = this.onScrolled.bind(this);\n            this.parentElement.addEventListener('scroll', this._scrollEventListener);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._scrollEventListener) {\n            this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n            this._scrollEventListener = null;\n        }\n    }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    setOffset(offsetY) {\n        if (this.parentElement) {\n            this.parentElement.scrollTop = offsetY;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onScrolled(event) {\n        /** @type {?} */\n        const dom = (/** @type {?} */ (event.currentTarget));\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        () => {\n            this.scrollYPos = dom.scrollTop;\n            this.scrollXPos = dom.scrollLeft;\n            this.updateOffset();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    updateOffset() {\n        /** @type {?} */\n        let direction;\n        if (this.scrollYPos < this.prevScrollYPos) {\n            direction = 'down';\n        }\n        else if (this.scrollYPos > this.prevScrollYPos) {\n            direction = 'up';\n        }\n        this.scroll.emit({\n            direction,\n            scrollYPos: this.scrollYPos,\n            scrollXPos: this.scrollXPos\n        });\n        this.prevScrollYPos = this.scrollYPos;\n        this.prevScrollXPos = this.scrollXPos;\n    }\n}\nScrollerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-scroller',\n                template: `\n    <ng-content></ng-content>\n  `,\n                host: {\n                    class: 'datatable-scroll'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nScrollerComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nScrollerComponent.propDecorators = {\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    scrollHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    scrollWidth: [{ type: HostBinding, args: ['style.width.px',] }, { type: Input }],\n    scroll: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarV;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollbarH;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollHeight;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollWidth;\n    /** @type {?} */\n    ScrollerComponent.prototype.scroll;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.scrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollYPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.prevScrollXPos;\n    /** @type {?} */\n    ScrollerComponent.prototype.element;\n    /** @type {?} */\n    ScrollerComponent.prototype.parentElement;\n    /** @type {?} */\n    ScrollerComponent.prototype.onScrollListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype._scrollEventListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollerComponent.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableGroupHeaderTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableGroupHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngx-datatable-group-header-template]'\n            },] }\n];\n/** @nocollapse */\nDatatableGroupHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DatatableGroupHeaderTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableGroupHeaderDirective {\n    constructor() {\n        /**\n         * Row height is required when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Track toggling of group visibility\n         */\n        this.toggle = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of a group\n     * @param {?} group\n     * @return {?}\n     */\n    toggleExpandGroup(group) {\n        this.toggle.emit({\n            type: 'group',\n            value: group\n        });\n    }\n    /**\n     * Expand all groups\n     * @return {?}\n     */\n    expandAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * Collapse all groups\n     * @return {?}\n     */\n    collapseAllGroups() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableGroupHeaderDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-group-header' },] }\n];\nDatatableGroupHeaderDirective.propDecorators = {\n    rowHeight: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true },] }],\n    toggle: [{ type: Output }]\n};\nif (false) {\n    /**\n     * Row height is required when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableGroupHeaderDirective.prototype._templateQuery;\n    /**\n     * Track toggling of group visibility\n     * @type {?}\n     */\n    DatatableGroupHeaderDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Always returns the empty string ''\n * @return {?}\n */\nfunction emptyStringGetter() {\n    return '';\n}\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n * @param {?} prop\n * @return {?}\n */\nfunction getterForProp(prop) {\n    if (prop == null) {\n        return emptyStringGetter;\n    }\n    if (typeof prop === 'number') {\n        return numericIndexGetter;\n    }\n    else {\n        // deep or simple\n        if (prop.indexOf('.') !== -1) {\n            return deepValueGetter;\n        }\n        else {\n            return shallowValueGetter;\n        }\n    }\n}\n/**\n * Returns the value at this numeric index.\n * @param {?} row array of values\n * @param {?} index numeric index\n * @return {?} any or '' if invalid index\n */\nfunction numericIndexGetter(row, index) {\n    if (row == null) {\n        return '';\n    }\n    // mimic behavior of deepValueGetter\n    if (!row || index == null) {\n        return row;\n    }\n    /** @type {?} */\n    const value = row[index];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param {?} obj object containing the field\n * @param {?} fieldName field name string\n * @return {?}\n */\nfunction shallowValueGetter(obj, fieldName) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !fieldName) {\n        return obj;\n    }\n    /** @type {?} */\n    const value = obj[fieldName];\n    if (value == null) {\n        return '';\n    }\n    return value;\n}\n/**\n * Returns a deep object given a string. zoo['animal.type']\n * @param {?} obj\n * @param {?} path\n * @return {?}\n */\nfunction deepValueGetter(obj, path) {\n    if (obj == null) {\n        return '';\n    }\n    if (!obj || !path) {\n        return obj;\n    }\n    // check if path matches a root-level field\n    // { \"a.b.c\": 123 }\n    /** @type {?} */\n    let current = obj[path];\n    if (current !== undefined) {\n        return current;\n    }\n    current = obj;\n    /** @type {?} */\n    const split = path.split('.');\n    if (split.length) {\n        for (let i = 0; i < split.length; i++) {\n            current = current[split[i]];\n            // if found undefined, return empty string\n            if (current === undefined || current === null) {\n                return '';\n            }\n        }\n    }\n    return current;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction optionalGetterForProp(prop) {\n    return prop && ((/**\n     * @param {?} row\n     * @return {?}\n     */\n    row => getterForProp(prop)(row, prop)));\n}\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param {?} rows\n *\n * @param {?=} from\n * @param {?=} to\n * @return {?}\n */\nfunction groupRowsByParents(rows, from, to) {\n    if (from && to) {\n        /** @type {?} */\n        const nodeById = {};\n        /** @type {?} */\n        const l = rows.length;\n        /** @type {?} */\n        let node = null;\n        nodeById[0] = new TreeNode(); // that's the root node\n        // that's the root node\n        /** @type {?} */\n        const uniqIDs = rows.reduce((/**\n         * @param {?} arr\n         * @param {?} item\n         * @return {?}\n         */\n        (arr, item) => {\n            /** @type {?} */\n            const toValue = to(item);\n            if (arr.indexOf(toValue) === -1) {\n                arr.push(toValue);\n            }\n            return arr;\n        }), []);\n        for (let i = 0; i < l; i++) {\n            // make TreeNode objects for each item\n            nodeById[to(rows[i])] = new TreeNode(rows[i]);\n        }\n        for (let i = 0; i < l; i++) {\n            // link all TreeNode objects\n            node = nodeById[to(rows[i])];\n            /** @type {?} */\n            let parent = 0;\n            /** @type {?} */\n            const fromValue = from(node.row);\n            if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n                parent = fromValue;\n            }\n            node.parent = nodeById[parent];\n            node.row['level'] = node.parent.row['level'] + 1;\n            node.parent.children.push(node);\n        }\n        /** @type {?} */\n        let resolvedRows = [];\n        nodeById[0].flatten((/**\n         * @return {?}\n         */\n        function () {\n            resolvedRows = [...resolvedRows, this.row];\n        }), true);\n        return resolvedRows;\n    }\n    else {\n        return rows;\n    }\n}\nclass TreeNode {\n    /**\n     * @param {?=} row\n     */\n    constructor(row = null) {\n        if (!row) {\n            row = {\n                level: -1,\n                treeStatus: 'expanded'\n            };\n        }\n        this.row = row;\n        this.parent = null;\n        this.children = [];\n    }\n    /**\n     * @param {?} f\n     * @param {?} recursive\n     * @return {?}\n     */\n    flatten(f, recursive) {\n        if (this.row['treeStatus'] === 'expanded') {\n            for (let i = 0, l = this.children.length; i < l; i++) {\n                /** @type {?} */\n                const child = this.children[i];\n                f.apply(child, Array.prototype.slice.call(arguments, 2));\n                if (recursive)\n                    child.flatten.apply(child, arguments);\n            }\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    TreeNode.prototype.row;\n    /** @type {?} */\n    TreeNode.prototype.parent;\n    /** @type {?} */\n    TreeNode.prototype.children;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n * @param {?} str\n * @return {?}\n */\nfunction camelCase(str) {\n    // Replace special characters with a space\n    str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n    // put a space before an uppercase letter\n    str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n    // Lower case first character and some other stuff\n    str = str\n        .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n        .trim()\n        .toLowerCase();\n    // uppercase characters preceded by a space or number\n    str = str.replace(/([ 0-9]+)([a-zA-Z])/g, (/**\n     * @param {?} a\n     * @param {?} b\n     * @param {?} c\n     * @return {?}\n     */\n    function (a, b, c) {\n        return b.trim() + c.toUpperCase();\n    }));\n    return str;\n}\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n * @param {?} str\n * @return {?}\n */\nfunction deCamelCase(str) {\n    return str.replace(/([A-Z])/g, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    match => ` ${match}`)).replace(/^./, (/**\n     * @param {?} match\n     * @return {?}\n     */\n    match => match.toUpperCase()));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n * @return {?}\n */\nfunction id() {\n    return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sets the column defaults\n * @param {?} columns\n * @return {?}\n */\nfunction setColumnDefaults(columns) {\n    if (!columns)\n        return;\n    // Only one column should hold the tree view\n    // Thus if multiple columns are provided with\n    // isTreeColumn as true we take only the first one\n    /** @type {?} */\n    let treeColumnFound = false;\n    for (const column of columns) {\n        if (!column.$$id) {\n            column.$$id = id();\n        }\n        // prop can be numeric; zero is valid not a missing prop\n        // translate name => prop\n        if (isNullOrUndefined(column.prop) && column.name) {\n            column.prop = camelCase(column.name);\n        }\n        if (!column.$$valueGetter) {\n            column.$$valueGetter = getterForProp(column.prop);\n        }\n        // format props if no name passed\n        if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = deCamelCase(String(column.prop));\n        }\n        if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n            column.name = ''; // Fixes IE and Edge displaying `null`\n        }\n        if (!column.hasOwnProperty('resizeable')) {\n            column.resizeable = true;\n        }\n        if (!column.hasOwnProperty('sortable')) {\n            column.sortable = true;\n        }\n        if (!column.hasOwnProperty('draggable')) {\n            column.draggable = true;\n        }\n        if (!column.hasOwnProperty('canAutoResize')) {\n            column.canAutoResize = true;\n        }\n        if (!column.hasOwnProperty('width')) {\n            column.width = 150;\n        }\n        if (!column.hasOwnProperty('isTreeColumn')) {\n            column.isTreeColumn = false;\n        }\n        else {\n            if (column.isTreeColumn && !treeColumnFound) {\n                // If the first column with isTreeColumn is true found\n                // we mark that treeCoulmn is found\n                treeColumnFound = true;\n            }\n            else {\n                // After that isTreeColumn property for any other column\n                // will be set as false\n                column.isTreeColumn = false;\n            }\n        }\n    }\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isNullOrUndefined(value) {\n    return value === null || value === undefined;\n}\n/**\n * Translates templates definitions to objects\n * @param {?} templates\n * @return {?}\n */\nfunction translateTemplates(templates) {\n    /** @type {?} */\n    const result = [];\n    for (const temp of templates) {\n        /** @type {?} */\n        const col = {};\n        /** @type {?} */\n        const props = Object.getOwnPropertyNames(temp);\n        for (const prop of props) {\n            col[prop] = temp[prop];\n        }\n        if (temp.headerTemplate) {\n            col.headerTemplate = temp.headerTemplate;\n        }\n        if (temp.cellTemplate) {\n            col.cellTemplate = temp.cellTemplate;\n        }\n        if (temp.summaryFunc) {\n            col.summaryFunc = temp.summaryFunc;\n        }\n        if (temp.summaryTemplate) {\n            col.summaryTemplate = temp.summaryTemplate;\n        }\n        result.push(col);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ColumnMode = {\n    standard: 'standard',\n    flex: 'flex',\n    force: 'force',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SelectionType = {\n    single: 'single',\n    multi: 'multi',\n    multiClick: 'multiClick',\n    cell: 'cell',\n    checkbox: 'checkbox',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SortType = {\n    single: 'single',\n    multi: 'multi',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ContextmenuType = {\n    header: 'header',\n    body: 'body',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnHeaderDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnHeaderDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-header-template]' },] }\n];\n/** @nocollapse */\nDataTableColumnHeaderDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnHeaderDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnCellDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-cell-template]' },] }\n];\n/** @nocollapse */\nDataTableColumnCellDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnCellTreeToggle {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDataTableColumnCellTreeToggle.decorators = [\n    { type: Directive, args: [{ selector: '[ngx-datatable-tree-toggle]' },] }\n];\n/** @nocollapse */\nDataTableColumnCellTreeToggle.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DataTableColumnCellTreeToggle.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableColumnDirective {\n    /**\n     * @param {?} columnChangesService\n     */\n    constructor(columnChangesService) {\n        this.columnChangesService = columnChangesService;\n        this.isFirstChange = true;\n    }\n    /**\n     * @return {?}\n     */\n    get cellTemplate() {\n        return this._cellTemplateInput || this._cellTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    get headerTemplate() {\n        return this._headerTemplateInput || this._headerTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    get treeToggleTemplate() {\n        return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.isFirstChange) {\n            this.isFirstChange = false;\n        }\n        else {\n            this.columnChangesService.onInputChange();\n        }\n    }\n}\nDataTableColumnDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-column' },] }\n];\n/** @nocollapse */\nDataTableColumnDirective.ctorParameters = () => [\n    { type: ColumnChangesService }\n];\nDataTableColumnDirective.propDecorators = {\n    name: [{ type: Input }],\n    prop: [{ type: Input }],\n    frozenLeft: [{ type: Input }],\n    frozenRight: [{ type: Input }],\n    flexGrow: [{ type: Input }],\n    resizeable: [{ type: Input }],\n    comparator: [{ type: Input }],\n    pipe: [{ type: Input }],\n    sortable: [{ type: Input }],\n    draggable: [{ type: Input }],\n    canAutoResize: [{ type: Input }],\n    minWidth: [{ type: Input }],\n    width: [{ type: Input }],\n    maxWidth: [{ type: Input }],\n    checkboxable: [{ type: Input }],\n    headerCheckboxable: [{ type: Input }],\n    headerClass: [{ type: Input }],\n    cellClass: [{ type: Input }],\n    isTreeColumn: [{ type: Input }],\n    treeLevelIndent: [{ type: Input }],\n    summaryFunc: [{ type: Input }],\n    summaryTemplate: [{ type: Input }],\n    _cellTemplateInput: [{ type: Input, args: ['cellTemplate',] }],\n    _cellTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellDirective, { read: TemplateRef, static: true },] }],\n    _headerTemplateInput: [{ type: Input, args: ['headerTemplate',] }],\n    _headerTemplateQuery: [{ type: ContentChild, args: [DataTableColumnHeaderDirective, { read: TemplateRef, static: true },] }],\n    _treeToggleTemplateInput: [{ type: Input, args: ['treeToggleTemplate',] }],\n    _treeToggleTemplateQuery: [{ type: ContentChild, args: [DataTableColumnCellTreeToggle, { read: TemplateRef, static: true },] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableColumnDirective.prototype.name;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.prop;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenLeft;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.frozenRight;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.flexGrow;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.resizeable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.comparator;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.pipe;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.sortable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.draggable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.canAutoResize;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.minWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.width;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.maxWidth;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.checkboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerCheckboxable;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.headerClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.cellClass;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.isTreeColumn;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.treeLevelIndent;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryFunc;\n    /** @type {?} */\n    DataTableColumnDirective.prototype.summaryTemplate;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._cellTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._headerTemplateQuery;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateInput;\n    /** @type {?} */\n    DataTableColumnDirective.prototype._treeToggleTemplateQuery;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.isFirstChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableColumnDirective.prototype.columnChangesService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableRowDetailTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nDatatableRowDetailTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngx-datatable-row-detail-template]'\n            },] }\n];\n/** @nocollapse */\nDatatableRowDetailTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nif (false) {\n    /** @type {?} */\n    DatatableRowDetailTemplateDirective.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableRowDetailDirective {\n    constructor() {\n        /**\n         * The detail row height is required especially\n         * when virtual scroll is enabled.\n         */\n        this.rowHeight = 0;\n        /**\n         * Row detail row visbility was toggled.\n         */\n        this.toggle = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n    /**\n     * Toggle the expansion of the row\n     * @param {?} row\n     * @return {?}\n     */\n    toggleExpandRow(row) {\n        this.toggle.emit({\n            type: 'row',\n            value: row\n        });\n    }\n    /**\n     * API method to expand all the rows.\n     * @return {?}\n     */\n    expandAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: true\n        });\n    }\n    /**\n     * API method to collapse all the rows.\n     * @return {?}\n     */\n    collapseAllRows() {\n        this.toggle.emit({\n            type: 'all',\n            value: false\n        });\n    }\n}\nDatatableRowDetailDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-row-detail' },] }\n];\nDatatableRowDetailDirective.propDecorators = {\n    rowHeight: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true },] }],\n    toggle: [{ type: Output }]\n};\nif (false) {\n    /**\n     * The detail row height is required especially\n     * when virtual scroll is enabled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.rowHeight;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableRowDetailDirective.prototype._templateQuery;\n    /**\n     * Row detail row visbility was toggled.\n     * @type {?}\n     */\n    DatatableRowDetailDirective.prototype.toggle;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableFooterDirective {\n    /**\n     * @return {?}\n     */\n    get template() {\n        return this._templateInput || this._templateQuery;\n    }\n}\nDatatableFooterDirective.decorators = [\n    { type: Directive, args: [{ selector: 'ngx-datatable-footer' },] }\n];\nDatatableFooterDirective.propDecorators = {\n    footerHeight: [{ type: Input }],\n    totalMessage: [{ type: Input }],\n    selectedMessage: [{ type: Input }],\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    _templateInput: [{ type: Input, args: ['template',] }],\n    _templateQuery: [{ type: ContentChild, args: [DataTableFooterTemplateDirective, { read: TemplateRef, static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    DatatableFooterDirective.prototype.footerHeight;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.totalMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.selectedMessage;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype.pagerNextIcon;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateInput;\n    /** @type {?} */\n    DatatableFooterDirective.prototype._templateQuery;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the columns by pin.\n * @param {?} cols\n * @return {?}\n */\nfunction columnsByPin(cols) {\n    /** @type {?} */\n    const ret = {\n        left: [],\n        center: [],\n        right: []\n    };\n    if (cols) {\n        for (const col of cols) {\n            if (col.frozenLeft) {\n                ret.left.push(col);\n            }\n            else if (col.frozenRight) {\n                ret.right.push(col);\n            }\n            else {\n                ret.center.push(col);\n            }\n        }\n    }\n    return ret;\n}\n/**\n * Returns the widths of all group sets of a column\n * @param {?} groups\n * @param {?} all\n * @return {?}\n */\nfunction columnGroupWidths(groups, all) {\n    return {\n        left: columnTotalWidth(groups.left),\n        center: columnTotalWidth(groups.center),\n        right: columnTotalWidth(groups.right),\n        total: Math.floor(columnTotalWidth(all))\n    };\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnTotalWidth(columns, prop) {\n    /** @type {?} */\n    let totalWidth = 0;\n    if (columns) {\n        for (const c of columns) {\n            /** @type {?} */\n            const has = prop && c[prop];\n            /** @type {?} */\n            const width = has ? c[prop] : c.width;\n            totalWidth = totalWidth + parseFloat(width);\n        }\n    }\n    return totalWidth;\n}\n/**\n * Calculates the total width of all columns and their groups\n * @param {?} columns\n * @param {?=} prop\n * @return {?}\n */\nfunction columnsTotalWidth(columns, prop) {\n    /** @type {?} */\n    let totalWidth = 0;\n    for (const column of columns) {\n        /** @type {?} */\n        const has = prop && column[prop];\n        totalWidth = totalWidth + (has ? column[prop] : column.width);\n    }\n    return totalWidth;\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction columnsByPinArr(val) {\n    /** @type {?} */\n    const colsByPinArr = [];\n    /** @type {?} */\n    const colsByPin = columnsByPin(val);\n    colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n    colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n    colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n    return colsByPinArr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nclass RowHeightCache {\n    constructor() {\n        /**\n         * Tree Array stores the cumulative information of the row heights to perform efficient\n         * range queries and updates.  Currently the tree is initialized to the base row\n         * height instead of the detail row height.\n         */\n        this.treeArray = [];\n    }\n    /**\n     * Clear the Tree array.\n     * @return {?}\n     */\n    clearCache() {\n        this.treeArray = [];\n    }\n    /**\n     * Initialize the Fenwick tree with row Heights.\n     *\n     * @param {?} details\n     * @return {?}\n     */\n    initCache(details) {\n        const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n        /** @type {?} */\n        const isFn = typeof rowHeight === 'function';\n        /** @type {?} */\n        const isDetailFn = typeof detailRowHeight === 'function';\n        if (!isFn && isNaN(rowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n        if (!isDetailFn && isNaN(detailRowHeight)) {\n            throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n        }\n        /** @type {?} */\n        const n = externalVirtual ? rowCount : rows.length;\n        this.treeArray = new Array(n);\n        for (let i = 0; i < n; ++i) {\n            this.treeArray[i] = 0;\n        }\n        for (let i = 0; i < n; ++i) {\n            /** @type {?} */\n            const row = rows[i];\n            /** @type {?} */\n            let currentRowHeight = rowHeight;\n            if (isFn) {\n                currentRowHeight = rowHeight(row);\n            }\n            // Add the detail row height to the already expanded rows.\n            // This is useful for the table that goes through a filter or sort.\n            /** @type {?} */\n            const expanded = rowExpansions.get(row);\n            if (row && expanded === 1) {\n                if (isDetailFn) {\n                    /** @type {?} */\n                    const index = rowIndexes.get(row);\n                    currentRowHeight += detailRowHeight(row, index);\n                }\n                else {\n                    currentRowHeight += detailRowHeight;\n                }\n            }\n            this.update(i, currentRowHeight);\n        }\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.  Below handles edge cases.\n     * @param {?} scrollY\n     * @return {?}\n     */\n    getRowIndex(scrollY) {\n        if (scrollY === 0)\n            return 0;\n        return this.calcRowIndex(scrollY);\n    }\n    /**\n     * When a row is expanded or rowHeight is changed, update the height.  This can\n     * be utilized in future when Angular Data table supports dynamic row heights.\n     * @param {?} atRowIndex\n     * @param {?} byRowHeight\n     * @return {?}\n     */\n    update(atRowIndex, byRowHeight) {\n        if (!this.treeArray.length) {\n            throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n        }\n        /** @type {?} */\n        const n = this.treeArray.length;\n        atRowIndex |= 0;\n        while (atRowIndex < n) {\n            this.treeArray[atRowIndex] += byRowHeight;\n            atRowIndex |= atRowIndex + 1;\n        }\n    }\n    /**\n     * Range Sum query from 1 to the rowIndex\n     * @param {?} atIndex\n     * @return {?}\n     */\n    query(atIndex) {\n        if (!this.treeArray.length) {\n            throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n        }\n        /** @type {?} */\n        let sum = 0;\n        atIndex |= 0;\n        while (atIndex >= 0) {\n            sum += this.treeArray[atIndex];\n            atIndex = (atIndex & (atIndex + 1)) - 1;\n        }\n        return sum;\n    }\n    /**\n     * Find the total height between 2 row indexes\n     * @param {?} atIndexA\n     * @param {?} atIndexB\n     * @return {?}\n     */\n    queryBetween(atIndexA, atIndexB) {\n        return this.query(atIndexB) - this.query(atIndexA - 1);\n    }\n    /**\n     * Given the ScrollY position i.e. sum, provide the rowIndex\n     * that is present in the current view port.\n     * @private\n     * @param {?} sum\n     * @return {?}\n     */\n    calcRowIndex(sum) {\n        if (!this.treeArray.length)\n            return 0;\n        /** @type {?} */\n        let pos = -1;\n        /** @type {?} */\n        const dataLength = this.treeArray.length;\n        // Get the highest bit for the block size.\n        /** @type {?} */\n        const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n        for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n            /** @type {?} */\n            const nextPos = pos + blockSize;\n            if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n                sum -= this.treeArray[nextPos];\n                pos = nextPos;\n            }\n        }\n        return pos + 1;\n    }\n}\nif (false) {\n    /**\n     * Tree Array stores the cumulative information of the row heights to perform efficient\n     * range queries and updates.  Currently the tree is initialized to the base row\n     * height instead of the detail row height.\n     * @type {?}\n     * @private\n     */\n    RowHeightCache.prototype.treeArray;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst cache = {};\n/** @type {?} */\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst ɵ0 = /**\n * @return {?}\n */\nfunction () {\n    /** @type {?} */\n    const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n    /** @type {?} */\n    const match = typeof styles !== 'undefined'\n        ? Array.prototype.slice\n            .call(styles)\n            .join('')\n            .match(/-(moz|webkit|ms)-/)\n        : null;\n    /** @type {?} */\n    const pre = match !== null ? match[1] : undefined;\n    // tslint:disable-next-line: tsr-detect-non-literal-regexp\n    /** @type {?} */\n    const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n    return dom\n        ? {\n            dom,\n            lowercase: pre,\n            css: `-${pre}-`,\n            js: pre[0].toUpperCase() + pre.substr(1)\n        }\n        : undefined;\n};\n/** @type {?} */\nconst prefix = ((ɵ0))();\n/**\n * @param {?} property\n * @return {?}\n */\nfunction getVendorPrefixedName(property) {\n    /** @type {?} */\n    const name = camelCase(property);\n    if (!cache[name]) {\n        if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n            cache[name] = prefix.css + property;\n        }\n        else if (testStyle[property] !== undefined) {\n            cache[name] = property;\n        }\n    }\n    return cache[name];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// browser detection and prefixing tools\n/** @type {?} */\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\n/** @type {?} */\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\n/** @type {?} */\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\n/** @type {?} */\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\n/** @type {?} */\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n/**\n * @param {?} styles\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction translateXY(styles, x, y) {\n    if (typeof transform !== 'undefined' && hasCSSTransforms) {\n        if (!isSafari && hasCSS3DTransforms) {\n            styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n            styles[backfaceVisibility] = 'hidden';\n        }\n        else {\n            styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n        }\n    }\n    else {\n        styles.top = `${y}px`;\n        styles.left = `${x}px`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyComponent {\n    /**\n     * Creates an instance of DataTableBodyComponent.\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.selected = [];\n        this.scroll = new EventEmitter();\n        this.page = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n        this.detailToggle = new EventEmitter();\n        this.rowContextmenu = new EventEmitter(false);\n        this.treeAction = new EventEmitter();\n        this.rowHeightsCache = new RowHeightCache();\n        this.temp = [];\n        this.offsetY = 0;\n        this.indexes = {};\n        this.rowIndexes = new Map();\n        this.rowExpansions = new Map();\n        /**\n         * Get the height of the detail row.\n         */\n        this.getDetailRowHeight = (/**\n         * @param {?=} row\n         * @param {?=} index\n         * @return {?}\n         */\n        (row, index) => {\n            if (!this.rowDetail) {\n                return 0;\n            }\n            /** @type {?} */\n            const rowHeight = this.rowDetail.rowHeight;\n            return typeof rowHeight === 'function' ? rowHeight(row, index) : ((/** @type {?} */ (rowHeight)));\n        });\n        // declare fn here so we can get access to the `this` property\n        this.rowTrackingFn = (/**\n         * @param {?} index\n         * @param {?} row\n         * @return {?}\n         */\n        (index, row) => {\n            /** @type {?} */\n            const idx = this.getRowIndex(row);\n            if (this.trackByProp) {\n                return row[this.trackByProp];\n            }\n            else {\n                return idx;\n            }\n        });\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set pageSize(val) {\n        this._pageSize = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get pageSize() {\n        return this._pageSize;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rows(val) {\n        this._rows = val;\n        this.rowExpansions.clear();\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(val);\n        this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offset(val) {\n        this._offset = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowCount(val) {\n        this._rowCount = val;\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get rowCount() {\n        return this._rowCount;\n    }\n    /**\n     * @return {?}\n     */\n    get bodyWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        else {\n            return '100%';\n        }\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set bodyHeight(val) {\n        if (this.scrollbarV) {\n            this._bodyHeight = val + 'px';\n        }\n        else {\n            this._bodyHeight = 'auto';\n        }\n        this.recalcLayout();\n    }\n    /**\n     * @return {?}\n     */\n    get bodyHeight() {\n        return this._bodyHeight;\n    }\n    /**\n     * Returns if selection is enabled.\n     * @return {?}\n     */\n    get selectEnabled() {\n        return !!this.selectionType;\n    }\n    /**\n     * Property that would calculate the height of scroll bar\n     * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n     * calculate scroll height automatically (as height will be undefined).\n     * @return {?}\n     */\n    get scrollHeight() {\n        if (this.scrollbarV && this.virtualization && this.rowCount) {\n            return this.rowHeightsCache.query(this.rowCount - 1);\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n    /**\n     * Called after the constructor, initializing input properties\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.rowDetail) {\n            this.listener = this.rowDetail.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ type, value }) => {\n                if (type === 'row') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            }));\n        }\n        if (this.groupHeader) {\n            this.listener = this.groupHeader.toggle.subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ type, value }) => {\n                if (type === 'group') {\n                    this.toggleRowExpansion(value);\n                }\n                if (type === 'all') {\n                    this.toggleAllRows(value);\n                }\n                // Refresh rows after toggle\n                // Fixes #883\n                this.updateIndexes();\n                this.updateRows();\n                this.cd.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Called once, before the instance is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.rowDetail || this.groupHeader) {\n            this.listener.unsubscribe();\n        }\n    }\n    /**\n     * Updates the Y offset given a new offset.\n     * @param {?=} offset\n     * @return {?}\n     */\n    updateOffsetY(offset) {\n        // scroller is missing on empty table\n        if (!this.scroller) {\n            return;\n        }\n        if (this.scrollbarV && this.virtualization && offset) {\n            // First get the row Index that we need to move to.\n            /** @type {?} */\n            const rowIndex = this.pageSize * offset;\n            offset = this.rowHeightsCache.query(rowIndex - 1);\n        }\n        else if (this.scrollbarV && !this.virtualization) {\n            offset = 0;\n        }\n        this.scroller.setOffset(offset || 0);\n    }\n    /**\n     * Body was scrolled, this is mainly useful for\n     * when a user is server-side pagination via virtual scroll.\n     * @param {?} event\n     * @return {?}\n     */\n    onBodyScroll(event) {\n        /** @type {?} */\n        const scrollYPos = event.scrollYPos;\n        /** @type {?} */\n        const scrollXPos = event.scrollXPos;\n        // if scroll change, trigger update\n        // this is mainly used for header cell positions\n        if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n            this.scroll.emit({\n                offsetY: scrollYPos,\n                offsetX: scrollXPos\n            });\n        }\n        this.offsetY = scrollYPos;\n        this.offsetX = scrollXPos;\n        this.updateIndexes();\n        this.updatePage(event.direction);\n        this.updateRows();\n    }\n    /**\n     * Updates the page given a direction.\n     * @param {?} direction\n     * @return {?}\n     */\n    updatePage(direction) {\n        /** @type {?} */\n        let offset = this.indexes.first / this.pageSize;\n        if (direction === 'up') {\n            offset = Math.ceil(offset);\n        }\n        else if (direction === 'down') {\n            offset = Math.floor(offset);\n        }\n        if (direction !== undefined && !isNaN(offset)) {\n            this.page.emit({ offset });\n        }\n    }\n    /**\n     * Updates the rows in the view port\n     * @return {?}\n     */\n    updateRows() {\n        const { first, last } = this.indexes;\n        /** @type {?} */\n        let rowIndex = first;\n        /** @type {?} */\n        let idx = 0;\n        /** @type {?} */\n        const temp = [];\n        this.rowIndexes.clear();\n        // if grouprowsby has been specified treat row paging\n        // parameters as group paging parameters ie if limit 10 has been\n        // specified treat it as 10 groups rather than 10 rows\n        if (this.groupedRows) {\n            /** @type {?} */\n            let maxRowsPerGroup = 3;\n            // if there is only one group set the maximum number of\n            // rows per group the same as the total number of rows\n            if (this.groupedRows.length === 1) {\n                maxRowsPerGroup = this.groupedRows[0].value.length;\n            }\n            while (rowIndex < last && rowIndex < this.groupedRows.length) {\n                // Add the groups into this page\n                /** @type {?} */\n                const group = this.groupedRows[rowIndex];\n                temp[idx] = group;\n                idx++;\n                // Group index in this context\n                rowIndex++;\n            }\n        }\n        else {\n            while (rowIndex < last && rowIndex < this.rowCount) {\n                /** @type {?} */\n                const row = this.rows[rowIndex];\n                if (row) {\n                    this.rowIndexes.set(row, rowIndex);\n                    temp[idx] = row;\n                }\n                idx++;\n                rowIndex++;\n            }\n        }\n        this.temp = temp;\n    }\n    /**\n     * Get the row height\n     * @param {?} row\n     * @return {?}\n     */\n    getRowHeight(row) {\n        // if its a function return it\n        if (typeof this.rowHeight === 'function') {\n            return this.rowHeight(row);\n        }\n        return (/** @type {?} */ (this.rowHeight));\n    }\n    /**\n     * @param {?} group the group with all rows\n     * @return {?}\n     */\n    getGroupHeight(group) {\n        /** @type {?} */\n        let rowHeight = 0;\n        if (group.value) {\n            for (let index = 0; index < group.value.length; index++) {\n                rowHeight += this.getRowAndDetailHeight(group.value[index]);\n            }\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculate row height based on the expanded state of the row.\n     * @param {?} row\n     * @return {?}\n     */\n    getRowAndDetailHeight(row) {\n        /** @type {?} */\n        let rowHeight = this.getRowHeight(row);\n        /** @type {?} */\n        const expanded = this.rowExpansions.get(row);\n        // Adding detail row height if its expanded.\n        if (expanded === 1) {\n            rowHeight += this.getDetailRowHeight(row);\n        }\n        return rowHeight;\n    }\n    /**\n     * Calculates the styles for the row so that the rows can be moved in 2D space\n     * during virtual scroll inside the DOM.   In the below case the Y position is\n     * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n     * 100 px then following styles are generated:\n     *\n     * transform: translate3d(0px, 0px, 0px);    ->  row0\n     * transform: translate3d(0px, 30px, 0px);   ->  row1\n     * transform: translate3d(0px, 130px, 0px);  ->  row2\n     *\n     * Row heights have to be calculated based on the row heights cache as we wont\n     * be able to determine which row is of what height before hand.  In the above\n     * case the positionY of the translate3d for row2 would be the sum of all the\n     * heights of the rows before it (i.e. row0 and row1).\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @param {?} rows the row that needs to be placed in the 2D space.\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    getRowsStyles(rows) {\n        /** @type {?} */\n        const styles = {};\n        // only add styles for the group if there is a group\n        if (this.groupedRows) {\n            styles.width = this.columnGroupWidths.total;\n        }\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            let idx = 0;\n            if (this.groupedRows) {\n                // Get the latest row rowindex in a group\n                /** @type {?} */\n                const row = rows[rows.length - 1];\n                idx = row ? this.getRowIndex(row) : 0;\n            }\n            else {\n                idx = this.getRowIndex(rows);\n            }\n            // const pos = idx * rowHeight;\n            // The position of this row would be the sum of all row heights\n            // until the previous row position.\n            /** @type {?} */\n            const pos = this.rowHeightsCache.query(idx - 1);\n            translateXY(styles, 0, pos);\n        }\n        return styles;\n    }\n    /**\n     * Calculate bottom summary row offset for scrollbar mode.\n     * For more information about cache and offset calculation\n     * see description for `getRowsStyles` method\n     *\n     * \\@memberOf DataTableBodyComponent\n     * @return {?} the CSS3 style to be applied\n     *\n     */\n    getBottomSummaryRowStyles() {\n        if (!this.scrollbarV || !this.rows || !this.rows.length) {\n            return null;\n        }\n        /** @type {?} */\n        const styles = { position: 'absolute' };\n        /** @type {?} */\n        const pos = this.rowHeightsCache.query(this.rows.length - 1);\n        translateXY(styles, 0, pos);\n        return styles;\n    }\n    /**\n     * Hides the loading indicator\n     * @return {?}\n     */\n    hideIndicator() {\n        setTimeout((/**\n         * @return {?}\n         */\n        () => (this.loadingIndicator = false)), 500);\n    }\n    /**\n     * Updates the index of the rows in the viewport\n     * @return {?}\n     */\n    updateIndexes() {\n        /** @type {?} */\n        let first = 0;\n        /** @type {?} */\n        let last = 0;\n        if (this.scrollbarV) {\n            if (this.virtualization) {\n                // Calculation of the first and last indexes will be based on where the\n                // scrollY position would be at.  The last index would be the one\n                // that shows up inside the view port the last.\n                /** @type {?} */\n                const height = parseInt(this.bodyHeight, 0);\n                first = this.rowHeightsCache.getRowIndex(this.offsetY);\n                last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n            }\n            else {\n                // If virtual rows are not needed\n                // We render all in one go\n                first = 0;\n                last = this.rowCount;\n            }\n        }\n        else {\n            // The server is handling paging and will pass an array that begins with the\n            // element at a specified offset.  first should always be 0 with external paging.\n            if (!this.externalPaging) {\n                first = Math.max(this.offset * this.pageSize, 0);\n            }\n            last = Math.min(first + this.pageSize, this.rowCount);\n        }\n        this.indexes = { first, last };\n    }\n    /**\n     * Refreshes the full Row Height cache.  Should be used\n     * when the entire row array state has changed.\n     * @return {?}\n     */\n    refreshRowHeightCache() {\n        if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n            return;\n        }\n        // clear the previous row height cache if already present.\n        // this is useful during sorts, filters where the state of the\n        // rows array is changed.\n        this.rowHeightsCache.clearCache();\n        // Initialize the tree only if there are rows inside the tree.\n        if (this.rows && this.rows.length) {\n            this.rowHeightsCache.initCache({\n                rows: this.rows,\n                rowHeight: this.rowHeight,\n                detailRowHeight: this.getDetailRowHeight,\n                externalVirtual: this.scrollbarV && this.externalPaging,\n                rowCount: this.rowCount,\n                rowIndexes: this.rowIndexes,\n                rowExpansions: this.rowExpansions\n            });\n        }\n    }\n    /**\n     * Gets the index for the view port\n     * @return {?}\n     */\n    getAdjustedViewPortIndex() {\n        // Capture the row index of the first row that is visible on the viewport.\n        // If the scroll bar is just below the row which is highlighted then make that as the\n        // first index.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.indexes.first;\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n            return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n        }\n        return viewPortFirstRowIndex;\n    }\n    /**\n     * Toggle the Expansion of the row i.e. if the row is expanded then it will\n     * collapse and vice versa.   Note that the expanded status is stored as\n     * a part of the row object itself as we have to preserve the expanded row\n     * status in case of sorting and filtering of the row set.\n     * @param {?} row\n     * @return {?}\n     */\n    toggleRowExpansion(row) {\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        /** @type {?} */\n        let expanded = this.rowExpansions.get(row);\n        // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n            // const idx = this.rowIndexes.get(row) || 0;\n            /** @type {?} */\n            const idx = this.getRowIndex(row);\n            this.rowHeightsCache.update(idx, detailRowHeight);\n        }\n        // Update the toggled row and update thive nevere heights in the cache.\n        expanded = expanded ^= 1;\n        this.rowExpansions.set(row, expanded);\n        this.detailToggle.emit({\n            rows: [row],\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Expand/Collapse all the rows no matter what their state is.\n     * @param {?} expanded\n     * @return {?}\n     */\n    toggleAllRows(expanded) {\n        // clear prev expansions\n        this.rowExpansions.clear();\n        /** @type {?} */\n        const rowExpanded = expanded ? 1 : 0;\n        // Capture the row index of the first row that is visible on the viewport.\n        /** @type {?} */\n        const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n        for (const row of this.rows) {\n            this.rowExpansions.set(row, rowExpanded);\n        }\n        if (this.scrollbarV) {\n            // Refresh the full row heights cache since every row was affected.\n            this.recalcLayout();\n        }\n        // Emit all rows that have been expanded.\n        this.detailToggle.emit({\n            rows: this.rows,\n            currentIndex: viewPortFirstRowIndex\n        });\n    }\n    /**\n     * Recalculates the table\n     * @return {?}\n     */\n    recalcLayout() {\n        this.refreshRowHeightCache();\n        this.updateIndexes();\n        this.updateRows();\n    }\n    /**\n     * Tracks the column\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * Gets the row pinning group styles\n     * @param {?} group\n     * @return {?}\n     */\n    stylesByGroup(group) {\n        /** @type {?} */\n        const widths = this.columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            const totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            const offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            const offset = offsetDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    /**\n     * Returns if the row was expanded and set default row expansion when row expansion is empty\n     * @param {?} row\n     * @return {?}\n     */\n    getRowExpanded(row) {\n        if (this.rowExpansions.size === 0 && this.groupExpansionDefault) {\n            for (const group of this.groupedRows) {\n                this.rowExpansions.set(group, 1);\n            }\n        }\n        /** @type {?} */\n        const expanded = this.rowExpansions.get(row);\n        return expanded === 1;\n    }\n    /**\n     * Gets the row index given a row\n     * @param {?} row\n     * @return {?}\n     */\n    getRowIndex(row) {\n        return this.rowIndexes.get(row) || 0;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    onTreeAction(row) {\n        this.treeAction.emit({ row });\n    }\n}\nDataTableBodyComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body',\n                template: `\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    class: 'datatable-body'\n                }\n            }] }\n];\n/** @nocollapse */\nDataTableBodyComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableBodyComponent.propDecorators = {\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    loadingIndicator: [{ type: Input }],\n    externalPaging: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    emptyMessage: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    selected: [{ type: Input }],\n    rowIdentity: [{ type: Input }],\n    rowDetail: [{ type: Input }],\n    groupHeader: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    trackByProp: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    groupExpansionDefault: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    groupRowsBy: [{ type: Input }],\n    virtualization: [{ type: Input }],\n    summaryRow: [{ type: Input }],\n    summaryPosition: [{ type: Input }],\n    summaryHeight: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    rows: [{ type: Input }],\n    columns: [{ type: Input }],\n    offset: [{ type: Input }],\n    rowCount: [{ type: Input }],\n    bodyWidth: [{ type: HostBinding, args: ['style.width',] }],\n    bodyHeight: [{ type: Input }, { type: HostBinding, args: ['style.height',] }],\n    scroll: [{ type: Output }],\n    page: [{ type: Output }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }],\n    detailToggle: [{ type: Output }],\n    rowContextmenu: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    scroller: [{ type: ViewChild, args: [ScrollerComponent, { static: false },] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarV;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.loadingIndicator;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.externalPaging;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.emptyMessage;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selected;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.trackByProp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupExpansionDefault;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.groupRowsBy;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.virtualization;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryRow;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryPosition;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.summaryHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroll;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.page;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.select;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.detailToggle;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.scroller;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowHeightsCache;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.temp;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.offsetY;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.indexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.columnGroupWidthsWithoutGroup;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowTrackingFn;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.listener;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowIndexes;\n    /** @type {?} */\n    DataTableBodyComponent.prototype.rowExpansions;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rows;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._bodyHeight;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._rowCount;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._offset;\n    /** @type {?} */\n    DataTableBodyComponent.prototype._pageSize;\n    /**\n     * Get the height of the detail row.\n     * @type {?}\n     */\n    DataTableBodyComponent.prototype.getDetailRowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableHeaderComponent {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.reorder = new EventEmitter();\n        this.resize = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this._columnGroupWidths = {\n            total: 100\n        };\n        this._styleByGroup = {\n            left: {},\n            center: {},\n            right: {}\n        };\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set innerWidth(val) {\n        this._innerWidth = val;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this._columns) {\n                /** @type {?} */\n                const colByPin = columnsByPin(this._columns);\n                this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n                this.setStylesByGroup();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set headerHeight(val) {\n        if (val !== 'auto') {\n            this._headerHeight = `${val}px`;\n        }\n        else {\n            this._headerHeight = val;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get headerHeight() {\n        return this._headerHeight;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(val);\n        this._columnsByPin = columnsByPinArr(val);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n            this.setStylesByGroup();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offsetX(val) {\n        this._offsetX = val;\n        this.setStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get offsetX() {\n        return this._offsetX;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onLongPressStart({ event, model }) {\n        model.dragging = true;\n        this.dragEventTarget = event;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onLongPressEnd({ event, model }) {\n        this.dragEventTarget = event;\n        // delay resetting so sort can be\n        // prevented if we were dragging\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            // datatable component creates copies from columns on reorder\n            // set dragging to false on new objects\n            /** @type {?} */\n            const column = this._columns.find((/**\n             * @param {?} c\n             * @return {?}\n             */\n            c => c.$$id === model.$$id));\n            if (column) {\n                column.dragging = false;\n            }\n        }), 5);\n    }\n    /**\n     * @return {?}\n     */\n    get headerWidth() {\n        if (this.scrollbarH) {\n            return this.innerWidth + 'px';\n        }\n        return '100%';\n    }\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * @param {?} width\n     * @param {?} column\n     * @return {?}\n     */\n    onColumnResized(width, column) {\n        if (width <= column.minWidth) {\n            width = column.minWidth;\n        }\n        else if (width >= column.maxWidth) {\n            width = column.maxWidth;\n        }\n        this.resize.emit({\n            column,\n            prevValue: column.width,\n            newValue: width\n        });\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnReordered({ prevIndex, newIndex, model }) {\n        /** @type {?} */\n        const column = this.getColumn(newIndex);\n        column.isTarget = false;\n        column.targetMarkerContext = undefined;\n        this.reorder.emit({\n            column: model,\n            prevValue: prevIndex,\n            newValue: newIndex\n        });\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onTargetChanged({ prevIndex, newIndex, initialIndex }) {\n        if (prevIndex || prevIndex === 0) {\n            /** @type {?} */\n            const oldColumn = this.getColumn(prevIndex);\n            oldColumn.isTarget = false;\n            oldColumn.targetMarkerContext = undefined;\n        }\n        if (newIndex || newIndex === 0) {\n            /** @type {?} */\n            const newColumn = this.getColumn(newIndex);\n            newColumn.isTarget = true;\n            if (initialIndex !== newIndex) {\n                newColumn.targetMarkerContext = {\n                    class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n                };\n            }\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getColumn(index) {\n        /** @type {?} */\n        const leftColumnCount = this._columnsByPin[0].columns.length;\n        if (index < leftColumnCount) {\n            return this._columnsByPin[0].columns[index];\n        }\n        /** @type {?} */\n        const centerColumnCount = this._columnsByPin[1].columns.length;\n        if (index < leftColumnCount + centerColumnCount) {\n            return this._columnsByPin[1].columns[index - leftColumnCount];\n        }\n        return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    onSort({ column, prevValue, newValue }) {\n        // if we are dragging don't sort!\n        if (column.dragging) {\n            return;\n        }\n        /** @type {?} */\n        const sorts = this.calcNewSorts(column, prevValue, newValue);\n        this.sort.emit({\n            sorts,\n            column,\n            prevValue,\n            newValue\n        });\n    }\n    /**\n     * @param {?} column\n     * @param {?} prevValue\n     * @param {?} newValue\n     * @return {?}\n     */\n    calcNewSorts(column, prevValue, newValue) {\n        /** @type {?} */\n        let idx = 0;\n        if (!this.sorts) {\n            this.sorts = [];\n        }\n        /** @type {?} */\n        const sorts = this.sorts.map((/**\n         * @param {?} s\n         * @param {?} i\n         * @return {?}\n         */\n        (s, i) => {\n            s = Object.assign({}, s);\n            if (s.prop === column.prop) {\n                idx = i;\n            }\n            return s;\n        }));\n        if (newValue === undefined) {\n            sorts.splice(idx, 1);\n        }\n        else if (prevValue) {\n            sorts[idx].dir = newValue;\n        }\n        else {\n            if (this.sortType === SortType.single) {\n                sorts.splice(0, this.sorts.length);\n            }\n            sorts.push({ dir: newValue, prop: column.prop });\n        }\n        return sorts;\n    }\n    /**\n     * @return {?}\n     */\n    setStylesByGroup() {\n        this._styleByGroup.left = this.calcStylesByGroup('left');\n        this._styleByGroup.center = this.calcStylesByGroup('center');\n        this._styleByGroup.right = this.calcStylesByGroup('right');\n        this.cd.detectChanges();\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    calcStylesByGroup(group) {\n        /** @type {?} */\n        const widths = this._columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'center') {\n            translateXY(styles, offsetX * -1, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const totalDiff = widths.total - this.innerWidth;\n            /** @type {?} */\n            const offset = totalDiff * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n}\nDataTableHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-header',\n                template: `\n    <div\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-header'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nDataTableHeaderComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableHeaderComponent.propDecorators = {\n    sortAscendingIcon: [{ type: Input }],\n    sortDescendingIcon: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    dealsWithGroup: [{ type: Input }],\n    targetMarkerTemplate: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    sorts: [{ type: Input }],\n    sortType: [{ type: Input }],\n    allRowsSelected: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    headerHeight: [{ type: HostBinding, args: ['style.height',] }, { type: Input }],\n    columns: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    sort: [{ type: Output }],\n    reorder: [{ type: Output }],\n    resize: [{ type: Output }],\n    select: [{ type: Output }],\n    columnContextmenu: [{ type: Output }],\n    headerWidth: [{ type: HostBinding, args: ['style.width',] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.scrollbarH;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dealsWithGroup;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sorts;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorderable;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.dragEventTarget;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.reorder;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.resize;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._columns;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._headerHeight;\n    /** @type {?} */\n    DataTableHeaderComponent.prototype._styleByGroup;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throttle a function\n * @param {?} func\n * @param {?} wait\n * @param {?=} options\n * @return {?}\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    /** @type {?} */\n    let context;\n    /** @type {?} */\n    let args;\n    /** @type {?} */\n    let result;\n    /** @type {?} */\n    let timeout = null;\n    /** @type {?} */\n    let previous = 0;\n    /**\n     * @return {?}\n     */\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return (/**\n     * @this {?}\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        /** @type {?} */\n        const remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    });\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n * @param {?} duration\n * @param {?=} options\n * @return {?}\n */\nfunction throttleable(duration, options) {\n    return (/**\n     * @param {?} target\n     * @param {?} key\n     * @param {?} descriptor\n     * @return {?}\n     */\n    function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: (/**\n             * @return {?}\n             */\n            function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            })\n        };\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Calculates the Total Flex Grow\n * @param {?} columns\n * @return {?}\n */\nfunction getTotalFlexGrow(columns) {\n    /** @type {?} */\n    let totalFlexGrow = 0;\n    for (const c of columns) {\n        totalFlexGrow += c.flexGrow || 0;\n    }\n    return totalFlexGrow;\n}\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @return {?}\n */\nfunction adjustColumnWidths(allColumns, expectedWidth) {\n    /** @type {?} */\n    const columnsWidth = columnsTotalWidth(allColumns);\n    /** @type {?} */\n    const totalFlexGrow = getTotalFlexGrow(allColumns);\n    /** @type {?} */\n    const colsByGroup = columnsByPin(allColumns);\n    if (columnsWidth !== expectedWidth) {\n        scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n    }\n}\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n * @param {?} colsByGroup\n * @param {?} maxWidth\n * @param {?} totalFlexGrow\n * @return {?}\n */\nfunction scaleColumns(colsByGroup, maxWidth, totalFlexGrow) {\n    // calculate total width and flexgrow points for coulumns that can be resized\n    for (const attr in colsByGroup) {\n        for (const column of colsByGroup[attr]) {\n            if (!column.canAutoResize) {\n                maxWidth -= column.width;\n                totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n            }\n            else {\n                column.width = 0;\n            }\n        }\n    }\n    /** @type {?} */\n    const hasMinWidth = {};\n    /** @type {?} */\n    let remainingWidth = maxWidth;\n    // resize columns until no width is left to be distributed\n    do {\n        /** @type {?} */\n        const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n        remainingWidth = 0;\n        for (const attr in colsByGroup) {\n            for (const column of colsByGroup[attr]) {\n                // if the column can be resize and it hasn't reached its minimum width yet\n                if (column.canAutoResize && !hasMinWidth[column.prop]) {\n                    /** @type {?} */\n                    const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n                    if (column.minWidth !== undefined && newWidth < column.minWidth) {\n                        remainingWidth += newWidth - column.minWidth;\n                        column.width = column.minWidth;\n                        hasMinWidth[column.prop] = true;\n                    }\n                    else {\n                        column.width = newWidth;\n                    }\n                }\n            }\n        }\n    } while (remainingWidth !== 0);\n}\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n * @param {?} allColumns\n * @param {?} expectedWidth\n * @param {?} startIdx\n * @param {?} allowBleed\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction forceFillColumnWidths(allColumns, expectedWidth, startIdx, allowBleed, defaultColWidth = 300) {\n    /** @type {?} */\n    const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter((/**\n     * @param {?} c\n     * @return {?}\n     */\n    c => {\n        return c.canAutoResize !== false;\n    }));\n    for (const column of columnsToResize) {\n        if (!column.$$oldWidth) {\n            column.$$oldWidth = column.width;\n        }\n    }\n    /** @type {?} */\n    let additionWidthPerColumn = 0;\n    /** @type {?} */\n    let exceedsWindow = false;\n    /** @type {?} */\n    let contentWidth = getContentWidth(allColumns, defaultColWidth);\n    /** @type {?} */\n    let remainingWidth = expectedWidth - contentWidth;\n    /** @type {?} */\n    const columnsProcessed = [];\n    /** @type {?} */\n    const remainingWidthLimit = 1;\n    // This loop takes care of the\n    do {\n        additionWidthPerColumn = remainingWidth / columnsToResize.length;\n        exceedsWindow = contentWidth >= expectedWidth;\n        for (const column of columnsToResize) {\n            if (exceedsWindow && allowBleed) {\n                column.width = column.$$oldWidth || column.width || defaultColWidth;\n            }\n            else {\n                /** @type {?} */\n                const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n                if (column.minWidth && newSize < column.minWidth) {\n                    column.width = column.minWidth;\n                    columnsProcessed.push(column);\n                }\n                else if (column.maxWidth && newSize > column.maxWidth) {\n                    column.width = column.maxWidth;\n                    columnsProcessed.push(column);\n                }\n                else {\n                    column.width = newSize;\n                }\n            }\n            column.width = Math.max(0, column.width);\n        }\n        contentWidth = getContentWidth(allColumns);\n        remainingWidth = expectedWidth - contentWidth;\n        removeProcessedColumns(columnsToResize, columnsProcessed);\n    } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n/**\n * Remove the processed columns from the current active columns.\n * @param {?} columnsToResize\n * @param {?} columnsProcessed\n * @return {?}\n */\nfunction removeProcessedColumns(columnsToResize, columnsProcessed) {\n    for (const column of columnsProcessed) {\n        /** @type {?} */\n        const index = columnsToResize.indexOf(column);\n        columnsToResize.splice(index, 1);\n    }\n}\n/**\n * Gets the width of the columns\n * @param {?} allColumns\n * @param {?=} defaultColWidth\n * @return {?}\n */\nfunction getContentWidth(allColumns, defaultColWidth = 300) {\n    /** @type {?} */\n    let contentWidth = 0;\n    for (const column of allColumns) {\n        contentWidth += column.width || defaultColWidth;\n    }\n    return contentWidth;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst SortDirection = {\n    asc: 'asc',\n    desc: 'desc',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the next sort direction\n * @param {?} sortType\n * @param {?} current\n * @return {?}\n */\nfunction nextSortDir(sortType, current) {\n    if (sortType === SortType.single) {\n        if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else {\n            return SortDirection.asc;\n        }\n    }\n    else {\n        if (!current) {\n            return SortDirection.asc;\n        }\n        else if (current === SortDirection.asc) {\n            return SortDirection.desc;\n        }\n        else if (current === SortDirection.desc) {\n            return undefined;\n        }\n        // avoid TS7030: Not all code paths return a value.\n        return undefined;\n    }\n}\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction orderByComparator(a, b) {\n    if (a === null || typeof a === 'undefined')\n        a = 0;\n    if (b === null || typeof b === 'undefined')\n        b = 0;\n    if (a instanceof Date && b instanceof Date) {\n        if (a < b)\n            return -1;\n        if (a > b)\n            return 1;\n    }\n    else if (isNaN(parseFloat(a)) || !isFinite(a) || (isNaN(parseFloat(b)) || !isFinite(b))) {\n        // Convert to string in case of a=0 or b=0\n        a = String(a);\n        b = String(b);\n        // Isn't a number so lowercase the string to properly compare\n        if (a.toLowerCase() < b.toLowerCase())\n            return -1;\n        if (a.toLowerCase() > b.toLowerCase())\n            return 1;\n    }\n    else {\n        // Parse strings as numbers to compare properly\n        if (parseFloat(a) < parseFloat(b))\n            return -1;\n        if (parseFloat(a) > parseFloat(b))\n            return 1;\n    }\n    // equal each other\n    return 0;\n}\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n * @param {?} rows\n * @param {?} columns\n * @param {?} dirs\n * @return {?}\n */\nfunction sortRows(rows, columns, dirs) {\n    if (!rows)\n        return [];\n    if (!dirs || !dirs.length || !columns)\n        return [...rows];\n    /**\n     * record the row ordering of results from prior sort operations (if applicable)\n     * this is necessary to guarantee stable sorting behavior\n     * @type {?}\n     */\n    const rowToIndexMap = new Map();\n    rows.forEach((/**\n     * @param {?} row\n     * @param {?} index\n     * @return {?}\n     */\n    (row, index) => rowToIndexMap.set(row, index)));\n    /** @type {?} */\n    const temp = [...rows];\n    /** @type {?} */\n    const cols = columns.reduce((/**\n     * @param {?} obj\n     * @param {?} col\n     * @return {?}\n     */\n    (obj, col) => {\n        if (col.comparator && typeof col.comparator === 'function') {\n            obj[col.prop] = col.comparator;\n        }\n        return obj;\n    }), {});\n    // cache valueGetter and compareFn so that they\n    // do not need to be looked-up in the sort function body\n    /** @type {?} */\n    const cachedDirs = dirs.map((/**\n     * @param {?} dir\n     * @return {?}\n     */\n    dir => {\n        /** @type {?} */\n        const prop = dir.prop;\n        return {\n            prop,\n            dir: dir.dir,\n            valueGetter: getterForProp(prop),\n            compareFn: cols[prop] || orderByComparator\n        };\n    }));\n    return temp.sort((/**\n     * @param {?} rowA\n     * @param {?} rowB\n     * @return {?}\n     */\n    function (rowA, rowB) {\n        for (const cachedDir of cachedDirs) {\n            // Get property and valuegetters for column to be sorted\n            const { prop, valueGetter } = cachedDir;\n            // Get A and B cell values from rows based on properties of the columns\n            /** @type {?} */\n            const propA = valueGetter(rowA, prop);\n            /** @type {?} */\n            const propB = valueGetter(rowB, prop);\n            // Compare function gets five parameters:\n            // Two cell values to be compared as propA and propB\n            // Two rows corresponding to the cells as rowA and rowB\n            // Direction of the sort for this column as SortDirection\n            // Compare can be a standard JS comparison function (a,b) => -1|0|1\n            // as additional parameters are silently ignored. The whole row and sort\n            // direction enable more complex sort logic.\n            /** @type {?} */\n            const comparison = cachedDir.dir !== SortDirection.desc\n                ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n                : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n            // Don't return 0 yet in case of needing to sort by next property\n            if (comparison !== 0)\n                return comparison;\n        }\n        if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB)))\n            return 0;\n        /**\n         * all else being equal, preserve original order of the rows (stable sort)\n         */\n        return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DatatableComponent {\n    /**\n     * @param {?} scrollbarHelper\n     * @param {?} dimensionsHelper\n     * @param {?} cd\n     * @param {?} element\n     * @param {?} differs\n     * @param {?} columnChangesService\n     * @param {?} configuration\n     */\n    constructor(scrollbarHelper, dimensionsHelper, cd, element, differs, columnChangesService, configuration) {\n        this.scrollbarHelper = scrollbarHelper;\n        this.dimensionsHelper = dimensionsHelper;\n        this.cd = cd;\n        this.columnChangesService = columnChangesService;\n        this.configuration = configuration;\n        /**\n         * List of row objects that should be\n         * represented as selected in the grid.\n         * Default value: `[]`\n         */\n        this.selected = [];\n        /**\n         * Enable vertical scrollbars\n         */\n        this.scrollbarV = false;\n        /**\n         * Enable horz scrollbars\n         */\n        this.scrollbarH = false;\n        /**\n         * The row height; which is necessary\n         * to calculate the height for the lazy rendering.\n         */\n        this.rowHeight = 30;\n        /**\n         * Type of column width distribution formula.\n         * Example: flex, force, standard\n         */\n        this.columnMode = ColumnMode.standard;\n        /**\n         * The minimum header height in pixels.\n         * Pass a falsey for no header\n         */\n        this.headerHeight = 30;\n        /**\n         * The minimum footer height in pixels.\n         * Pass falsey for no footer\n         */\n        this.footerHeight = 0;\n        /**\n         * If the table should use external paging\n         * otherwise its assumed that all data is preloaded.\n         */\n        this.externalPaging = false;\n        /**\n         * If the table should use external sorting or\n         * the built-in basic sorting.\n         */\n        this.externalSorting = false;\n        /**\n         * Show the linear loading bar.\n         * Default value: `false`\n         */\n        this.loadingIndicator = false;\n        /**\n         * Enable/Disable ability to re-order columns\n         * by dragging them.\n         */\n        this.reorderable = true;\n        /**\n         * Swap columns on re-order columns or\n         * move them.\n         */\n        this.swapColumns = true;\n        /**\n         * The type of sorting\n         */\n        this.sortType = SortType.single;\n        /**\n         * Array of sorted columns by property and type.\n         * Default value: `[]`\n         */\n        this.sorts = [];\n        /**\n         * Css class overrides\n         */\n        this.cssClasses = {\n            sortAscending: 'datatable-icon-up',\n            sortDescending: 'datatable-icon-down',\n            pagerLeftArrow: 'datatable-icon-left',\n            pagerRightArrow: 'datatable-icon-right',\n            pagerPrevious: 'datatable-icon-prev',\n            pagerNext: 'datatable-icon-skip'\n        };\n        /**\n         * Message overrides for localization\n         *\n         * emptyMessage     [default] = 'No data to display'\n         * totalMessage     [default] = 'total'\n         * selectedMessage  [default] = 'selected'\n         */\n        this.messages = {\n            // Message to show when array is presented\n            // but contains no values\n            emptyMessage: 'No data to display',\n            // Footer total message\n            totalMessage: 'total',\n            // Footer selected message\n            selectedMessage: 'selected'\n        };\n        /**\n         * A boolean you can use to set the detault behaviour of rows and groups\n         * whether they will start expanded or not. If ommited the default is NOT expanded.\n         *\n         */\n        this.groupExpansionDefault = false;\n        /**\n         * Property to which you can use for determining select all\n         * rows on current page or not.\n         *\n         * \\@memberOf DatatableComponent\n         */\n        this.selectAllRowsOnPage = false;\n        /**\n         * A flag for row virtualization on / off\n         */\n        this.virtualization = true;\n        /**\n         * A flag for switching summary row on / off\n         */\n        this.summaryRow = false;\n        /**\n         * A height of summary row\n         */\n        this.summaryHeight = 30;\n        /**\n         * A property holds a summary row position: top/bottom\n         */\n        this.summaryPosition = 'top';\n        /**\n         * Body was scrolled typically in a `scrollbarV:true` scenario.\n         */\n        this.scroll = new EventEmitter();\n        /**\n         * A cell or row was focused via keyboard or mouse click.\n         */\n        this.activate = new EventEmitter();\n        /**\n         * A cell or row was selected.\n         */\n        this.select = new EventEmitter();\n        /**\n         * Column sort was invoked.\n         */\n        this.sort = new EventEmitter();\n        /**\n         * The table was paged either triggered by the pager or the body scroll.\n         */\n        this.page = new EventEmitter();\n        /**\n         * Columns were re-ordered.\n         */\n        this.reorder = new EventEmitter();\n        /**\n         * Column was resized.\n         */\n        this.resize = new EventEmitter();\n        /**\n         * The context menu was invoked on the table.\n         * type indicates whether the header or the body was clicked.\n         * content contains either the column or the row that was clicked.\n         */\n        this.tableContextmenu = new EventEmitter(false);\n        /**\n         * A row was expanded ot collapsed for tree\n         */\n        this.treeAction = new EventEmitter();\n        this.rowCount = 0;\n        this._offsetX = new BehaviorSubject(0);\n        this._count = 0;\n        this._offset = 0;\n        this._subscriptions = [];\n        /**\n         * This will be used when displaying or selecting rows.\n         * when tracking/comparing them, we'll use the value of this fn,\n         *\n         * (`fn(x) === fn(y)` instead of `x === y`)\n         */\n        this.rowIdentity = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => x);\n        // get ref to elm for measuring\n        this.element = element.nativeElement;\n        this.rowDiffer = differs.find({}).create();\n        // apply global settings from Module.forRoot\n        if (this.configuration && this.configuration.messages) {\n            this.messages = Object.assign({}, this.configuration.messages);\n        }\n    }\n    /**\n     * Rows that are displayed in the table.\n     * @param {?} val\n     * @return {?}\n     */\n    set rows(val) {\n        this._rows = val;\n        if (val) {\n            this._internalRows = [...val];\n        }\n        // auto sort on new updates\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // recalculate sizes/etc\n        this.recalculate();\n        if (this._rows && this._groupRowsBy) {\n            // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n            this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n        }\n        this.cd.markForCheck();\n    }\n    /**\n     * Gets the rows.\n     * @return {?}\n     */\n    get rows() {\n        return this._rows;\n    }\n    /**\n     * This attribute allows the user to set the name of the column to group the data with\n     * @param {?} val\n     * @return {?}\n     */\n    set groupRowsBy(val) {\n        if (val) {\n            this._groupRowsBy = val;\n            if (this._rows && this._groupRowsBy) {\n                // cretes a new array with the data grouped\n                this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get groupRowsBy() {\n        return this._groupRowsBy;\n    }\n    /**\n     * Columns to be displayed.\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        if (val) {\n            this._internalColumns = [...val];\n            setColumnDefaults(this._internalColumns);\n            this.recalculateColumns();\n        }\n        this._columns = val;\n    }\n    /**\n     * Get the columns.\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * The page size to be shown.\n     * Default value: `undefined`\n     * @param {?} val\n     * @return {?}\n     */\n    set limit(val) {\n        this._limit = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the limit.\n     * @return {?}\n     */\n    get limit() {\n        return this._limit;\n    }\n    /**\n     * The total count of all rows.\n     * Default value: `0`\n     * @param {?} val\n     * @return {?}\n     */\n    set count(val) {\n        this._count = val;\n        // recalculate sizes/etc\n        this.recalculate();\n    }\n    /**\n     * Gets the count.\n     * @return {?}\n     */\n    get count() {\n        return this._count;\n    }\n    /**\n     * The current offset ( page - 1 ) shown.\n     * Default value: `0`\n     * @param {?} val\n     * @return {?}\n     */\n    set offset(val) {\n        this._offset = val;\n    }\n    /**\n     * @return {?}\n     */\n    get offset() {\n        return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n    }\n    /**\n     * CSS class applied if the header height if fixed height.\n     * @return {?}\n     */\n    get isFixedHeader() {\n        /** @type {?} */\n        const headerHeight = this.headerHeight;\n        return typeof headerHeight === 'string' ? (/** @type {?} */ (headerHeight)) !== 'auto' : true;\n    }\n    /**\n     * CSS class applied to the root element if\n     * the row heights are fixed heights.\n     * @return {?}\n     */\n    get isFixedRow() {\n        return this.rowHeight !== 'auto';\n    }\n    /**\n     * CSS class applied to root element if\n     * vertical scrolling is enabled.\n     * @return {?}\n     */\n    get isVertScroll() {\n        return this.scrollbarV;\n    }\n    /**\n     * CSS class applied to root element if\n     * virtualization is enabled.\n     * @return {?}\n     */\n    get isVirtualized() {\n        return this.virtualization;\n    }\n    /**\n     * CSS class applied to the root element\n     * if the horziontal scrolling is enabled.\n     * @return {?}\n     */\n    get isHorScroll() {\n        return this.scrollbarH;\n    }\n    /**\n     * CSS class applied to root element is selectable.\n     * @return {?}\n     */\n    get isSelectable() {\n        return this.selectionType !== undefined;\n    }\n    /**\n     * CSS class applied to root is checkbox selection.\n     * @return {?}\n     */\n    get isCheckboxSelection() {\n        return this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * CSS class applied to root if cell selection.\n     * @return {?}\n     */\n    get isCellSelection() {\n        return this.selectionType === SelectionType.cell;\n    }\n    /**\n     * CSS class applied to root if single select.\n     * @return {?}\n     */\n    get isSingleSelection() {\n        return this.selectionType === SelectionType.single;\n    }\n    /**\n     * CSS class added to root element if mulit select\n     * @return {?}\n     */\n    get isMultiSelection() {\n        return this.selectionType === SelectionType.multi;\n    }\n    /**\n     * CSS class added to root element if mulit click select\n     * @return {?}\n     */\n    get isMultiClickSelection() {\n        return this.selectionType === SelectionType.multiClick;\n    }\n    /**\n     * Column templates gathered from `ContentChildren`\n     * if described in your markup.\n     * @param {?} val\n     * @return {?}\n     */\n    set columnTemplates(val) {\n        this._columnTemplates = val;\n        this.translateColumns(val);\n    }\n    /**\n     * Returns the column templates.\n     * @return {?}\n     */\n    get columnTemplates() {\n        return this._columnTemplates;\n    }\n    /**\n     * Returns if all rows are selected.\n     * @return {?}\n     */\n    get allRowsSelected() {\n        /** @type {?} */\n        let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n        if (this.selectAllRowsOnPage) {\n            /** @type {?} */\n            const indexes = this.bodyComponent.indexes;\n            /** @type {?} */\n            const rowsOnPage = indexes.last - indexes.first;\n            allRowsSelected = this.selected.length === rowsOnPage;\n        }\n        return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n    }\n    /**\n     * Lifecycle hook that is called after data-bound\n     * properties of a directive are initialized.\n     * @return {?}\n     */\n    ngOnInit() {\n        // need to call this immediatly to size\n        // if the table is hidden the visibility\n        // listener will invoke this itself upon show\n        this.recalculate();\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * view has been fully initialized.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.externalSorting) {\n            this.sortInternalRows();\n        }\n        // this has to be done to prevent the change detection\n        // tree from freaking out because we are readjusting\n        if (typeof requestAnimationFrame === 'undefined') {\n            return;\n        }\n        requestAnimationFrame((/**\n         * @return {?}\n         */\n        () => {\n            this.recalculate();\n            // emit page for virtual server-side kickoff\n            if (this.externalPaging && this.scrollbarV) {\n                this.page.emit({\n                    count: this.count,\n                    pageSize: this.pageSize,\n                    limit: this.limit,\n                    offset: 0\n                });\n            }\n        }));\n    }\n    /**\n     * Lifecycle hook that is called after a component's\n     * content has been fully initialized.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.columnTemplates.changes.subscribe((/**\n         * @param {?} v\n         * @return {?}\n         */\n        v => this.translateColumns(v)));\n        this.listenForColumnInputChanges();\n    }\n    /**\n     * Translates the templates to the column objects\n     * @param {?} val\n     * @return {?}\n     */\n    translateColumns(val) {\n        if (val) {\n            /** @type {?} */\n            const arr = val.toArray();\n            if (arr.length) {\n                this._internalColumns = translateTemplates(arr);\n                setColumnDefaults(this._internalColumns);\n                this.recalculateColumns();\n                this.sortInternalRows();\n                this.cd.markForCheck();\n            }\n        }\n    }\n    /**\n     * Creates a map with the data grouped by the user choice of grouping index\n     *\n     * @param {?} originalArray the original array passed via parameter\n     * @param {?} groupBy\n     * @return {?}\n     */\n    groupArrayBy(originalArray, groupBy) {\n        // create a map to hold groups with their corresponding results\n        /** @type {?} */\n        const map = new Map();\n        /** @type {?} */\n        let i = 0;\n        originalArray.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            /** @type {?} */\n            const key = item[groupBy];\n            if (!map.has(key)) {\n                map.set(key, [item]);\n            }\n            else {\n                map.get(key).push(item);\n            }\n            i++;\n        }));\n        /** @type {?} */\n        const addGroup = (/**\n         * @param {?} key\n         * @param {?} value\n         * @return {?}\n         */\n        (key, value) => {\n            return { key, value };\n        });\n        // convert map back to a simple array of objects\n        return Array.from(map, (/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => addGroup(x[0], x[1])));\n    }\n    /*\n       * Lifecycle hook that is called when Angular dirty checks a directive.\n       */\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.rows)) {\n            if (!this.externalSorting) {\n                this.sortInternalRows();\n            }\n            else {\n                this._internalRows = [...this.rows];\n            }\n            // auto group by parent on new update\n            this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n            this.recalculatePages();\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * Recalc's the sizes of the grid.\n     *\n     * Updated automatically on changes to:\n     *\n     *  - Columns\n     *  - Rows\n     *  - Paging related\n     *\n     * Also can be manually invoked or upon window resize.\n     * @return {?}\n     */\n    recalculate() {\n        this.recalculateDims();\n        this.recalculateColumns();\n    }\n    /**\n     * Window resize handler to update sizes.\n     * @return {?}\n     */\n    onWindowResize() {\n        this.recalculate();\n    }\n    /**\n     * Recalulcates the column widths based on column width\n     * distribution mode and scrollbar offsets.\n     * @param {?=} columns\n     * @param {?=} forceIdx\n     * @param {?=} allowBleed\n     * @return {?}\n     */\n    recalculateColumns(columns = this._internalColumns, forceIdx = -1, allowBleed = this.scrollbarH) {\n        if (!columns)\n            return undefined;\n        /** @type {?} */\n        let width = this._innerWidth;\n        if (this.scrollbarV) {\n            width = width - this.scrollbarHelper.width;\n        }\n        if (this.columnMode === ColumnMode.force) {\n            forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n        }\n        else if (this.columnMode === ColumnMode.flex) {\n            adjustColumnWidths(columns, width);\n        }\n        return columns;\n    }\n    /**\n     * Recalculates the dimensions of the table size.\n     * Internally calls the page size and row count calcs too.\n     *\n     * @return {?}\n     */\n    recalculateDims() {\n        /** @type {?} */\n        const dims = this.dimensionsHelper.getDimensions(this.element);\n        this._innerWidth = Math.floor(dims.width);\n        if (this.scrollbarV) {\n            /** @type {?} */\n            let height = dims.height;\n            if (this.headerHeight)\n                height = height - this.headerHeight;\n            if (this.footerHeight)\n                height = height - this.footerHeight;\n            this.bodyHeight = height;\n        }\n        this.recalculatePages();\n    }\n    /**\n     * Recalculates the pages after a update.\n     * @return {?}\n     */\n    recalculatePages() {\n        this.pageSize = this.calcPageSize();\n        this.rowCount = this.calcRowCount();\n    }\n    /**\n     * Body triggered a page event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onBodyPage({ offset }) {\n        // Avoid pagination caming from body events like scroll when the table\n        // has no virtualization and the external paging is enable.\n        // This means, let's the developer handle pagination by my him(her) self\n        if (this.externalPaging && !this.virtualization) {\n            return;\n        }\n        this.offset = offset;\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n    }\n    /**\n     * The body triggered a scroll event.\n     * @param {?} event\n     * @return {?}\n     */\n    onBodyScroll(event) {\n        this._offsetX.next(event.offsetX);\n        this.scroll.emit(event);\n        this.cd.detectChanges();\n    }\n    /**\n     * The footer triggered a page event.\n     * @param {?} event\n     * @return {?}\n     */\n    onFooterPage(event) {\n        this.offset = event.page - 1;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.page.emit({\n            count: this.count,\n            pageSize: this.pageSize,\n            limit: this.limit,\n            offset: this.offset\n        });\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n    }\n    /**\n     * Recalculates the sizes of the page\n     * @param {?=} val\n     * @return {?}\n     */\n    calcPageSize(val = this.rows) {\n        // Keep the page size constant even if the row has been expanded.\n        // This is because an expanded row is still considered to be a child of\n        // the original row.  Hence calculation would use rowHeight only.\n        if (this.scrollbarV && this.virtualization) {\n            /** @type {?} */\n            const size = Math.ceil(this.bodyHeight / ((/** @type {?} */ (this.rowHeight))));\n            return Math.max(size, 0);\n        }\n        // if limit is passed, we are paging\n        if (this.limit !== undefined) {\n            return this.limit;\n        }\n        // otherwise use row length\n        if (val) {\n            return val.length;\n        }\n        // other empty :(\n        return 0;\n    }\n    /**\n     * Calculates the row count.\n     * @param {?=} val\n     * @return {?}\n     */\n    calcRowCount(val = this.rows) {\n        if (!this.externalPaging) {\n            if (!val)\n                return 0;\n            if (this.groupedRows) {\n                return this.groupedRows.length;\n            }\n            else if (this.treeFromRelation != null && this.treeToRelation != null) {\n                return this._internalRows.length;\n            }\n            else {\n                return val.length;\n            }\n        }\n        return this.count;\n    }\n    /**\n     * The header triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnContextmenu({ event, column }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n    }\n    /**\n     * The body triggered a contextmenu event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onRowContextmenu({ event, row }) {\n        this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n    }\n    /**\n     * The header triggered a column resize event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnResize({ column, newValue }) {\n        /* Safari/iOS 10.2 workaround */\n        if (column === undefined) {\n            return;\n        }\n        /** @type {?} */\n        let idx;\n        /** @type {?} */\n        const cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @param {?} i\n         * @return {?}\n         */\n        (c, i) => {\n            c = Object.assign({}, c);\n            if (c.$$id === column.$$id) {\n                idx = i;\n                c.width = newValue;\n                // set this so we can force the column\n                // width distribution to be to this value\n                c.$$oldWidth = newValue;\n            }\n            return c;\n        }));\n        this.recalculateColumns(cols, idx);\n        this._internalColumns = cols;\n        this.resize.emit({\n            column,\n            newValue\n        });\n    }\n    /**\n     * The header triggered a column re-order event.\n     * @param {?} __0\n     * @return {?}\n     */\n    onColumnReorder({ column, newValue, prevValue }) {\n        /** @type {?} */\n        const cols = this._internalColumns.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => {\n            return Object.assign({}, c);\n        }));\n        if (this.swapColumns) {\n            /** @type {?} */\n            const prevCol = cols[newValue];\n            cols[newValue] = column;\n            cols[prevValue] = prevCol;\n        }\n        else {\n            if (newValue > prevValue) {\n                /** @type {?} */\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i < newValue; i++) {\n                    cols[i] = cols[i + 1];\n                }\n                cols[newValue] = movedCol;\n            }\n            else {\n                /** @type {?} */\n                const movedCol = cols[prevValue];\n                for (let i = prevValue; i > newValue; i--) {\n                    cols[i] = cols[i - 1];\n                }\n                cols[newValue] = movedCol;\n            }\n        }\n        this._internalColumns = cols;\n        this.reorder.emit({\n            column,\n            newValue,\n            prevValue\n        });\n    }\n    /**\n     * The header triggered a column sort event.\n     * @param {?} event\n     * @return {?}\n     */\n    onColumnSort(event) {\n        // clean selected rows\n        if (this.selectAllRowsOnPage) {\n            this.selected = [];\n            this.select.emit({\n                selected: this.selected\n            });\n        }\n        this.sorts = event.sorts;\n        // this could be optimized better since it will resort\n        // the rows again on the 'push' detection...\n        if (this.externalSorting === false) {\n            // don't use normal setter so we don't resort\n            this.sortInternalRows();\n        }\n        // auto group by parent on new update\n        this._internalRows = groupRowsByParents(this._internalRows, optionalGetterForProp(this.treeFromRelation), optionalGetterForProp(this.treeToRelation));\n        // Always go to first page when sorting to see the newly sorted data\n        this.offset = 0;\n        this.bodyComponent.updateOffsetY(this.offset);\n        this.sort.emit(event);\n    }\n    /**\n     * Toggle all row selection\n     * @param {?} event\n     * @return {?}\n     */\n    onHeaderSelect(event) {\n        if (this.selectAllRowsOnPage) {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            const first = this.bodyComponent.indexes.first;\n            /** @type {?} */\n            const last = this.bodyComponent.indexes.last;\n            /** @type {?} */\n            const allSelected = this.selected.length === last - first;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this._internalRows.slice(first, last));\n            }\n        }\n        else {\n            // before we splice, chk if we currently have all selected\n            /** @type {?} */\n            const allSelected = this.selected.length === this.rows.length;\n            // remove all existing either way\n            this.selected = [];\n            // do the opposite here\n            if (!allSelected) {\n                this.selected.push(...this.rows);\n            }\n        }\n        this.select.emit({\n            selected: this.selected\n        });\n    }\n    /**\n     * A row was selected from body\n     * @param {?} event\n     * @return {?}\n     */\n    onBodySelect(event) {\n        this.select.emit(event);\n    }\n    /**\n     * A row was expanded or collapsed for tree\n     * @param {?} event\n     * @return {?}\n     */\n    onTreeAction(event) {\n        /** @type {?} */\n        const row = event.row;\n        // TODO: For duplicated items this will not work\n        /** @type {?} */\n        const rowIndex = this._rows.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => r[this.treeToRelation] === event.row[this.treeToRelation]));\n        this.treeAction.emit({ row, rowIndex });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._subscriptions.forEach((/**\n         * @param {?} subscription\n         * @return {?}\n         */\n        subscription => subscription.unsubscribe()));\n    }\n    /**\n     * listen for changes to input bindings of all DataTableColumnDirective and\n     * trigger the columnTemplates.changes observable to emit\n     * @private\n     * @return {?}\n     */\n    listenForColumnInputChanges() {\n        this._subscriptions.push(this.columnChangesService.columnInputChanges$.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.columnTemplates) {\n                this.columnTemplates.notifyOnChanges();\n            }\n        })));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    sortInternalRows() {\n        this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n    }\n}\nDatatableComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-datatable',\n                template: \"<div visibilityObserver (visible)=\\\"recalculate()\\\">\\n  <datatable-header\\n    *ngIf=\\\"headerHeight\\\"\\n    [sorts]=\\\"sorts\\\"\\n    [sortType]=\\\"sortType\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [dealsWithGroup]=\\\"groupedRows !== undefined\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [headerHeight]=\\\"headerHeight\\\"\\n    [reorderable]=\\\"reorderable\\\"\\n    [targetMarkerTemplate]=\\\"targetMarkerTemplate\\\"\\n    [sortAscendingIcon]=\\\"cssClasses.sortAscending\\\"\\n    [sortDescendingIcon]=\\\"cssClasses.sortDescending\\\"\\n    [allRowsSelected]=\\\"allRowsSelected\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    (sort)=\\\"onColumnSort($event)\\\"\\n    (resize)=\\\"onColumnResize($event)\\\"\\n    (reorder)=\\\"onColumnReorder($event)\\\"\\n    (select)=\\\"onHeaderSelect($event)\\\"\\n    (columnContextmenu)=\\\"onColumnContextmenu($event)\\\"\\n  >\\n  </datatable-header>\\n  <datatable-body\\n    [groupRowsBy]=\\\"groupRowsBy\\\"\\n    [groupedRows]=\\\"groupedRows\\\"\\n    [rows]=\\\"_internalRows\\\"\\n    [groupExpansionDefault]=\\\"groupExpansionDefault\\\"\\n    [scrollbarV]=\\\"scrollbarV\\\"\\n    [scrollbarH]=\\\"scrollbarH\\\"\\n    [virtualization]=\\\"virtualization\\\"\\n    [loadingIndicator]=\\\"loadingIndicator\\\"\\n    [externalPaging]=\\\"externalPaging\\\"\\n    [rowHeight]=\\\"rowHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [offset]=\\\"offset\\\"\\n    [trackByProp]=\\\"trackByProp\\\"\\n    [columns]=\\\"_internalColumns\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offsetX]=\\\"_offsetX | async\\\"\\n    [rowDetail]=\\\"rowDetail\\\"\\n    [groupHeader]=\\\"groupHeader\\\"\\n    [selected]=\\\"selected\\\"\\n    [innerWidth]=\\\"_innerWidth\\\"\\n    [bodyHeight]=\\\"bodyHeight\\\"\\n    [selectionType]=\\\"selectionType\\\"\\n    [emptyMessage]=\\\"messages.emptyMessage\\\"\\n    [rowIdentity]=\\\"rowIdentity\\\"\\n    [rowClass]=\\\"rowClass\\\"\\n    [selectCheck]=\\\"selectCheck\\\"\\n    [displayCheck]=\\\"displayCheck\\\"\\n    [summaryRow]=\\\"summaryRow\\\"\\n    [summaryHeight]=\\\"summaryHeight\\\"\\n    [summaryPosition]=\\\"summaryPosition\\\"\\n    (page)=\\\"onBodyPage($event)\\\"\\n    (activate)=\\\"activate.emit($event)\\\"\\n    (rowContextmenu)=\\\"onRowContextmenu($event)\\\"\\n    (select)=\\\"onBodySelect($event)\\\"\\n    (scroll)=\\\"onBodyScroll($event)\\\"\\n    (treeAction)=\\\"onTreeAction($event)\\\"\\n  >\\n  </datatable-body>\\n  <datatable-footer\\n    *ngIf=\\\"footerHeight\\\"\\n    [rowCount]=\\\"rowCount\\\"\\n    [pageSize]=\\\"pageSize\\\"\\n    [offset]=\\\"offset\\\"\\n    [footerHeight]=\\\"footerHeight\\\"\\n    [footerTemplate]=\\\"footer\\\"\\n    [totalMessage]=\\\"messages.totalMessage\\\"\\n    [pagerLeftArrowIcon]=\\\"cssClasses.pagerLeftArrow\\\"\\n    [pagerRightArrowIcon]=\\\"cssClasses.pagerRightArrow\\\"\\n    [pagerPreviousIcon]=\\\"cssClasses.pagerPrevious\\\"\\n    [selectedCount]=\\\"selected.length\\\"\\n    [selectedMessage]=\\\"!!selectionType && messages.selectedMessage\\\"\\n    [pagerNextIcon]=\\\"cssClasses.pagerNext\\\"\\n    (page)=\\\"onFooterPage($event)\\\"\\n  >\\n  </datatable-footer>\\n</div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    class: 'ngx-datatable'\n                },\n                styles: [\".ngx-datatable{display:block;overflow:hidden;justify-content:center;position:relative;-webkit-transform:translate3d(0,0,0)}.ngx-datatable [hidden]{display:none!important}.ngx-datatable *,.ngx-datatable :after,.ngx-datatable :before{box-sizing:border-box}.ngx-datatable.scroll-vertical .datatable-body{overflow-y:auto}.ngx-datatable.scroll-vertical.virtualized .datatable-body .datatable-row-wrapper{position:absolute}.ngx-datatable.scroll-horz .datatable-body{overflow-x:auto;-webkit-overflow-scrolling:touch}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner{white-space:nowrap}.ngx-datatable.fixed-header .datatable-header .datatable-header-inner .datatable-header-cell{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ngx-datatable.fixed-row .datatable-scroll,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row{white-space:nowrap}.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-cell,.ngx-datatable.fixed-row .datatable-scroll .datatable-body-row .datatable-body-group-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ngx-datatable .datatable-body-row,.ngx-datatable .datatable-header-inner,.ngx-datatable .datatable-row-center{display:flex;flex-direction:row;-o-flex-flow:row;flex-flow:row}.ngx-datatable .datatable-body-cell,.ngx-datatable .datatable-header-cell{overflow-x:hidden;vertical-align:top;display:inline-block;line-height:1.625}.ngx-datatable .datatable-body-cell:focus,.ngx-datatable .datatable-header-cell:focus{outline:0}.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{z-index:9}.ngx-datatable .datatable-row-center,.ngx-datatable .datatable-row-group,.ngx-datatable .datatable-row-left,.ngx-datatable .datatable-row-right{position:relative}.ngx-datatable .datatable-header{display:block;overflow:hidden}.ngx-datatable .datatable-header .datatable-header-inner{align-items:stretch;-webkit-align-items:stretch}.ngx-datatable .datatable-header .datatable-header-cell{position:relative;display:inline-block}.ngx-datatable .datatable-header .datatable-header-cell.sortable .datatable-header-cell-wrapper{cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell.longpress .datatable-header-cell-wrapper{cursor:move}.ngx-datatable .datatable-header .datatable-header-cell .sort-btn{line-height:100%;vertical-align:middle;display:inline-block;cursor:pointer}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell .resize-handle--not-resizable{display:inline-block;position:absolute;right:0;top:0;bottom:0;width:5px;padding:0 4px;visibility:hidden}.ngx-datatable .datatable-header .datatable-header-cell .resize-handle{cursor:ew-resize}.ngx-datatable .datatable-header .datatable-header-cell.resizeable:hover .resize-handle,.ngx-datatable .datatable-header .datatable-header-cell:hover .resize-handle--not-resizable{visibility:visible}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker{position:absolute;top:0;bottom:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromLeft{right:0}.ngx-datatable .datatable-header .datatable-header-cell .targetMarker.dragFromRight{left:0}.ngx-datatable .datatable-header .datatable-header-cell .datatable-header-cell-template-wrap{height:inherit}.ngx-datatable .datatable-body{position:relative;z-index:10;display:block}.ngx-datatable .datatable-body .datatable-scroll{display:inline-block}.ngx-datatable .datatable-body .datatable-row-detail{overflow-y:hidden}.ngx-datatable .datatable-body .datatable-row-wrapper{display:flex;flex-direction:column}.ngx-datatable .datatable-body .datatable-body-row{outline:0}.ngx-datatable .datatable-body .datatable-body-row>div{display:flex}.ngx-datatable .datatable-footer{display:block;width:100%;overflow:auto}.ngx-datatable .datatable-footer .datatable-footer-inner{display:flex;align-items:center;width:100%}.ngx-datatable .datatable-footer .selected-count .page-count{flex:1 1 40%}.ngx-datatable .datatable-footer .selected-count .datatable-pager{flex:1 1 60%}.ngx-datatable .datatable-footer .page-count{flex:1 1 20%}.ngx-datatable .datatable-footer .datatable-pager{flex:1 1 80%;text-align:right}.ngx-datatable .datatable-footer .datatable-pager .pager,.ngx-datatable .datatable-footer .datatable-pager .pager li{padding:0;margin:0;display:inline-block;list-style:none}.ngx-datatable .datatable-footer .datatable-pager .pager li,.ngx-datatable .datatable-footer .datatable-pager .pager li a{outline:0}.ngx-datatable .datatable-footer .datatable-pager .pager li a{cursor:pointer;display:inline-block}.ngx-datatable .datatable-footer .datatable-pager .pager li.disabled a{cursor:not-allowed}\"]\n            }] }\n];\n/** @nocollapse */\nDatatableComponent.ctorParameters = () => [\n    { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n    { type: DimensionsHelper, decorators: [{ type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: KeyValueDiffers },\n    { type: ColumnChangesService },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['configuration',] }] }\n];\nDatatableComponent.propDecorators = {\n    targetMarkerTemplate: [{ type: Input }],\n    rows: [{ type: Input }],\n    groupRowsBy: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    columns: [{ type: Input }],\n    selected: [{ type: Input }],\n    scrollbarV: [{ type: Input }],\n    scrollbarH: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    columnMode: [{ type: Input }],\n    headerHeight: [{ type: Input }],\n    footerHeight: [{ type: Input }],\n    externalPaging: [{ type: Input }],\n    externalSorting: [{ type: Input }],\n    limit: [{ type: Input }],\n    count: [{ type: Input }],\n    offset: [{ type: Input }],\n    loadingIndicator: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    swapColumns: [{ type: Input }],\n    sortType: [{ type: Input }],\n    sorts: [{ type: Input }],\n    cssClasses: [{ type: Input }],\n    messages: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    groupExpansionDefault: [{ type: Input }],\n    trackByProp: [{ type: Input }],\n    selectAllRowsOnPage: [{ type: Input }],\n    virtualization: [{ type: Input }],\n    treeFromRelation: [{ type: Input }],\n    treeToRelation: [{ type: Input }],\n    summaryRow: [{ type: Input }],\n    summaryHeight: [{ type: Input }],\n    summaryPosition: [{ type: Input }],\n    scroll: [{ type: Output }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }],\n    sort: [{ type: Output }],\n    page: [{ type: Output }],\n    reorder: [{ type: Output }],\n    resize: [{ type: Output }],\n    tableContextmenu: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    isFixedHeader: [{ type: HostBinding, args: ['class.fixed-header',] }],\n    isFixedRow: [{ type: HostBinding, args: ['class.fixed-row',] }],\n    isVertScroll: [{ type: HostBinding, args: ['class.scroll-vertical',] }],\n    isVirtualized: [{ type: HostBinding, args: ['class.virtualized',] }],\n    isHorScroll: [{ type: HostBinding, args: ['class.scroll-horz',] }],\n    isSelectable: [{ type: HostBinding, args: ['class.selectable',] }],\n    isCheckboxSelection: [{ type: HostBinding, args: ['class.checkbox-selection',] }],\n    isCellSelection: [{ type: HostBinding, args: ['class.cell-selection',] }],\n    isSingleSelection: [{ type: HostBinding, args: ['class.single-selection',] }],\n    isMultiSelection: [{ type: HostBinding, args: ['class.multi-selection',] }],\n    isMultiClickSelection: [{ type: HostBinding, args: ['class.multi-click-selection',] }],\n    columnTemplates: [{ type: ContentChildren, args: [DataTableColumnDirective,] }],\n    rowDetail: [{ type: ContentChild, args: [DatatableRowDetailDirective, { static: false },] }],\n    groupHeader: [{ type: ContentChild, args: [DatatableGroupHeaderDirective, { static: false },] }],\n    footer: [{ type: ContentChild, args: [DatatableFooterDirective, { static: false },] }],\n    bodyComponent: [{ type: ViewChild, args: [DataTableBodyComponent, { static: false },] }],\n    headerComponent: [{ type: ViewChild, args: [DataTableHeaderComponent, { static: false },] }],\n    rowIdentity: [{ type: Input }],\n    onWindowResize: [{ type: HostListener, args: ['window:resize',] }]\n};\n__decorate([\n    throttleable(5),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], DatatableComponent.prototype, \"onWindowResize\", null);\nif (false) {\n    /**\n     * Template for the target marker of drag target columns.\n     * @type {?}\n     */\n    DatatableComponent.prototype.targetMarkerTemplate;\n    /**\n     * This attribute allows the user to set a grouped array in the following format:\n     *  [\n     *    {groupid=1} [\n     *      {id=1 name=\"test1\"},\n     *      {id=2 name=\"test2\"},\n     *      {id=3 name=\"test3\"}\n     *    ]},\n     *    {groupid=2>[\n     *      {id=4 name=\"test4\"},\n     *      {id=5 name=\"test5\"},\n     *      {id=6 name=\"test6\"}\n     *    ]}\n     *  ]\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupedRows;\n    /**\n     * List of row objects that should be\n     * represented as selected in the grid.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selected;\n    /**\n     * Enable vertical scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarV;\n    /**\n     * Enable horz scrollbars\n     * @type {?}\n     */\n    DatatableComponent.prototype.scrollbarH;\n    /**\n     * The row height; which is necessary\n     * to calculate the height for the lazy rendering.\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowHeight;\n    /**\n     * Type of column width distribution formula.\n     * Example: flex, force, standard\n     * @type {?}\n     */\n    DatatableComponent.prototype.columnMode;\n    /**\n     * The minimum header height in pixels.\n     * Pass a falsey for no header\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerHeight;\n    /**\n     * The minimum footer height in pixels.\n     * Pass falsey for no footer\n     * @type {?}\n     */\n    DatatableComponent.prototype.footerHeight;\n    /**\n     * If the table should use external paging\n     * otherwise its assumed that all data is preloaded.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalPaging;\n    /**\n     * If the table should use external sorting or\n     * the built-in basic sorting.\n     * @type {?}\n     */\n    DatatableComponent.prototype.externalSorting;\n    /**\n     * Show the linear loading bar.\n     * Default value: `false`\n     * @type {?}\n     */\n    DatatableComponent.prototype.loadingIndicator;\n    /**\n     * Type of row selection. Options are:\n     *\n     *  - `single`\n     *  - `multi`\n     *  - `checkbox`\n     *  - `multiClick`\n     *  - `cell`\n     *\n     * For no selection pass a `falsey`.\n     * Default value: `undefined`\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectionType;\n    /**\n     * Enable/Disable ability to re-order columns\n     * by dragging them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorderable;\n    /**\n     * Swap columns on re-order columns or\n     * move them.\n     * @type {?}\n     */\n    DatatableComponent.prototype.swapColumns;\n    /**\n     * The type of sorting\n     * @type {?}\n     */\n    DatatableComponent.prototype.sortType;\n    /**\n     * Array of sorted columns by property and type.\n     * Default value: `[]`\n     * @type {?}\n     */\n    DatatableComponent.prototype.sorts;\n    /**\n     * Css class overrides\n     * @type {?}\n     */\n    DatatableComponent.prototype.cssClasses;\n    /**\n     * Message overrides for localization\n     *\n     * emptyMessage     [default] = 'No data to display'\n     * totalMessage     [default] = 'total'\n     * selectedMessage  [default] = 'selected'\n     * @type {?}\n     */\n    DatatableComponent.prototype.messages;\n    /**\n     * Row specific classes.\n     * Similar implementation to ngClass.\n     *\n     *  [rowClass]=\"'first second'\"\n     *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowClass;\n    /**\n     * A boolean/function you can use to check whether you want\n     * to select a particular row based on a criteria. Example:\n     *\n     *    (selection) => {\n     *      return selection !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectCheck;\n    /**\n     * A function you can use to check whether you want\n     * to show the checkbox for a particular row based on a criteria. Example:\n     *\n     *    (row, column, value) => {\n     *      return row.name !== 'Ethel Price';\n     *    }\n     * @type {?}\n     */\n    DatatableComponent.prototype.displayCheck;\n    /**\n     * A boolean you can use to set the detault behaviour of rows and groups\n     * whether they will start expanded or not. If ommited the default is NOT expanded.\n     *\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupExpansionDefault;\n    /**\n     * Property to which you can use for custom tracking of rows.\n     * Example: 'name'\n     * @type {?}\n     */\n    DatatableComponent.prototype.trackByProp;\n    /**\n     * Property to which you can use for determining select all\n     * rows on current page or not.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.selectAllRowsOnPage;\n    /**\n     * A flag for row virtualization on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.virtualization;\n    /**\n     * Tree from relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeFromRelation;\n    /**\n     * Tree to relation\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeToRelation;\n    /**\n     * A flag for switching summary row on / off\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryRow;\n    /**\n     * A height of summary row\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryHeight;\n    /**\n     * A property holds a summary row position: top/bottom\n     * @type {?}\n     */\n    DatatableComponent.prototype.summaryPosition;\n    /**\n     * Body was scrolled typically in a `scrollbarV:true` scenario.\n     * @type {?}\n     */\n    DatatableComponent.prototype.scroll;\n    /**\n     * A cell or row was focused via keyboard or mouse click.\n     * @type {?}\n     */\n    DatatableComponent.prototype.activate;\n    /**\n     * A cell or row was selected.\n     * @type {?}\n     */\n    DatatableComponent.prototype.select;\n    /**\n     * Column sort was invoked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.sort;\n    /**\n     * The table was paged either triggered by the pager or the body scroll.\n     * @type {?}\n     */\n    DatatableComponent.prototype.page;\n    /**\n     * Columns were re-ordered.\n     * @type {?}\n     */\n    DatatableComponent.prototype.reorder;\n    /**\n     * Column was resized.\n     * @type {?}\n     */\n    DatatableComponent.prototype.resize;\n    /**\n     * The context menu was invoked on the table.\n     * type indicates whether the header or the body was clicked.\n     * content contains either the column or the row that was clicked.\n     * @type {?}\n     */\n    DatatableComponent.prototype.tableContextmenu;\n    /**\n     * A row was expanded ot collapsed for tree\n     * @type {?}\n     */\n    DatatableComponent.prototype.treeAction;\n    /**\n     * Row Detail templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowDetail;\n    /**\n     * Group Header templates gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.groupHeader;\n    /**\n     * Footer template gathered from the ContentChild\n     * @type {?}\n     */\n    DatatableComponent.prototype.footer;\n    /**\n     * Reference to the body component for manually\n     * invoking functions on the body.\n     * @type {?}\n     */\n    DatatableComponent.prototype.bodyComponent;\n    /**\n     * Reference to the header component for manually\n     * invoking functions on the header.\n     *\n     * \\@memberOf DatatableComponent\n     * @type {?}\n     */\n    DatatableComponent.prototype.headerComponent;\n    /** @type {?} */\n    DatatableComponent.prototype.element;\n    /** @type {?} */\n    DatatableComponent.prototype._innerWidth;\n    /** @type {?} */\n    DatatableComponent.prototype.pageSize;\n    /** @type {?} */\n    DatatableComponent.prototype.bodyHeight;\n    /** @type {?} */\n    DatatableComponent.prototype.rowCount;\n    /** @type {?} */\n    DatatableComponent.prototype.rowDiffer;\n    /** @type {?} */\n    DatatableComponent.prototype._offsetX;\n    /** @type {?} */\n    DatatableComponent.prototype._limit;\n    /** @type {?} */\n    DatatableComponent.prototype._count;\n    /** @type {?} */\n    DatatableComponent.prototype._offset;\n    /** @type {?} */\n    DatatableComponent.prototype._rows;\n    /** @type {?} */\n    DatatableComponent.prototype._groupRowsBy;\n    /** @type {?} */\n    DatatableComponent.prototype._internalRows;\n    /** @type {?} */\n    DatatableComponent.prototype._internalColumns;\n    /** @type {?} */\n    DatatableComponent.prototype._columns;\n    /** @type {?} */\n    DatatableComponent.prototype._columnTemplates;\n    /** @type {?} */\n    DatatableComponent.prototype._subscriptions;\n    /**\n     * This will be used when displaying or selecting rows.\n     * when tracking/comparing them, we'll use the value of this fn,\n     *\n     * (`fn(x) === fn(y)` instead of `x === y`)\n     * @type {?}\n     */\n    DatatableComponent.prototype.rowIdentity;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.dimensionsHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.columnChangesService;\n    /**\n     * @type {?}\n     * @private\n     */\n    DatatableComponent.prototype.configuration;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableHeaderCellComponent {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this.cd = cd;\n        this.sort = new EventEmitter();\n        this.select = new EventEmitter();\n        this.columnContextmenu = new EventEmitter(false);\n        this.sortFn = this.onSort.bind(this);\n        this.selectFn = this.select.emit.bind(this.select);\n        this.cellContext = {\n            column: this.column,\n            sortDir: this.sortDir,\n            sortFn: this.sortFn,\n            allRowsSelected: this.allRowsSelected,\n            selectFn: this.selectFn\n        };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set allRowsSelected(value) {\n        this._allRowsSelected = value;\n        this.cellContext.allRowsSelected = value;\n    }\n    /**\n     * @return {?}\n     */\n    get allRowsSelected() {\n        return this._allRowsSelected;\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get column() {\n        return this._column;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set sorts(val) {\n        this._sorts = val;\n        this.sortDir = this.calcSortDir(val);\n        this.cellContext.sortDir = this.sortDir;\n        this.sortClass = this.calcSortClass(this.sortDir);\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get sorts() {\n        return this._sorts;\n    }\n    /**\n     * @return {?}\n     */\n    get columnCssClasses() {\n        /** @type {?} */\n        let cls = 'datatable-header-cell';\n        if (this.column.sortable)\n            cls += ' sortable';\n        if (this.column.resizeable)\n            cls += ' resizeable';\n        if (this.column.headerClass) {\n            if (typeof this.column.headerClass === 'string') {\n                cls += ' ' + this.column.headerClass;\n            }\n            else if (typeof this.column.headerClass === 'function') {\n                /** @type {?} */\n                const res = this.column.headerClass({\n                    column: this.column\n                });\n                if (typeof res === 'string') {\n                    cls += res;\n                }\n                else if (typeof res === 'object') {\n                    /** @type {?} */\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true)\n                            cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        /** @type {?} */\n        const sortDir = this.sortDir;\n        if (sortDir) {\n            cls += ` sort-active sort-${sortDir}`;\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get name() {\n        // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n        return this.column.headerTemplate === undefined ? this.column.name : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get width() {\n        return this.column.width;\n    }\n    /**\n     * @return {?}\n     */\n    get isCheckboxable() {\n        return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onContextmenu($event) {\n        this.columnContextmenu.emit({ event: $event, column: this.column });\n    }\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    calcSortDir(sorts) {\n        if (sorts && this.column) {\n            /** @type {?} */\n            const sort = sorts.find((/**\n             * @param {?} s\n             * @return {?}\n             */\n            (s) => {\n                return s.prop === this.column.prop;\n            }));\n            if (sort)\n                return sort.dir;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onSort() {\n        if (!this.column.sortable)\n            return;\n        /** @type {?} */\n        const newValue = nextSortDir(this.sortType, this.sortDir);\n        this.sort.emit({\n            column: this.column,\n            prevValue: this.sortDir,\n            newValue\n        });\n    }\n    /**\n     * @param {?} sortDir\n     * @return {?}\n     */\n    calcSortClass(sortDir) {\n        if (sortDir === SortDirection.asc) {\n            return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n        }\n        else if (sortDir === SortDirection.desc) {\n            return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n        }\n        else {\n            return `sort-btn`;\n        }\n    }\n}\nDataTableHeaderCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-header-cell',\n                template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-header-cell'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n/** @nocollapse */\nDataTableHeaderCellComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nDataTableHeaderCellComponent.propDecorators = {\n    sortType: [{ type: Input }],\n    sortAscendingIcon: [{ type: Input }],\n    sortDescendingIcon: [{ type: Input }],\n    isTarget: [{ type: Input }],\n    targetMarkerTemplate: [{ type: Input }],\n    targetMarkerContext: [{ type: Input }],\n    allRowsSelected: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    column: [{ type: Input }],\n    headerHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    sorts: [{ type: Input }],\n    sort: [{ type: Output }],\n    select: [{ type: Output }],\n    columnContextmenu: [{ type: Output }],\n    columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n    name: [{ type: HostBinding, args: ['attr.title',] }],\n    minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n    maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n    width: [{ type: HostBinding, args: ['style.width.px',] }],\n    onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortAscendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDescendingIcon;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.isTarget;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerTemplate;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.targetMarkerContext;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype._allRowsSelected;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.headerHeight;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sort;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.select;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.columnContextmenu;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortClass;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.selectFn;\n    /** @type {?} */\n    DataTableHeaderCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableHeaderCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableFooterComponent {\n    constructor() {\n        this.selectedCount = 0;\n        this.page = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get isVisible() {\n        return this.rowCount / this.pageSize > 1;\n    }\n    /**\n     * @return {?}\n     */\n    get curPage() {\n        return this.offset + 1;\n    }\n}\nDataTableFooterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-footer',\n                template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-footer'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTableFooterComponent.propDecorators = {\n    footerHeight: [{ type: Input }],\n    rowCount: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    offset: [{ type: Input }],\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    totalMessage: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    selectedCount: [{ type: Input }],\n    selectedMessage: [{ type: Input }],\n    page: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerHeight;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.rowCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pageSize;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.offset;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.totalMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.footerTemplate;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedCount;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.selectedMessage;\n    /** @type {?} */\n    DataTableFooterComponent.prototype.page;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTablePagerComponent {\n    constructor() {\n        this.change = new EventEmitter();\n        this._count = 0;\n        this._page = 1;\n        this._size = 0;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set size(val) {\n        this._size = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get size() {\n        return this._size;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set count(val) {\n        this._count = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get count() {\n        return this._count;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set page(val) {\n        this._page = val;\n        this.pages = this.calcPages();\n    }\n    /**\n     * @return {?}\n     */\n    get page() {\n        return this._page;\n    }\n    /**\n     * @return {?}\n     */\n    get totalPages() {\n        /** @type {?} */\n        const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n        return Math.max(count || 0, 1);\n    }\n    /**\n     * @return {?}\n     */\n    canPrevious() {\n        return this.page > 1;\n    }\n    /**\n     * @return {?}\n     */\n    canNext() {\n        return this.page < this.totalPages;\n    }\n    /**\n     * @return {?}\n     */\n    prevPage() {\n        this.selectPage(this.page - 1);\n    }\n    /**\n     * @return {?}\n     */\n    nextPage() {\n        this.selectPage(this.page + 1);\n    }\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    selectPage(page) {\n        if (page > 0 && page <= this.totalPages && page !== this.page) {\n            this.page = page;\n            this.change.emit({\n                page\n            });\n        }\n    }\n    /**\n     * @param {?=} page\n     * @return {?}\n     */\n    calcPages(page) {\n        /** @type {?} */\n        const pages = [];\n        /** @type {?} */\n        let startPage = 1;\n        /** @type {?} */\n        let endPage = this.totalPages;\n        /** @type {?} */\n        const maxSize = 5;\n        /** @type {?} */\n        const isMaxSized = maxSize < this.totalPages;\n        page = page || this.page;\n        if (isMaxSized) {\n            startPage = page - Math.floor(maxSize / 2);\n            endPage = page + Math.floor(maxSize / 2);\n            if (startPage < 1) {\n                startPage = 1;\n                endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n            }\n            else if (endPage > this.totalPages) {\n                startPage = Math.max(this.totalPages - maxSize + 1, 1);\n                endPage = this.totalPages;\n            }\n        }\n        for (let num = startPage; num <= endPage; num++) {\n            pages.push({\n                number: num,\n                text: (/** @type {?} */ (((/** @type {?} */ (num)))))\n            });\n        }\n        return pages;\n    }\n}\nDataTablePagerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-pager',\n                template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n                host: {\n                    class: 'datatable-pager'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTablePagerComponent.propDecorators = {\n    pagerLeftArrowIcon: [{ type: Input }],\n    pagerRightArrowIcon: [{ type: Input }],\n    pagerPreviousIcon: [{ type: Input }],\n    pagerNextIcon: [{ type: Input }],\n    size: [{ type: Input }],\n    count: [{ type: Input }],\n    page: [{ type: Input }],\n    change: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerLeftArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerRightArrowIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerPreviousIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pagerNextIcon;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.change;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._count;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._page;\n    /** @type {?} */\n    DataTablePagerComponent.prototype._size;\n    /** @type {?} */\n    DataTablePagerComponent.prototype.pages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ProgressBarComponent {\n}\nProgressBarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-progress',\n                template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Keys = {\n    up: 38,\n    down: 40,\n    return: 13,\n    escape: 27,\n    left: 37,\n    right: 39,\n};\nKeys[Keys.up] = 'up';\nKeys[Keys.down] = 'down';\nKeys[Keys.return] = 'return';\nKeys[Keys.escape] = 'escape';\nKeys[Keys.left] = 'left';\nKeys[Keys.right] = 'right';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyRowComponent {\n    /**\n     * @param {?} differs\n     * @param {?} scrollbarHelper\n     * @param {?} cd\n     * @param {?} element\n     */\n    constructor(differs, scrollbarHelper, cd, element) {\n        this.differs = differs;\n        this.scrollbarHelper = scrollbarHelper;\n        this.cd = cd;\n        this.treeStatus = 'collapsed';\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this._groupStyles = {\n            left: {},\n            center: {},\n            right: {}\n        };\n        this._element = element.nativeElement;\n        this._rowDiffer = differs.find({}).create();\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set columns(val) {\n        this._columns = val;\n        this.recalculateColumns(val);\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get columns() {\n        return this._columns;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set innerWidth(val) {\n        if (this._columns) {\n            /** @type {?} */\n            const colByPin = columnsByPin(this._columns);\n            this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        }\n        this._innerWidth = val;\n        this.recalculateColumns();\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get innerWidth() {\n        return this._innerWidth;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set offsetX(val) {\n        this._offsetX = val;\n        this.buildStylesByGroup();\n    }\n    /**\n     * @return {?}\n     */\n    get offsetX() {\n        return this._offsetX;\n    }\n    /**\n     * @return {?}\n     */\n    get cssClass() {\n        /** @type {?} */\n        let cls = 'datatable-body-row';\n        if (this.isSelected) {\n            cls += ' active';\n        }\n        if (this.rowIndex % 2 !== 0) {\n            cls += ' datatable-row-odd';\n        }\n        if (this.rowIndex % 2 === 0) {\n            cls += ' datatable-row-even';\n        }\n        if (this.rowClass) {\n            /** @type {?} */\n            const res = this.rowClass(this.row);\n            if (typeof res === 'string') {\n                cls += ` ${res}`;\n            }\n            else if (typeof res === 'object') {\n                /** @type {?} */\n                const keys = Object.keys(res);\n                for (const k of keys) {\n                    if (res[k] === true) {\n                        cls += ` ${k}`;\n                    }\n                }\n            }\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get columnsTotalWidths() {\n        return this._columnGroupWidths.total;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._rowDiffer.diff(this.row)) {\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @param {?} index\n     * @param {?} colGroup\n     * @return {?}\n     */\n    trackByGroups(index, colGroup) {\n        return colGroup.type;\n    }\n    /**\n     * @param {?} index\n     * @param {?} column\n     * @return {?}\n     */\n    columnTrackingFn(index, column) {\n        return column.$$id;\n    }\n    /**\n     * @return {?}\n     */\n    buildStylesByGroup() {\n        this._groupStyles.left = this.calcStylesByGroup('left');\n        this._groupStyles.center = this.calcStylesByGroup('center');\n        this._groupStyles.right = this.calcStylesByGroup('right');\n        this.cd.markForCheck();\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    calcStylesByGroup(group) {\n        /** @type {?} */\n        const widths = this._columnGroupWidths;\n        /** @type {?} */\n        const offsetX = this.offsetX;\n        /** @type {?} */\n        const styles = {\n            width: `${widths[group]}px`\n        };\n        if (group === 'left') {\n            translateXY(styles, offsetX, 0);\n        }\n        else if (group === 'right') {\n            /** @type {?} */\n            const bodyWidth = parseInt(this.innerWidth + '', 0);\n            /** @type {?} */\n            const totalDiff = widths.total - bodyWidth;\n            /** @type {?} */\n            const offsetDiff = totalDiff - offsetX;\n            /** @type {?} */\n            const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n            translateXY(styles, offset, 0);\n        }\n        return styles;\n    }\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @return {?}\n     */\n    onActivate(event, index) {\n        event.cellIndex = index;\n        event.rowElement = this._element;\n        this.activate.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isTargetRow = event.target === this._element;\n        /** @type {?} */\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetRow) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                rowElement: this._element\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseenter(event) {\n        this.activate.emit({\n            type: 'mouseenter',\n            event,\n            row: this.row,\n            rowElement: this._element\n        });\n    }\n    /**\n     * @param {?=} val\n     * @return {?}\n     */\n    recalculateColumns(val = this.columns) {\n        this._columns = val;\n        /** @type {?} */\n        const colsByPin = columnsByPin(this._columns);\n        this._columnsByPin = columnsByPinArr(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n    }\n    /**\n     * @return {?}\n     */\n    onTreeAction() {\n        this.treeAction.emit();\n    }\n}\nDataTableBodyRowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body-row',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nDataTableBodyRowComponent.ctorParameters = () => [\n    { type: KeyValueDiffers },\n    { type: ScrollbarHelper, decorators: [{ type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef }\n];\nDataTableBodyRowComponent.propDecorators = {\n    columns: [{ type: Input }],\n    innerWidth: [{ type: Input }],\n    expanded: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    row: [{ type: Input }],\n    group: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    rowIndex: [{ type: Input }],\n    displayCheck: [{ type: Input }],\n    treeStatus: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    cssClass: [{ type: HostBinding, args: ['class',] }],\n    rowHeight: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],\n    columnsTotalWidths: [{ type: HostBinding, args: ['style.width.px',] }],\n    activate: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }],\n    onMouseenter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.expanded;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowClass;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.row;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.group;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.isSelected;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowIndex;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeStatus;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._element;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnGroupWidths;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columnsByPin;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._offsetX;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._columns;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._innerWidth;\n    /** @type {?} */\n    DataTableBodyRowComponent.prototype._groupStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype._rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.scrollbarHelper;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyRowComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableRowWrapperComponent {\n    /**\n     * @param {?} cd\n     * @param {?} differs\n     */\n    constructor(cd, differs) {\n        this.cd = cd;\n        this.differs = differs;\n        this.rowContextmenu = new EventEmitter(false);\n        this.groupContext = {\n            group: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this.rowContext = {\n            row: this.row,\n            expanded: this.expanded,\n            rowIndex: this.rowIndex\n        };\n        this._expanded = false;\n        this.rowDiffer = differs.find({}).create();\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.rowContext.rowIndex = val;\n        this.groupContext.rowIndex = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set expanded(val) {\n        this._expanded = val;\n        this.groupContext.expanded = val;\n        this.rowContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.rowDiffer.diff(this.row)) {\n            this.rowContext.row = this.row;\n            this.groupContext.group = this.row;\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onContextmenu($event) {\n        this.rowContextmenu.emit({ event: $event, row: this.row });\n    }\n    /**\n     * @return {?}\n     */\n    getGroupHeaderStyle() {\n        /** @type {?} */\n        const styles = {};\n        styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n        styles['backface-visibility'] = 'hidden';\n        styles['width'] = this.innerWidth;\n        return styles;\n    }\n}\nDataTableRowWrapperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-row-wrapper',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || (!groupHeader || !groupHeader.template)\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n                host: {\n                    class: 'datatable-row-wrapper'\n                }\n            }] }\n];\n/** @nocollapse */\nDataTableRowWrapperComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: KeyValueDiffers }\n];\nDataTableRowWrapperComponent.propDecorators = {\n    innerWidth: [{ type: Input }],\n    rowDetail: [{ type: Input }],\n    groupHeader: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    detailRowHeight: [{ type: Input }],\n    row: [{ type: Input }],\n    groupedRows: [{ type: Input }],\n    rowContextmenu: [{ type: Output }],\n    rowIndex: [{ type: Input }],\n    expanded: [{ type: Input }],\n    onContextmenu: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowDetail;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupHeader;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.detailRowHeight;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.row;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupedRows;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContextmenu;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.groupContext;\n    /** @type {?} */\n    DataTableRowWrapperComponent.prototype.rowContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.rowDiffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.cd;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableRowWrapperComponent.prototype.differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DataTableBodyCellComponent {\n    /**\n     * @param {?} element\n     * @param {?} cd\n     */\n    constructor(element, cd) {\n        this.cd = cd;\n        this.activate = new EventEmitter();\n        this.treeAction = new EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.cellContext = {\n            onCheckboxChangeFn: this.onCheckboxChangeFn,\n            activateFn: this.activateFn,\n            row: this.row,\n            group: this.group,\n            value: this.value,\n            column: this.column,\n            rowHeight: this.rowHeight,\n            isSelected: this.isSelected,\n            rowIndex: this.rowIndex,\n            treeStatus: this.treeStatus,\n            onTreeAction: this.onTreeAction.bind(this)\n        };\n        this._element = element.nativeElement;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    set group(group) {\n        this._group = group;\n        this.cellContext.group = group;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get group() {\n        return this._group;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowHeight(val) {\n        this._rowHeight = val;\n        this.cellContext.rowHeight = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set isSelected(val) {\n        this._isSelected = val;\n        this.cellContext.isSelected = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get isSelected() {\n        return this._isSelected;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set expanded(val) {\n        this._expanded = val;\n        this.cellContext.expanded = val;\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get expanded() {\n        return this._expanded;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set rowIndex(val) {\n        this._rowIndex = val;\n        this.cellContext.rowIndex = val;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n    set column(column) {\n        this._column = column;\n        this.cellContext.column = column;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get column() {\n        return this._column;\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    set row(row) {\n        this._row = row;\n        this.cellContext.row = row;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get row() {\n        return this._row;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set sorts(val) {\n        this._sorts = val;\n        this.calcSortDir = this.calcSortDir(val);\n    }\n    /**\n     * @return {?}\n     */\n    get sorts() {\n        return this._sorts;\n    }\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n    set treeStatus(status) {\n        if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n            this._treeStatus = 'collapsed';\n        }\n        else {\n            this._treeStatus = status;\n        }\n        this.cellContext.treeStatus = this._treeStatus;\n        this.checkValueUpdates();\n        this.cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    get treeStatus() {\n        return this._treeStatus;\n    }\n    /**\n     * @return {?}\n     */\n    get columnCssClasses() {\n        /** @type {?} */\n        let cls = 'datatable-body-cell';\n        if (this.column.cellClass) {\n            if (typeof this.column.cellClass === 'string') {\n                cls += ' ' + this.column.cellClass;\n            }\n            else if (typeof this.column.cellClass === 'function') {\n                /** @type {?} */\n                const res = this.column.cellClass({\n                    row: this.row,\n                    group: this.group,\n                    column: this.column,\n                    value: this.value,\n                    rowHeight: this.rowHeight\n                });\n                if (typeof res === 'string') {\n                    cls += res;\n                }\n                else if (typeof res === 'object') {\n                    /** @type {?} */\n                    const keys = Object.keys(res);\n                    for (const k of keys) {\n                        if (res[k] === true) {\n                            cls += ` ${k}`;\n                        }\n                    }\n                }\n            }\n        }\n        if (!this.sortDir) {\n            cls += ' sort-active';\n        }\n        if (this.isFocused) {\n            cls += ' active';\n        }\n        if (this.sortDir === SortDirection.asc) {\n            cls += ' sort-asc';\n        }\n        if (this.sortDir === SortDirection.desc) {\n            cls += ' sort-desc';\n        }\n        return cls;\n    }\n    /**\n     * @return {?}\n     */\n    get width() {\n        return this.column.width;\n    }\n    /**\n     * @return {?}\n     */\n    get minWidth() {\n        return this.column.minWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get maxWidth() {\n        return this.column.maxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    get height() {\n        /** @type {?} */\n        const height = this.rowHeight;\n        if (isNaN(height)) {\n            return height;\n        }\n        return height + 'px';\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        this.checkValueUpdates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkValueUpdates() {\n        /** @type {?} */\n        let value = '';\n        if (!this.row || !this.column) {\n            value = '';\n        }\n        else {\n            /** @type {?} */\n            const val = this.column.$$valueGetter(this.row, this.column.prop);\n            /** @type {?} */\n            const userPipe = this.column.pipe;\n            if (userPipe) {\n                value = userPipe.transform(val);\n            }\n            else if (value !== undefined) {\n                value = val;\n            }\n        }\n        if (this.value !== value) {\n            this.value = value;\n            this.cellContext.value = value;\n            this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n            this.cd.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n        this.isFocused = true;\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() {\n        this.isFocused = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        this.activate.emit({\n            type: 'click',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDblClick(event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isTargetCell = event.target === this._element;\n        /** @type {?} */\n        const isAction = keyCode === Keys.return ||\n            keyCode === Keys.down ||\n            keyCode === Keys.up ||\n            keyCode === Keys.left ||\n            keyCode === Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event,\n                row: this.row,\n                group: this.group,\n                rowHeight: this.rowHeight,\n                column: this.column,\n                value: this.value,\n                cellElement: this._element\n            });\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onCheckboxChange(event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event,\n            row: this.row,\n            group: this.group,\n            rowHeight: this.rowHeight,\n            column: this.column,\n            value: this.value,\n            cellElement: this._element,\n            treeStatus: 'collapsed'\n        });\n    }\n    /**\n     * @param {?} sorts\n     * @return {?}\n     */\n    calcSortDir(sorts) {\n        if (!sorts) {\n            return;\n        }\n        /** @type {?} */\n        const sort = sorts.find((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => {\n            return s.prop === this.column.prop;\n        }));\n        if (sort) {\n            return sort.dir;\n        }\n    }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    stripHtml(html) {\n        if (!html.replace) {\n            return html;\n        }\n        return html.replace(/<\\/?[^>]+(>|$)/g, '');\n    }\n    /**\n     * @return {?}\n     */\n    onTreeAction() {\n        this.treeAction.emit(this.row);\n    }\n    /**\n     * @param {?} column\n     * @param {?} row\n     * @return {?}\n     */\n    calcLeftMargin(column, row) {\n        /** @type {?} */\n        const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n        return column.isTreeColumn ? row.level * levelIndent : 0;\n    }\n}\nDataTableBodyCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-body-cell',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nDataTableBodyCellComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nDataTableBodyCellComponent.propDecorators = {\n    displayCheck: [{ type: Input }],\n    group: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    expanded: [{ type: Input }],\n    rowIndex: [{ type: Input }],\n    column: [{ type: Input }],\n    row: [{ type: Input }],\n    sorts: [{ type: Input }],\n    treeStatus: [{ type: Input }],\n    activate: [{ type: Output }],\n    treeAction: [{ type: Output }],\n    cellTemplate: [{ type: ViewChild, args: ['cellTemplate', { read: ViewContainerRef, static: true },] }],\n    columnCssClasses: [{ type: HostBinding, args: ['class',] }],\n    width: [{ type: HostBinding, args: ['style.width.px',] }],\n    minWidth: [{ type: HostBinding, args: ['style.minWidth.px',] }],\n    maxWidth: [{ type: HostBinding, args: ['style.maxWidth.px',] }],\n    height: [{ type: HostBinding, args: ['style.height',] }],\n    onFocus: [{ type: HostListener, args: ['focus',] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n    onDblClick: [{ type: HostListener, args: ['dblclick', ['$event'],] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.displayCheck;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.treeAction;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellTemplate;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sanitizedValue;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.value;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.sortDir;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.isFocused;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.onCheckboxChangeFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.activateFn;\n    /** @type {?} */\n    DataTableBodyCellComponent.prototype.cellContext;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._isSelected;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._sorts;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._column;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._row;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._group;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._rowIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype._treeStatus;\n    /**\n     * @type {?}\n     * @private\n     */\n    DataTableBodyCellComponent.prototype.cd;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selected\n * @param {?} row\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRows(selected, row, comparefn) {\n    /** @type {?} */\n    const selectedIndex = comparefn(row, selected);\n    if (selectedIndex > -1) {\n        selected.splice(selectedIndex, 1);\n    }\n    else {\n        selected.push(row);\n    }\n    return selected;\n}\n/**\n * @param {?} selected\n * @param {?} rows\n * @param {?} index\n * @param {?} prevIndex\n * @param {?} comparefn\n * @return {?}\n */\nfunction selectRowsBetween(selected, rows, index, prevIndex, comparefn) {\n    /** @type {?} */\n    const reverse = index < prevIndex;\n    for (let i = 0; i < rows.length; i++) {\n        /** @type {?} */\n        const row = rows[i];\n        /** @type {?} */\n        const greater = i >= prevIndex && i <= index;\n        /** @type {?} */\n        const lesser = i <= prevIndex && i >= index;\n        /** @type {?} */\n        let range = { start: 0, end: 0 };\n        if (reverse) {\n            range = {\n                start: index,\n                end: prevIndex\n            };\n        }\n        else {\n            range = {\n                start: prevIndex,\n                end: index + 1\n            };\n        }\n        if ((reverse && lesser) || (!reverse && greater)) {\n            // if in the positive range to be added to `selected`, and\n            // not already in the selected array, add it\n            if (i >= range.start && i <= range.end) {\n                selected.push(row);\n            }\n        }\n    }\n    return selected;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Model() { }\nif (false) {\n    /** @type {?} */\n    Model.prototype.type;\n    /** @type {?} */\n    Model.prototype.event;\n    /** @type {?} */\n    Model.prototype.row;\n    /** @type {?} */\n    Model.prototype.rowElement;\n    /** @type {?} */\n    Model.prototype.cellElement;\n    /** @type {?} */\n    Model.prototype.cellIndex;\n}\nclass DataTableSelectionComponent {\n    constructor() {\n        this.activate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} event\n     * @param {?} index\n     * @param {?} row\n     * @return {?}\n     */\n    selectRow(event, index, row) {\n        if (!this.selectEnabled)\n            return;\n        /** @type {?} */\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        const multi = this.selectionType === SelectionType.multi;\n        /** @type {?} */\n        const multiClick = this.selectionType === SelectionType.multiClick;\n        /** @type {?} */\n        let selected = [];\n        if (multi || chkbox || multiClick) {\n            if (event.shiftKey) {\n                selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n            }\n            else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n                selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n            }\n            else {\n                selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n            }\n        }\n        else {\n            selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n        }\n        if (typeof this.selectCheck === 'function') {\n            selected = selected.filter(this.selectCheck.bind(this));\n        }\n        this.selected.splice(0, this.selected.length);\n        this.selected.push(...selected);\n        this.prevIndex = index;\n        this.select.emit({\n            selected\n        });\n    }\n    /**\n     * @param {?} model\n     * @param {?} index\n     * @return {?}\n     */\n    onActivate(model, index) {\n        const { type, event, row } = model;\n        /** @type {?} */\n        const chkbox = this.selectionType === SelectionType.checkbox;\n        /** @type {?} */\n        const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n        if (select) {\n            this.selectRow(event, index, row);\n        }\n        else if (type === 'keydown') {\n            if (((/** @type {?} */ (event))).keyCode === Keys.return) {\n                this.selectRow(event, index, row);\n            }\n            else {\n                this.onKeyboardFocus(model);\n            }\n        }\n        this.activate.emit(model);\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    onKeyboardFocus(model) {\n        const { keyCode } = (/** @type {?} */ (model.event));\n        /** @type {?} */\n        const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n        if (shouldFocus) {\n            /** @type {?} */\n            const isCellSelection = this.selectionType === SelectionType.cell;\n            if (!model.cellElement || !isCellSelection) {\n                this.focusRow(model.rowElement, keyCode);\n            }\n            else if (isCellSelection) {\n                this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n            }\n        }\n    }\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    focusRow(rowElement, keyCode) {\n        /** @type {?} */\n        const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n        if (nextRowElement)\n            nextRowElement.focus();\n    }\n    /**\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @return {?}\n     */\n    getPrevNextRow(rowElement, keyCode) {\n        /** @type {?} */\n        const parentElement = rowElement.parentElement;\n        if (parentElement) {\n            /** @type {?} */\n            let focusElement;\n            if (keyCode === Keys.up) {\n                focusElement = parentElement.previousElementSibling;\n            }\n            else if (keyCode === Keys.down) {\n                focusElement = parentElement.nextElementSibling;\n            }\n            if (focusElement && focusElement.children.length) {\n                return focusElement.children[0];\n            }\n        }\n    }\n    /**\n     * @param {?} cellElement\n     * @param {?} rowElement\n     * @param {?} keyCode\n     * @param {?} cellIndex\n     * @return {?}\n     */\n    focusCell(cellElement, rowElement, keyCode, cellIndex) {\n        /** @type {?} */\n        let nextCellElement;\n        if (keyCode === Keys.left) {\n            nextCellElement = cellElement.previousElementSibling;\n        }\n        else if (keyCode === Keys.right) {\n            nextCellElement = cellElement.nextElementSibling;\n        }\n        else if (keyCode === Keys.up || keyCode === Keys.down) {\n            /** @type {?} */\n            const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n            if (nextRowElement) {\n                /** @type {?} */\n                const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n                if (children.length)\n                    nextCellElement = children[cellIndex];\n            }\n        }\n        if (nextCellElement)\n            nextCellElement.focus();\n    }\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    getRowSelected(row) {\n        return this.getRowSelectedIdx(row, this.selected) > -1;\n    }\n    /**\n     * @param {?} row\n     * @param {?} selected\n     * @return {?}\n     */\n    getRowSelectedIdx(row, selected) {\n        if (!selected || !selected.length)\n            return -1;\n        /** @type {?} */\n        const rowId = this.rowIdentity(row);\n        return selected.findIndex((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => {\n            /** @type {?} */\n            const id = this.rowIdentity(r);\n            return id === rowId;\n        }));\n    }\n}\nDataTableSelectionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-selection',\n                template: `\n    <ng-content></ng-content>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }] }\n];\nDataTableSelectionComponent.propDecorators = {\n    rows: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectEnabled: [{ type: Input }],\n    selectionType: [{ type: Input }],\n    rowIdentity: [{ type: Input }],\n    selectCheck: [{ type: Input }],\n    activate: [{ type: Output }],\n    select: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selected;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectEnabled;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectionType;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.rowIdentity;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.selectCheck;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.activate;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.select;\n    /** @type {?} */\n    DataTableSelectionComponent.prototype.prevIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ISummaryColumn() { }\nif (false) {\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryFunc;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.summaryTemplate;\n    /** @type {?} */\n    ISummaryColumn.prototype.prop;\n    /** @type {?|undefined} */\n    ISummaryColumn.prototype.pipe;\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction defaultSumFunc(cells) {\n    /** @type {?} */\n    const cellsWithValues = cells.filter((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    cell => !!cell));\n    if (!cellsWithValues.length) {\n        return null;\n    }\n    if (cellsWithValues.some((/**\n     * @param {?} cell\n     * @return {?}\n     */\n    cell => typeof cell !== 'number'))) {\n        return null;\n    }\n    return cellsWithValues.reduce((/**\n     * @param {?} res\n     * @param {?} cell\n     * @return {?}\n     */\n    (res, cell) => res + cell));\n}\n/**\n * @param {?} cells\n * @return {?}\n */\nfunction noopSumFunc(cells) {\n    return null;\n}\nclass DataTableSummaryRowComponent {\n    constructor() {\n        this.summaryRow = {};\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (!this.columns || !this.rows) {\n            return;\n        }\n        this.updateInternalColumns();\n        this.updateValues();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateInternalColumns() {\n        this._internalColumns = this.columns.map((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => (Object.assign({}, col, { cellTemplate: col.summaryTemplate }))));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateValues() {\n        this.summaryRow = {};\n        this.columns\n            .filter((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => !col.summaryTemplate))\n            .forEach((/**\n         * @param {?} col\n         * @return {?}\n         */\n        col => {\n            /** @type {?} */\n            const cellsFromSingleColumn = this.rows.map((/**\n             * @param {?} row\n             * @return {?}\n             */\n            row => row[col.prop]));\n            /** @type {?} */\n            const sumFunc = this.getSummaryFunction(col);\n            this.summaryRow[col.prop] = col.pipe\n                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n                : sumFunc(cellsFromSingleColumn);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} column\n     * @return {?}\n     */\n    getSummaryFunction(column) {\n        if (column.summaryFunc === undefined) {\n            return defaultSumFunc;\n        }\n        else if (column.summaryFunc === null) {\n            return noopSumFunc;\n        }\n        else {\n            return column.summaryFunc;\n        }\n    }\n}\nDataTableSummaryRowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'datatable-summary-row',\n                template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n                host: {\n                    class: 'datatable-summary-row'\n                }\n            }] }\n];\nDataTableSummaryRowComponent.propDecorators = {\n    rows: [{ type: Input }],\n    columns: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    offsetX: [{ type: Input }],\n    innerWidth: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rows;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.columns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.rowHeight;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.offsetX;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.innerWidth;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype._internalColumns;\n    /** @type {?} */\n    DataTableSummaryRowComponent.prototype.summaryRow;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgxDatatableModule {\n    /**\n     * Configure global configuration via INgxDatatableConfig\n     * @param {?} configuration\n     * @return {?}\n     */\n    static forRoot(configuration) {\n        return {\n            ngModule: NgxDatatableModule,\n            providers: [{ provide: 'configuration', useValue: configuration }]\n        };\n    }\n}\nNgxDatatableModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n                declarations: [\n                    DataTableFooterTemplateDirective,\n                    VisibilityDirective,\n                    DraggableDirective,\n                    ResizeableDirective,\n                    OrderableDirective,\n                    LongPressDirective,\n                    ScrollerComponent,\n                    DatatableComponent,\n                    DataTableColumnDirective,\n                    DataTableHeaderComponent,\n                    DataTableHeaderCellComponent,\n                    DataTableBodyComponent,\n                    DataTableFooterComponent,\n                    DataTablePagerComponent,\n                    ProgressBarComponent,\n                    DataTableBodyRowComponent,\n                    DataTableRowWrapperComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableBodyCellComponent,\n                    DataTableSelectionComponent,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DatatableFooterDirective,\n                    DatatableGroupHeaderTemplateDirective,\n                    DataTableSummaryRowComponent\n                ],\n                exports: [\n                    DatatableComponent,\n                    DatatableRowDetailDirective,\n                    DatatableGroupHeaderDirective,\n                    DatatableRowDetailTemplateDirective,\n                    DataTableColumnDirective,\n                    DataTableColumnHeaderDirective,\n                    DataTableColumnCellDirective,\n                    DataTableColumnCellTreeToggle,\n                    DataTableFooterTemplateDirective,\n                    DatatableFooterDirective,\n                    DataTablePagerComponent,\n                    DatatableGroupHeaderTemplateDirective\n                ]\n            },] }\n];\n/**\n * Interface definition for INgxDatatableConfig global configuration\n * @record\n */\nfunction INgxDatatableConfig() { }\nif (false) {\n    /** @type {?} */\n    INgxDatatableConfig.prototype.messages;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst ClickType = {\n    single: 'single',\n    double: 'double',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column Type\n * @record\n */\nfunction TableColumn() { }\nif (false) {\n    /**\n     * Internal unique id\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$id;\n    /**\n     * Internal for column width distributions\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$oldWidth;\n    /**\n     * Internal for setColumnDefaults\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.$$valueGetter;\n    /**\n     * Determines if column is checkbox\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.checkboxable;\n    /**\n     * Determines if the column is frozen to the left\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenLeft;\n    /**\n     * Determines if the column is frozen to the right\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.frozenRight;\n    /**\n     * The grow factor relative to other columns. Same as the flex-grow\n     * API from http =//www.w3.org/TR/css3-flexbox/. Basically;\n     * take any available extra width and distribute it proportionally\n     * according to all columns' flexGrow values.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.flexGrow;\n    /**\n     * Min width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.minWidth;\n    /**\n     * Max width of the column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.maxWidth;\n    /**\n     * The default width of the column, in pixels\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.width;\n    /**\n     * Can the column be resized\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.resizeable;\n    /**\n     * Custom sort comparator\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.comparator;\n    /**\n     * Custom pipe transforms\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.pipe;\n    /**\n     * Can the column be sorted\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.sortable;\n    /**\n     * Can the column be re-arranged by dragging\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.draggable;\n    /**\n     * Whether the column can automatically resize to fill space in the table.\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.canAutoResize;\n    /**\n     * Column name or label\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.name;\n    /**\n     * Property to bind to the row. Example:\n     *\n     * `someField` or `some.field.nested`, 0 (numeric)\n     *\n     * If left blank, will use the name as camel case conversion\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.prop;\n    /**\n     * Cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellTemplate;\n    /**\n     * Header template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerTemplate;\n    /**\n     * Tree toggle template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeToggleTemplate;\n    /**\n     * CSS Classes for the cell\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.cellClass;\n    /**\n     * CSS classes for the header\n     *\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerClass;\n    /**\n     * Header checkbox enabled\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.headerCheckboxable;\n    /**\n     * Is tree displayed on this column\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.isTreeColumn;\n    /**\n     * Width of the tree level indent\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.treeLevelIndent;\n    /**\n     * Summary function\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryFunc;\n    /**\n     * Summary cell template ref\n     *\n     * \\@memberOf TableColumn\n     * @type {?|undefined}\n     */\n    TableColumn.prototype.summaryTemplate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SortPropDir() { }\nif (false) {\n    /** @type {?} */\n    SortPropDir.prototype.dir;\n    /** @type {?} */\n    SortPropDir.prototype.prop;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nif (typeof document !== 'undefined' && !document.elementsFromPoint) {\n    document.elementsFromPoint = elementsFromPoint;\n}\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction elementsFromPoint(x, y) {\n    /** @type {?} */\n    const elements = [];\n    /** @type {?} */\n    const previousPointerEvents = [];\n    /** @type {?} */\n    let current;\n    // TODO: window.getComputedStyle should be used with inferred type (Element)\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let d;\n    //if (document === undefined) return elements;\n    // get all elements via elementFromPoint, and remove them from hit-testing in order\n    while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n        // push the element and its current style\n        elements.push(current);\n        previousPointerEvents.push({\n            value: current.style.getPropertyValue('pointer-events'),\n            priority: current.style.getPropertyPriority('pointer-events')\n        });\n        // add \"pointer-events: none\", to get to the underlying element\n        current.style.setProperty('pointer-events', 'none', 'important');\n    }\n    // restore the previous pointer-events values\n    for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]);) {\n        elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n    }\n    // return our results\n    return elements;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ClickType, ColumnChangesService, ColumnMode, ContextmenuType, DataTableBodyCellComponent, DataTableBodyComponent, DataTableBodyRowComponent, DataTableColumnCellDirective, DataTableColumnCellTreeToggle, DataTableColumnDirective, DataTableColumnHeaderDirective, DataTableFooterComponent, DataTableFooterTemplateDirective, DataTableHeaderCellComponent, DataTableHeaderComponent, DataTablePagerComponent, DataTableRowWrapperComponent, DataTableSelectionComponent, DataTableSummaryRowComponent, DatatableComponent, DatatableFooterDirective, DatatableGroupHeaderDirective, DatatableGroupHeaderTemplateDirective, DatatableRowDetailDirective, DatatableRowDetailTemplateDirective, DimensionsHelper, DraggableDirective, Keys, LongPressDirective, NgxDatatableModule, OrderableDirective, ProgressBarComponent, ResizeableDirective, RowHeightCache, ScrollbarHelper, ScrollerComponent, SelectionType, SortDirection, SortType, VisibilityDirective, adjustColumnWidths, camelCase, columnGroupWidths, columnTotalWidth, columnsByPin, columnsByPinArr, columnsTotalWidth, deCamelCase, deepValueGetter, elementsFromPoint, emptyStringGetter, forceFillColumnWidths, getTotalFlexGrow, getVendorPrefixedName, getterForProp, groupRowsByParents, id, isNullOrUndefined, nextSortDir, numericIndexGetter, optionalGetterForProp, orderByComparator, selectRows, selectRowsBetween, setColumnDefaults, shallowValueGetter, sortRows, throttle, throttleable, translateTemplates, translateXY };\n//# sourceMappingURL=swimlane-ngx-datatable.js.map\n","export default \"<div class=\\\"wrapper\\\">\\n  <app-sidebar></app-sidebar>\\n  <div class=\\\"main-panel\\\">\\n    <app-navbar></app-navbar>\\n    <div class=\\\"main-panel\\\">\\n      <div class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n    <!--<app-footer></app-footer>-->\\n  </div>\\n  <!--<div class=\\\"fixed-plugin\\\">\\n    <div class=\\\"dropdown show-dropdown\\\">\\n      <a href=\\\"#\\\" data-toggle=\\\"dropdown\\\">\\n        <i class=\\\"fa fa-cog fa-2x\\\"> </i>\\n      </a>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li class=\\\"header-title\\\"> Sidebar Background</li>\\n        <li class=\\\"adjustments-line\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"switch-trigger background-color\\\">\\n            <div class=\\\"badge-colors text-center\\\">\\n              <span class=\\\"badge filter badge-primary active\\\" data-color=\\\"primary\\\"></span>\\n              <span class=\\\"badge filter badge-info\\\" data-color=\\\"blue\\\"></span>\\n              <span class=\\\"badge filter badge-success\\\" data-color=\\\"green\\\"></span>\\n            </div>\\n            <div class=\\\"clearfix\\\"></div>\\n          </a>\\n        </li>\\n        <li class=\\\"adjustments-line text-center color-change\\\">\\n          <span class=\\\"color-label\\\">LIGHT MODE</span>\\n          <span class=\\\"badge light-badge mr-2\\\"></span>\\n          <span class=\\\"badge dark-badge ml-2\\\"></span>\\n          <span class=\\\"color-label\\\">DARK MODE</span>\\n        </li>\\n        <li class=\\\"button-container\\\">\\n          <a href=\\\"https://www.creative-tim.com/product/black-dashboard\\\" target=\\\"_blank\\\"\\n            class=\\\"btn btn-primary btn-block btn-round\\\">Download Now</a>\\n          <a href=\\\"https://demos.creative-tim.com/black-dashboard/docs/1.0/getting-started/introduction.html\\\"\\n            target=\\\"_blank\\\" class=\\\"btn btn-default btn-block btn-round\\\">\\n            Documentation\\n          </a>\\n        </li>\\n        <li class=\\\"header-title\\\">Thank you for 95 shares!</li>\\n        <li class=\\\"button-container text-center\\\">\\n          <button id=\\\"twitter\\\" class=\\\"btn btn-round btn-info\\\"><i class=\\\"fab fa-twitter\\\"></i> &middot; 45</button>\\n          <button id=\\\"facebook\\\" class=\\\"btn btn-round btn-info\\\"><i class=\\\"fab fa-facebook-f\\\"></i> &middot; 50</button>\\n          <br>\\n          <br>\\n          <a class=\\\"github-button\\\" href=\\\"https://github.com/creativetimofficial/black-dashboard\\\"\\n            data-icon=\\\"octicon-star\\\" data-size=\\\"large\\\" data-show-count=\\\"true\\\"\\n            aria-label=\\\"Star ntkme/github-buttons on GitHub\\\">Star</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>-->\\n</div>\"","export default \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <ul class=\\\"nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            Creative Tim\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            About Us\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0)\\\" class=\\\"nav-link\\\">\\n            Blog\\n          </a>\\n        </li>\\n      </ul>\\n      <div class=\\\"copyright\\\">\\n        ©\\n        <script>\\n          document.write(new Date().getFullYear())\\n        </script>2019 construido por \\n        <a href=\\\"javascript:void(0)\\\" target=\\\"_blank\\\">Ventun</a>\\n      </div>\\n    </div>\\n  </footer>\"","export default \"<nav class=\\\"navbar sticky-top navbar-expand-lg\\\" data=\\\"blue\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-wrapper\\\">\\r\\n            <div class=\\\"navbar-toggle d-inline\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\r\\n                    <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\r\\n                    <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\r\\n                    <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <a class=\\\"navbar-brand\\\" style=\\\"top: 0;\\\">\\r\\n                <img src=\\\"/assets/img/ventun.png\\\">\\r\\n            </a>\\r\\n        </div>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navigation\\\">\\r\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                <li class=\\\"input-group\\\">\\r\\n                    <span style=\\\"display: inline;\\\">Equipo Actual: <h2 style=\\\"display: inline; padding: 0!important; margin: 10px 0 0 0!important; top: 20px!important;\\\">{{equipoActual}}</h2></span>\\r\\n                </li>\\r\\n                <li class=\\\"search-bar input-group\\\">\\r\\n                    <button class=\\\"btn btn-link\\\" id=\\\"search-button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchModal\\\"><i\\r\\n                            class=\\\"tim-icons icon-zoom-split\\\"></i>\\r\\n                        <span class=\\\"d-lg-none d-md-block\\\">Empresas</span>\\r\\n                    </button>\\r\\n                </li>\\r\\n                <!--<li class=\\\"dropdown nav-item\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"dropdown-toggle nav-link\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <div class=\\\"notification d-none d-lg-block d-xl-block\\\"></div>\\r\\n                        <i class=\\\"tim-icons icon-sound-wave\\\"></i>\\r\\n                        <p class=\\\"d-lg-none\\\">\\r\\n                            Notifications\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-menu-right dropdown-navbar\\\">\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"#\\\" class=\\\"nav-item dropdown-item\\\">Mike John responded to your\\r\\n                                email</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">You have 5 more\\r\\n                                tasks</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Your friend\\r\\n                                Michael is in town</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Another\\r\\n                                notification</a></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\">Another one</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </li>-->\\r\\n                <li class=\\\"dropdown nav-item\\\">\\r\\n                    <a class=\\\"dropdown-toggle nav-link\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <div class=\\\"photo\\\">\\r\\n                            <img src=\\\"{{urlGlobal}}{{perfil}}\\\">\\r\\n                        </div>\\r\\n                        <b class=\\\"caret d-none d-lg-block d-xl-block\\\" style=\\\"left: 50px!important;\\\"></b>\\r\\n                        <span>&nbsp;&nbsp;&nbsp;&nbsp;{{userName}}</span>\\r\\n                        <p class=\\\"d-lg-none\\\" (click)=\\\"cerrarSesion();\\\" routerLink=\\\"/sign/login\\\" routerLinkActive=\\\"active\\\">\\r\\n                            Cerrar Sessión\\r\\n                        </p>\\r\\n                    </a>\\r\\n                    <ul class=\\\"dropdown-menu dropdown-navbar\\\">\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"nav-item dropdown-item\\\"\\r\\n                                routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\">Perfil</a></li>\\r\\n                        <li class=\\\"dropdown-divider\\\"></li>\\r\\n                        <li class=\\\"nav-link\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"cerrarSesion();\\\"\\r\\n                                class=\\\"nav-item dropdown-item\\\" routerLink=\\\"/sign/login\\\" routerLinkActive=\\\"active\\\">Cerrar\\r\\n                                Sessión</a></li>\\r\\n                    </ul>\\r\\n                </li>\\r\\n                <li class=\\\"separator d-lg-none\\\"></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-toast></app-toast>\\r\\n</nav>\\r\\n<div class=\\\"modal modal-search fade\\\" id=\\\"searchModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"searchModal\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                        <label class=\\\"input-group-text\\\" style=\\\"background-color: var(--primary);width: 80px;\\\" for=\\\"listaEquipos\\\">Equipo</label>\\r\\n                    </div>\\r\\n                    <select class=\\\"custom-select\\\" id=\\\"listaEquipos\\\" name=\\\"listaEquipos\\\" #listaEquipos=\\\"ngModel\\\"  (ngModelChange)=\\\"updateEmp($event, true)\\\" [(ngModel)]=\\\"name\\\">\\r\\n                        <option [ngValue]=\\\"undefined\\\" selected>Elige un Equipo...</option>\\r\\n                        <option *ngFor=\\\"let equipo of lista\\\" [(ngValue)]=\\\"equipo.id\\\">{{equipo.valor}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"sidebar\\\">\\n    <div class=\\\"logo\\\">\\n      <a class=\\\"simple-text logo-mini\\\">\\n        <div class=\\\"logo-img\\\" (click)=\\\"minimizeSidebar()\\\">\\n            <img src=\\\"./assets/img/logos/logo-ventun.png\\\" />\\n        </div>\\n      </a>\\n      <a href=\\\"http://ventun.com/\\\" class=\\\"simple-text logo-normal\\\">\\n        MLM\\n      </a>\\n    </div>\\n  \\n    <div class=\\\"sidebar-wrapper\\\">\\n      <ul class=\\\"nav\\\">\\n        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuitem of menuItems\\\">\\n          <!--If is a single link-->\\n          <a [routerLink]=\\\"[menuitem.path]\\\" *ngIf=\\\"menuitem.type === 'link'\\\">\\n            <i class=\\\"tim-icons {{ menuitem.icontype }}\\\"></i>\\n            <p>{{ menuitem.title }}</p>\\n          </a>\\n          <!--If it have a submenu-->\\n          <a\\n            data-toggle=\\\"collapse\\\"\\n            href=\\\"#{{ menuitem.collapse }}\\\"\\n            *ngIf=\\\"menuitem.type === 'sub'\\\"\\n            (click)=\\\"\\n              myFunc($event, menuitem);\\n                (menuitem.isCollapsed = !menuitem.isCollapsed)\\n            \\\"\\n            [attr.aria-expanded]=\\\"!menuitem.isCollapsed\\\"\\n          >\\n            <i class=\\\"tim-icons {{ menuitem.icontype }}\\\"></i>\\n            <p>{{ menuitem.title }}<b class=\\\"caret\\\"></b></p>\\n          </a>\\n  \\n          <!--Display the submenu items-->\\n          <div\\n            id=\\\"{{ menuitem.collapse }}\\\"\\n            class=\\\"collapse\\\"\\n            *ngIf=\\\"menuitem.type === 'sub'\\\"\\n          >\\n            <ul class=\\\"nav\\\">\\n              <li\\n                routerLinkActive=\\\"active\\\"\\n                *ngFor=\\\"let childitem of menuitem.children\\\"\\n              >\\n                <a [routerLink]=\\\"[menuitem.path, childitem.path]\\\">\\n                  <span class=\\\"sidebar-mini-icon\\\">{{ childitem.ab }}</span>\\n                  <span class=\\\"sidebar-normal\\\">{{ childitem.title }}</span>\\n                </a>\\n              </li>\\n            </ul>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n  \"","export default \"<div *ngIf=\\\"shouldShowErrors()\\\" class=\\\"roedor\\\">\\n    <p class=\\\"globito\\\" *ngFor=\\\"let error of listOfErrors()\\\">{{error}}</p>\\n</div>\"","export default \"<div class=\\\"modal modal-search fade\\\" id=\\\"searchModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"searchModal\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <label class=\\\"input-group-text\\\" style=\\\"background-color: var(--primary);width: 80px;\\\" for=\\\"listaEquipos\\\">Equipo</label>\\n                    </div>\\n                    <select class=\\\"custom-select\\\" id=\\\"listaEquipos\\\" name=\\\"listaEquipos\\\" #listaEquipos=\\\"ngModel\\\"  (ngModelChange)=\\\"updateEmp($event)\\\" [(ngModel)]=\\\"name\\\">\\n                        <option [ngValue]=\\\"undefined\\\" selected>Elige un Equipo...</option>\\n                        <option *ngFor=\\\"let equipo of lista\\\" [(ngValue)]=\\\"equipo.id\\\">{{equipo.valor}}</option>\\n                    </select>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <i class=\\\"tim-icons icon-simple-remove\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container-fluid\\\">\\n    <h2>Mis Asociados</h2>\\n    <div class=\\\"col-6 col-md-4 col-lg-3\\\" style=\\\"margin: 10px; float: left;\\\" *ngFor=\\\"let item of asociados\\\">\\n        <span>{{item.profile.ci}} {{item.profile.expedido | expedido: ListDepts}}</span>\\n        <div class=\\\"row ficha\\\" [routerLink]=\\\"['/descendenciaFicha', item._id]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">\\n            <div class=\\\"col-4\\\">\\n                <ng-container *ngIf=\\\"item.profile?.photo; then conFoto; else sinFoto\\\"></ng-container>\\n                <ng-template #conFoto>\\n                    <img class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{item.profile.photo}}\\\" srcset=\\\"{{urlGlobal}}{{item.profile.photo}} 100w\\\" alt=\\\"Foto de Perfil\\\">\\n                </ng-template>\\n                <ng-template #sinFoto>\\n                    <img class=\\\"foto\\\" src=\\\"assets/img/noPicture.png\\\" srcset=\\\"assets/img/noPicture.png 200w\\\" alt=\\\"Sin foto de Perfil\\\">\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-8\\\" style=\\\"overflow: hidden;\\\">\\n                <p hidden>{{item._id}}</p>\\n                <span class=\\\"row\\\">{{item.profile.firstName}} {{item.profile.lastNameP}}\\n                    {{item.profile.lastNameM}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.phone}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.email}}</span>\\n                <div class=\\\"row\\\" style=\\\"border-top: 1px solid red;\\\">\\n                    <div class=\\\"col-4\\\"><span>1200bs</span></div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>5 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-right\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>6 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-down\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n            <h2 class=\\\"col-12 col-md-4 card-title\\\">Mis Asociados</h2>\\n            <div class=\\\"col-12 col-md-8 toolbar\\\">\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n                        class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\"\\n                    (click)=\\\"refreshFunction($event)\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n                <button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/invitacion']\\\"\\n                    [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nueva Invitación</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"dataTables_wrapper\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n                        <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\"\\n                            (change)=\\\"entriesChange($event)\\\" style=\\\"width: 100px;\\\">\\n                            <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n                            <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n                            <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n                        </select>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> asociados </label>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-6 col-md-4\\\">\\n                    <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n                        <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n                        <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n                        <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n                            class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n                            style=\\\"width: 100px;\\\">\\n                            <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Activo</option>\\n                            <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Inactivo</option>\\n                            <option value=\\\"2\\\" [selected]=\\\"estado==2\\\">Eliminado</option>\\n                            <option value=\\\"3\\\" [selected]=\\\"estado==3\\\">Deudor</option>\\n                        </select>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-md-4\\\">\\n                    <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n                        <label>\\n                            <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n            <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\"\\n                [footerHeight]=\\\"50\\\" [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\"\\n                (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\"\\n                [treeFromRelation]=\\\"parentId\\\" [treeToRelation]=\\\"id\\\" (treeAction)=\\\"onTreeAction($event)\\\">\\n\\n                <ngx-datatable-column name=\\\"C.I.\\\" [isTreeColumn]=\\\"true\\\" prop=\\\"profile.ci\\\" [treeLevelIndent]=\\\"20\\\">{{ci}}\\n\\n                    <ng-template ngx-datatable-tree-toggle let-tree=\\\"cellContext\\\">\\n                        <button [disabled]=\\\"tree.treeStatus === 'disabled'\\\" (click)=\\\"tree.onTreeAction()\\\">\\n                            <span *ngIf=\\\"tree.treeStatus === 'loading'\\\">\\n                                <i class=\\\"fas fa-spinner fa-spin\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'collapsed'\\\">\\n                                <i class=\\\"fas fa-level-up-alt\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'expanded'\\\">\\n                                <i class=\\\"fas fa-level-down-alt\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"tree.treeStatus === 'disabled'\\\">\\n                                <i class=\\\"fas fa-skull-crossbones\\\"></i>\\n                            </span>\\n                        </button>\\n                    </ng-template>\\n\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Nombre\\\" prop=\\\"profile.firstName\\\">{{firstName}}</ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Apellido Paterno\\\" prop=\\\"profile.lastNameP\\\">{{lastNameP}}\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Apellido Materno\\\" prop=\\\"profile.lastNameM\\\">{{lastNameM}}\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Estado\\\">\\n                    <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n                        <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n                            Activo\\n                        </ng-container>\\n                        <ng-template #elseTemplate>\\n                            Inactivo\\n                        </ng-template>\\n                    </ng-template>\\n                </ngx-datatable-column>\\n\\n\\n                <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\"\\n                    [resizeable]=\\\"false\\\">\\n                    <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n                        let-selectFn=\\\"selectFn\\\">\\n                        Ficha\\n                    </ng-template>\\n                    <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\"\\n                        let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n                        <a class=\\\"btn btn-round btn-warning btn-icon btn-sm\\\" (click)=\\\"deleteFunction($event)\\\">\\n                            <i class=\\\"far fa-id-badge\\\" style=\\\"margin-top: 7px;\\\"></i></a> <!-- [routerLink]=\\\"['/descendenciaFicha', profile.firstName]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">-->\\n                    </ng-template>\\n                </ngx-datatable-column>\\n            </ngx-datatable>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-user card\\\">\\n    <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\">Asociado {{title}}</h4>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <ul class=\\\"nav nav-tabs card-header-tabs\\\" style=\\\"margin-left: 0.1em!important;\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#resumen\\\" data-toggle=\\\"pill\\\" class=\\\"nav-link active\\\">Resumen</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"#cuotas\\\" data-toggle=\\\"pill\\\" class=\\\"nav-link\\\">Cuotas</a>\\n            </li>\\n        </ul>\\n        <div class=\\\"tab-content\\\" id=\\\"descendenciaTab\\\">\\n            <div class=\\\"tab-pane fade show active container\\\" id=\\\"resumen\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"resumen-tab\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                        <h4>Información Personal</h4>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"ci\\\">C.I.</label>\\n                            <span id=\\\"ci\\\" name=\\\"ci\\\">{{person.profile?.ci}} {{person.profile?.expedido | expedido: ListDepts}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"nombre\\\">Nombre</label>\\n                            <span id=\\\"nombre\\\" name=\\\"nombre\\\">{{person.profile?.lastNameP}} {{person.profile?.lastNameM}}\\n                                {{person.profile?.firstName}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"fecha\\\">Fecha de Naciemiento</label>\\n                            <span id=\\\"fecha\\\" name=\\\"fecha\\\">{{person.profile?.birthDate | date: 'shortDate'}}</span>\\n                        </div>\\n                        <br>\\n                        <h4>Datos de Contacto</h4>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"phone\\\">Teléfono</label>\\n                            <span id=\\\"phone\\\" name=\\\"phone\\\">{{person.contact?.phone}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"email\\\">e-mail</label>\\n                            <span id=\\\"email\\\" name=\\\"email\\\">{{person.contact?.email}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"web\\\">Página web</label>\\n                            <span id=\\\"web\\\" name=\\\"web\\\">{{person.contact?.web}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"country\\\">País</label>\\n                            <span id=\\\"country\\\" name=\\\"country\\\">{{person.contact?.address?.country | nombre: ListDepts}}</span>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"state\\\">Departamento</label>\\n                            <span id=\\\"state\\\" name=\\\"state\\\">{{person.contact?.address?.state.id | nombre: ListDepts}}</span><!--valor en lugar de id-->\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"city\\\">Ciudad</label>\\n                            <span id=\\\"city\\\" name=\\\"city\\\">{{person.contact?.address?.city.id | nombre: ListDepts}}</span><!--valor en lugar de id-->\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"especificLocation\\\">Dirección</label>\\n                            <span id=\\\"especificLocation\\\"\\n                                name=\\\"especificLocation\\\">{{person.contact?.address?.especificLocation}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-6\\\">\\n                        <div class=\\\"row\\\">\\n                            <label for=\\\"foto\\\">Fotografía</label>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <img id=\\\"foto\\\" style=\\\"width: 250px\\\" name=\\\"foto\\\" class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{person.profile?.photo}}\\\"\\n                                srcset=\\\"{{urlGlobal}}{{person.profile?.photo}} 200w\\\" alt=\\\"Sin foto de Perfil\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"tab-pane fade container\\\" id=\\\"cuotas\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"cuotas-tab\\\">\\n                <div class=\\\"row\\\">\\n                    <!--<div class=\\\"update ml-auto mr-auto\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"saveService()\\\">Save</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"cancelStaff()\\\">Cancel</button>\\n                        <a href=\\\"#profile\\\" class=\\\"nav-link btn btn-primary\\\">Profile</a>\\n                    </div>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"col-4 col-md-3\\\" style=\\\"margin: 10px; float: left;\\\" *ngFor=\\\"let item of asociados\\\">\\n        <div class=\\\"row ficha\\\" (click)=\\\"verAsociado(item._id)\\\">\\n            <!--[routerLink]=\\\"['/descendenciaFicha', item._id]\\\" [routerLinkActive]=\\\"['linkActivo']\\\">-->\\n            <div class=\\\"col-4\\\">\\n                <ng-container *ngIf=\\\"item.profile?.photo; then conFoto; else sinFoto\\\"></ng-container>\\n                <ng-template #conFoto>\\n                    <img class=\\\"foto\\\" src=\\\"{{urlGlobal}}{{item.profile.photo}}\\\" srcset=\\\"{{urlGlobal}}{{item.profile.photo}} 100w\\\"\\n                        alt=\\\"Foto de Perfil\\\">\\n                </ng-template>\\n                <ng-template #sinFoto>\\n                    <img class=\\\"foto\\\" src=\\\"assets/img/noPicture.png\\\" srcset=\\\"assets/img/noPicture.png 200w\\\"\\n                        alt=\\\"Sin foto de Perfil\\\">\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-8\\\">\\n                <p hidden>{{item._id}}</p>\\n                <span class=\\\"row\\\">{{item.profile.firstName}} {{item.profile.lastNameP}}\\n                    {{item.profile.lastNameM}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.phone}}</span>\\n                <span class=\\\"row\\\">{{item.contact?.email}}</span>\\n                <div class=\\\"row\\\" style=\\\"border-top: 1px solid red;\\\">\\n                    <div class=\\\"col-4\\\"><span>1200bs</span></div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>5 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-right\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-4\\\">\\n                        <span>6 </span>\\n                        <i class=\\\"fas fa-long-arrow-alt-down\\\" style=\\\"color: green;\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <div class=\\\"row\\\">\\n      <h2 class=\\\"col-12 col-md-4 card-title\\\">Lista de Invitados</h2>\\n      <div class=\\\"col-12 col-md-8 toolbar\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-info float-right\\\" (click)=\\\"exportFunction($event)\\\"><i\\n            class=\\\"fas fa-file-excel\\\"></i> Exportar a Excel</button>\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-success float-right\\\" (click)=\\\"refreshFunction($event)\\\"><i\\n            class=\\\"fas fa-sync-alt\\\"></i> Actualizar Lista</button>\\n        <button type=\\\"button\\\" class=\\\"btn-simple btn btn-primary float-right\\\" [routerLink]=\\\"['/invitacion']\\\"\\n          [routerLinkActive]=\\\"['linkActivo']\\\"><i class=\\\"fas fa-plus\\\"></i> Nueva Invitación</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"dataTables_wrapper\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Mostrar</label>\\n            <select name=\\\"datatable_length\\\" aria-controls=\\\"datatable\\\"\\n              class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"entriesChange($event)\\\"\\n              style=\\\"width: 100px;\\\">\\n              <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n              <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n              <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n            </select>\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> invitaciones </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-6 col-md-4\\\">\\n          <div class=\\\"dataTables_length\\\" id=\\\"datatable_status\\\">\\n            <i class=\\\"fas fa-filter float-left\\\" style=\\\"margin: 10px 0;\\\"></i>\\n            <label class=\\\"float-left\\\" style=\\\"margin: 10px;\\\"> Estado</label>\\n            <select name=\\\"datatable_status\\\" aria-controls=\\\"datatable\\\"\\n              class=\\\"form-control float-left align-middle form-control-md\\\" (change)=\\\"statusChange($event)\\\"\\n              style=\\\"width: 100px;\\\">\\n              <option value=\\\"1\\\" [selected]=\\\"estado==1\\\">Vigente</option>\\n              <option value=\\\"0\\\" [selected]=\\\"estado==0\\\">Caduco</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-12 col-md-4\\\">\\n          <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter form-control-md\\\">\\n            <label>\\n              <input type=\\\"search\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" placeholder=\\\"Buscar...\\\"\\n                aria-controls=\\\"datatable\\\" (keyup)=\\\"filterTable($event)\\\" />\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <!--\\n          <ngx-datatable-column name=\\\"My Custom Column Header\\\" prop=\\\"client\\\">\\n        <ng-template let-value=\\\"value\\\" ngx-datatable-cell-template>\\n          <strong>{{ value.clientCode }} </strong> - {{ value.clientName }}\\n        </ng-template>\\n      </ngx-datatable-column>\\n      -->\\n      <ngx-datatable class=\\\"bootstrap selection-cell\\\" [columnMode]=\\\"'force'\\\" [headerHeight]=\\\"50\\\" [footerHeight]=\\\"50\\\"\\n        [rowHeight]=\\\"'auto'\\\" [limit]=\\\"entries != -1 ? entries:undefined\\\" (activate)=\\\"onActivate($event)\\\" [rows]=\\\"temp\\\" [loadingIndicator]=\\\"isLoading\\\">\\n\\n        <ngx-datatable-column name=\\\"C.I.\\\" prop=\\\"profile.ci\\\">{{ci}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Nombre\\\" prop=\\\"profile.firstName\\\">{{firstName}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Apellido Paterno\\\" prop=\\\"profile.lastNameP\\\">{{lastNameP}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Apellido Materno\\\" prop=\\\"profile.lastNameM\\\">{{lastNameM}}</ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Fecha\\\">\\n          <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n            {{row.date | date:'dd-MM-yyyy'}}\\n          </ng-template>\\n        </ngx-datatable-column>\\n        <ngx-datatable-column name=\\\"Estado\\\">\\n          <ng-template ngx-datatable-cell-template let-row=\\\"row\\\">\\n            <ng-container *ngIf=\\\"row.estado; else elseTemplate\\\">\\n              Vigente\\n            </ng-container>\\n            <ng-template #elseTemplate>\\n              Caduco\\n            </ng-template>\\n          </ng-template>\\n        </ngx-datatable-column>\\n\\n\\n        <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n          <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\"\\n            let-selectFn=\\\"selectFn\\\">\\n            Acciones\\n          </ng-template>\\n          <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\"\\n            let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n            <a class=\\\"btn btn-round btn-warning btn-icon btn-sm edit\\\" (click)=\\\"editFunction($event)\\\">\\n              <i class=\\\"fas fa-user-edit\\\" style=\\\"margin-top: 7px;\\\"></i>\\n            </a>\\n            <a class=\\\"btn btn-round btn-danger btn-icon btn-sm remove\\\" (click)=\\\"deleteFunction($event)\\\"><i\\n                class=\\\"fas fa-times\\\" style=\\\"margin-top: 7px;\\\"></i></a>\\n          </ng-template>\\n        </ngx-datatable-column>\\n      </ngx-datatable>\\n    </div>\\n\\n  </div>\\n  <!-- end content-->\\n</div>\\n<!--  end card  -->\"","export default \"<div class=\\\"content\\\" (desdeElHijo)=\\\"recibeDeHijo($event)\\\">\\n  <div class=\\\"form-sign center z-depth-4\\\">\\n    <!--<img src=\\\"assets/img/logos/v.png\\\" alt=\\\"Ventun\\\">-->\\n    <h2 class=\\\"center\\\">Invitación</h2>\\n    <hr>\\n    <form (ngSubmit)=\\\"onRegister()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\" class=\\\"{{procesando}}\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"ci\\\">CI</label>\\n          <input type=\\\"text\\\" name=\\\"ci\\\" #ci=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.ci\\\" id=\\\"ci\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Cédula de Identidad\\\" minlength=\\\"6\\\" (focusout)=\\\"verificarUsuario()\\\" required>\\n          <app-show-errors [control]=\\\"ci\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"expedido\\\" class=\\\"control-label\\\">Expedido en:</label>\\n          <select name=\\\"expedido\\\" #expedido=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.expedido\\\" id=\\\"expedido\\\"\\n            class=\\\"form-control\\\" aria-hidden=\\\"true\\\" required>\\n            <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n            <option *ngFor='let littleDepa of depasCI' [ngValue]=\\\"littleDepa._id\\\">\\n              {{littleDepa.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"expedido\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <!--<div class=\\\"form-group col-6 col-md-4\\\">\\n          <a class=\\\"btn btn-warning\\\" style=\\\"margin-top: 28px;\\\" (click)=\\\"verificarUsuario()\\\">Verificar Usuario</a>\\n        </div>-->\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"nombre\\\">Nombre</label>\\n          <input type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.firstName\\\" id=\\\"nombre\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Nombre Invitado\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"nombre\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"apellidoP\\\">Apellido Paterno</label>\\n          <input type=\\\"text\\\" name=\\\"apellidoP\\\" #apellidoP=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.lastNameP\\\"\\n            id=\\\"apellidoP\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido Paterno\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"apellidoP\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"apellidoM\\\">Apellido Materno</label>\\n          <input type=\\\"text\\\" name=\\\"apellidoM\\\" #apellidoM=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.lastNameM\\\"\\n            id=\\\"apellidoM\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido Materno\\\" minlength=\\\"3\\\" required>\\n          <app-show-errors [control]=\\\"apellidoM\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"gender\\\">Sexo</label>\\n          <select class=\\\"form-control\\\" name=\\\"gender\\\" #gender=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.gender\\\"\\n            id=\\\"gender\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"0\\\">\\n              Hombre\\n            </option>\\n            <option [ngValue]=\\\"1\\\">\\n              Mujer\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"gender\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"birthDate\\\" class=\\\"optional\\\">Fecha de Nacimiento</label>\\n          <input type=\\\"date\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.profile.birthDate\\\"\\n            id=\\\"birthDate\\\" class=\\\"form-control\\\" placeholder=\\\"Fecha de Nacimiento\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"phone\\\">Teléfono</label>\\n          <input type=\\\"phone\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.phone\\\" id=\\\"phone\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Número Telefónico\\\" minlength=\\\"7\\\" required>\\n          <app-show-errors [control]=\\\"phone\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"email\\\" class=\\\"optional\\\">e-mail</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.email\\\"\\n            id=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\\\">\\n          <app-show-errors [control]=\\\"email\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\" hidden>\\n          <label for=\\\"password\\\">Contraseña</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"invitation.password\\\" id=\\\"password\\\" placeholder=\\\"Contraseña\\\">\\n          <app-show-errors [control]=\\\"password\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n\\n      <div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"local\\\" class=\\\"control-label\\\">País</label>\\n            <select name=\\\"local\\\" #local=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.country\\\" id=\\\"local\\\"\\n              aria-hidden=\\\"true\\\" class=\\\"form-control\\\" (ngModelChange)=\\\"updateSelectedValue($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleLocal of ListLOCMain' [ngValue]=\\\"littleLocal._id\\\">\\n                {{littleLocal.name}}\\n              </option>\\n            </select>\\n\\n            <app-show-errors [control]=\\\"local\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"depaMini\\\" class=\\\"control-label\\\">Departamento</label>\\n            <select name=\\\"depaMini\\\" #depaMini=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.state.id\\\" id=\\\"depaMini\\\"\\n              class=\\\"form-control\\\" aria-hidden=\\\"true\\\" (ngModelChange)=\\\"updateSelectDepartamento($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleDepa of listDepa' [ngValue]=\\\"littleDepa._id\\\">\\n                {{littleDepa.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"depaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"cityMini\\\" class=\\\"control-label\\\">Ciudad</label>\\n            <select class=\\\"form-control\\\" name=\\\"cityMini\\\" id=\\\"cityMini\\\" #cityMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"invitation.contact.address.city.id\\\" aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectCiudad($event)\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleCiudad of listCiudad' [ngValue]=\\\"littleCiudad._id\\\">\\n                {{littleCiudad.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"cityMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"zonaMini\\\" class=\\\"control-label\\\">Zona</label>\\n            <select class=\\\"form-control\\\" name=\\\"zonaMini\\\" id=\\\"zonaMini\\\" #zonaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"invitation.contact.address.zone.id\\\" aria-hidden=\\\"true\\\" required>\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleZona of listZona' [ngValue]=\\\"littleZona._id\\\">\\n                {{littleZona.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"zonaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <!---->\\n          <div class=\\\"form-group col-md-8 campoFormulario\\\">\\n            <label class=\\\"control-label\\\">\\n              Street\\n            </label>\\n            <input type=\\\"text\\\" name=\\\"streetDirecction\\\" class=\\\"form-control\\\" id=\\\"streetDirecction\\\"\\n              #streetDirecction=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.address.especificLocation\\\" required>\\n            <app-show-errors [control]=\\\"streetDirecction\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"codePostal\\\" class=\\\"control-label optional\\\">Zip Code</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Code Postal\\\" class=\\\"form-control\\\" name=\\\"codePostal\\\" id=\\\"codePostal\\\"\\n              #codePostal=\\\"ngModel\\\" [(ngModel)]=\\\"invitation.contact.codePostal\\\" minlength=\\\"4\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"companyName\\\">Compañía</label>\\n          <input style=\\\"color: white;\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            value=\\\"{{equipoActual}}\\\" readonly>\\n          <!--<select class=\\\"form-control\\\" name=\\\"companyName\\\" id=\\\"companyName\\\" #companyName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"job.companyName\\\" required (ngModelChange)=\\\"updateSelectEquipo($event)\\\">\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option *ngFor='let item of this.ListCompany' [ngValue]=\\\"item._id\\\">\\n              {{item.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"companyName\\\" class=\\\"show-err\\\"></app-show-errors>-->\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"typeAccount\\\">Rol</label>\\n          <select class=\\\"form-control\\\" id=\\\"typeAccount\\\" name=\\\"typeAccount\\\" #typeAccount=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"job.typeAccount\\\" (ngModelChange)=\\\"updateSelectRol($event)\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option *ngFor='let item of this.ListRol' [ngValue]=\\\"item._id\\\">\\n              {{item.name}}\\n            </option>\\n          </select>\\n          <app-show-errors [control]=\\\"typeAccount\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\" hidden>\\n        <div class=\\\"form-group col-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input id=\\\"acuerdo\\\" name=\\\"acuerdo\\\" type=\\\"checkbox\\\" #acuerdo=\\\"ngModel\\\"\\n                class=\\\"form-control form-check-input\\\" [(ngModel)]=\\\"invitation.estado\\\">\\n              <span class=\\\"form-check-sign\\\">Estoy de acuerdo con Términos de Servicio y Política de Privacidad</span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <button *ngIf=\\\"usuarioValido\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"contextForm.invalid\\\">Invitar</button>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"procesando {{esVisible}}\\\">\\n  <h3>Procesando Solicitud</h3>\\n  <i class=\\\"fas fa-spinner fa-lg fa-spin\\\" style=\\\"margin: 0 auto; display: block; color: white;\\\"></i>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header \\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6 text-left\\\">\\n            <h5 class=\\\"card-category\\\">Total</h5>\\n            <h2 class=\\\"card-title\\\">Cuentas</h2>\\n          </div>\\n          <!--<div class=\\\"col-sm-6\\\">\\n            <div class=\\\"btn-group btn-group-toggle float-right\\\" data-toggle=\\\"buttons\\\">\\n              <label class=\\\"btn btn-sm btn-primary btn-simple active\\\" id=\\\"0\\\">\\n                <input type=\\\"radio\\\" name=\\\"options\\\" checked>\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Accounts</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-single-02\\\"></i>\\n                </span>\\n              </label>\\n              <label class=\\\"btn btn-sm btn-primary btn-simple\\\" id=\\\"1\\\">\\n                <input type=\\\"radio\\\" class=\\\"d-none d-sm-none\\\" name=\\\"options\\\">\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Purchases</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-gift-2\\\"></i>\\n                </span>\\n              </label>\\n              <label class=\\\"btn btn-sm btn-primary btn-simple\\\" id=\\\"2\\\">\\n                <input type=\\\"radio\\\" class=\\\"d-none\\\" name=\\\"options\\\">\\n                <span class=\\\"d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Sessions</span>\\n                <span class=\\\"d-block d-sm-none\\\">\\n                  <i class=\\\"tim-icons icon-tap-02\\\"></i>\\n                </span>\\n              </label>\\n            </div>\\n          </div>-->\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartBig1\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Ventas</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-bell-55 text-primary\\\"></i> 763,215</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartLinePurple\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Cobros diarios</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-delivery-fast text-info\\\"></i> 3,500€</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"CountryChart\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-4\\\">\\n    <div class=\\\"card card-chart\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-category\\\">Cantidad de Asociados</h5>\\n        <h3 class=\\\"card-title\\\"><i class=\\\"tim-icons icon-send text-success\\\"></i> 12,100K</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"chart-area\\\">\\n          <canvas id=\\\"chartLineGreen\\\"></canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-6 col-md-12\\\">\\n    <div class=\\\"card card-tasks\\\">\\n      <div class=\\\"card-header \\\">\\n        <h6 class=\\\"title d-inline\\\">Asociados(5)</h6>\\n        <p class=\\\"card-category d-inline\\\">today</p>\\n        <div class=\\\"dropdown\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-link dropdown-toggle btn-icon\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"tim-icons icon-settings-gear-63\\\"></i>\\n          </button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Another action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#pablo\\\">Something else</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-body \\\">\\n        <div class=\\\"table-full-width table-responsive\\\">\\n          <table class=\\\"table\\\">\\n            <tbody>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Update the Documentation</p>\\n                  <p class=\\\"text-muted\\\">Dwuamish Head, Seattle, WA 8:47 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">GDPR Compliance</p>\\n                  <p class=\\\"text-muted\\\">The GDPR is a regulation that requires businesses to protect the personal data\\n                    and privacy of Europe citizens for transactions that occur within EU member states.</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Solve the issues</p>\\n                  <p class=\\\"text-muted\\\">Fifty percent of all respondents said they would be more likely to shop at a\\n                    company </p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Release v2.0.0</p>\\n                  <p class=\\\"text-muted\\\">Ra Ave SW, Seattle, WA 98116, SUA 11:19 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Export the processed files</p>\\n                  <p class=\\\"text-muted\\\">The report also shows that consumers will not easily forgive a company once a\\n                    breach exposing their personal data occurs. </p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-check\\\">\\n                    <label class=\\\"form-check-label\\\">\\n                      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                      <span class=\\\"form-check-sign\\\">\\n                        <span class=\\\"check\\\"></span>\\n                      </span>\\n                    </label>\\n                  </div>\\n                </td>\\n                <td>\\n                  <p class=\\\"title\\\">Arival at export process</p>\\n                  <p class=\\\"text-muted\\\">Capitol Hill, Seattle, WA 12:34 AM</p>\\n                </td>\\n                <td class=\\\"td-actions text-right\\\">\\n                  <button type=\\\"button\\\" rel=\\\"tooltip\\\" title=\\\"\\\" class=\\\"btn btn-link\\\" data-original-title=\\\"Edit Task\\\">\\n                    <i class=\\\"tim-icons icon-pencil\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-6 col-md-12\\\">\\n    <div class=\\\"card \\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\"> Simple Table</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table tablesorter \\\" id=\\\"\\\">\\n            <thead class=\\\" text-primary\\\">\\n              <tr>\\n                <th>\\n                  Name\\n                </th>\\n                <th>\\n                  Country\\n                </th>\\n                <th>\\n                  City\\n                </th>\\n                <th class=\\\"text-center\\\">\\n                  Salary\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>\\n                  Dakota Rice\\n                </td>\\n                <td>\\n                  Niger\\n                </td>\\n                <td>\\n                  Oud-Turnhout\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $36,738\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Minerva Hooper\\n                </td>\\n                <td>\\n                  Curaçao\\n                </td>\\n                <td>\\n                  Sinaai-Waas\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $23,789\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Sage Rodriguez\\n                </td>\\n                <td>\\n                  Netherlands\\n                </td>\\n                <td>\\n                  Baileux\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $56,142\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Philip Chaney\\n                </td>\\n                <td>\\n                  Korea, South\\n                </td>\\n                <td>\\n                  Overland Park\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $38,735\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Doris Greene\\n                </td>\\n                <td>\\n                  Malawi\\n                </td>\\n                <td>\\n                  Feldkirchen in Kärnten\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $63,542\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Mason Porter\\n                </td>\\n                <td>\\n                  Chile\\n                </td>\\n                <td>\\n                  Gloucester\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $78,615\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>\\n                  Jon Porter\\n                </td>\\n                <td>\\n                  Portugal\\n                </td>\\n                <td>\\n                  Gloucester\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  $98,615\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>-->\"","export default \"<div class=\\\"content\\\">\\n  <div class=\\\"form-sign center z-depth-4\\\">\\n    <!--<img src=\\\"assets/img/logos/v.png\\\" alt=\\\"Ventun\\\">-->\\n    <h2 class=\\\"center\\\">Información Personal</h2>\\n    <hr>\\n    <form (ngSubmit)=\\\"onUpdate()\\\" name=\\\"contextForm\\\" #contextForm=\\\"ngForm\\\" *ngIf=\\\"perfil\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"ci\\\">CI</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ci\\\" #ci=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.profile.ci\\\" id=\\\"ci\\\"\\n            placeholder=\\\"Cédula de Identidad\\\" required>\\n          <app-show-errors [control]=\\\"ci\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"expedido\\\" class=\\\"control-label\\\">Expedido en:</label>\\n          <select class=\\\"form-control\\\" name=\\\"expedido\\\" id=\\\"expedido\\\" #expedido=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.expedido\\\" required aria-hidden=\\\"true\\\">\\n            <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n            <option *ngFor='let littleDepa of depasCI' [ngValue]=\\\"littleDepa._id\\\">\\n              {{littleDepa.name}}\\n            </option>\\n          </select>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"firstName\\\">Nombre</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.firstName\\\" id=\\\"firstName\\\" placeholder=\\\"Nombre Usuario\\\" required>\\n          <app-show-errors [control]=\\\"firstName\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"lastNameP\\\">Apellido Paterno</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastNameP\\\" #lastNameP=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.lastNameP\\\" id=\\\"lastNameP\\\" placeholder=\\\"Apellido Paterno\\\" required>\\n          <app-show-errors [control]=\\\"lastNameP\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"lastNameM\\\">Apellido Materno</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastNameM\\\" #lastNameM=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"perfil.profile.lastNameM\\\" id=\\\"lastNameM\\\" placeholder=\\\"Apellido Materno\\\" required>\\n          <app-show-errors [control]=\\\"lastNameM\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n\\n\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"changePass\\\"></label>\\n          <input class=\\\"form-control btn btn-primary\\\" type=\\\"button\\\" value=\\\"Cambio de Contraseña\\\" routerLink=\\\"/sign/password\\\" routerLinkActive=\\\"active\\\" name=\\\"changePass\\\" style=\\\"padding: 0 10px;\\\">\\n        </div>\\n\\n\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"gender\\\">Sexo</label>\\n          <select class=\\\"form-control\\\" id=\\\"gender\\\" name=\\\"gender\\\" #gender=\\\"ngModel\\\" tabindex=\\\"-1\\\"\\n            [(ngModel)]=\\\"perfil.profile.gender\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"0\\\">\\n              Hombre\\n            </option>\\n            <option [ngValue]=\\\"1\\\">\\n              Mujer\\n            </option>\\n          </select>\\n        </div>\\n        <!--\\n          <input type=\\\"date\\\" id=\\\"bday\\\" name=\\\"bday\\\" max=today min=\\\"1919-01-01\\\" class=\\\"form-control\\\" #bday=\\\"ngModel\\\"\\n              [ngModel]=\\\"mySeller.xCurrent.profile.birthDate | date:'yyyy-MM-dd'\\\"\\n              (ngModelChange)=\\\"mySeller.xCurrent.profile.birthDate = $event\\\">\\n        -->\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"birthDate\\\">Fecha de Nacimiento</label>\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"birthDate\\\" #birthDate=\\\"ngModel\\\"\\n            [ngModel]=\\\"perfil.profile.birthDate\\\" (ngModelChange)=\\\"perfil.profile.birthDate = $event\\\" id=\\\"birthDate\\\"\\n            placeholder=\\\"Fecha de Nacimiento\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"phone\\\">Teléfono</label>\\n          <input type=\\\"phone\\\" class=\\\"form-control\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.phone\\\"\\n            id=\\\"phone\\\" placeholder=\\\"Número Telefónico\\\" required>\\n          <app-show-errors [control]=\\\"phone\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n        <div class=\\\"form-group col-6 col-md-4\\\">\\n          <label for=\\\"email\\\">e-mail</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.email\\\"\\n            id=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\">\\n          <app-show-errors [control]=\\\"email\\\" class=\\\"show-err\\\"></app-show-errors>\\n        </div>\\n      </div>\\n\\n\\n      <div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"local\\\" class=\\\"control-label\\\">País</label>\\n            <select class=\\\"form-control\\\" name=\\\"local\\\" id=\\\"local\\\" #local=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.country\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectedValue($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleLocal of ListLOCMain' [ngValue]=\\\"littleLocal._id\\\">\\n                {{littleLocal.name}}\\n              </option>\\n            </select>\\n\\n            <app-show-errors [control]=\\\"local\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"depaMini\\\" class=\\\"control-label\\\">Departamento</label>\\n            <select class=\\\"form-control\\\" name=\\\"depaMini\\\" id=\\\"depaMini\\\" #depaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.state.id\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectDepartamento($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleDepa of listDepa' [ngValue]=\\\"littleDepa._id\\\">\\n                {{littleDepa.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"depaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"form-group col-md-12 col-lg-6 campoFormulario\\\">\\n            <label for=\\\"cityMini\\\" class=\\\"control-label\\\">Ciudad</label>\\n            <select class=\\\"form-control\\\" name=\\\"cityMini\\\" id=\\\"cityMini\\\" #cityMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.city.id\\\" required aria-hidden=\\\"true\\\"\\n              (ngModelChange)=\\\"updateSelectCiudad($event)\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleCiudad of listCiudad' [ngValue]=\\\"littleCiudad._id\\\">\\n                {{littleCiudad.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"cityMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"zonaMini\\\" class=\\\"control-label\\\">Zona</label>\\n            <select tabindex=\\\"-1\\\" class=\\\"form-control\\\" name=\\\"zonaMini\\\" id=\\\"zonaMini\\\" #zonaMini=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"perfil.contact.address.zone.id\\\" required aria-hidden=\\\"true\\\">\\n              <option [ngValue]=\\\"undefined\\\" selected>Elija una Opción</option>\\n              <option *ngFor='let littleZona of listZona' [ngValue]=\\\"littleZona._id\\\">\\n                {{littleZona.name}}\\n              </option>\\n            </select>\\n            <app-show-errors [control]=\\\"zonaMini\\\" class=\\\"show-err\\\"></app-show-errors>\\n          </div>\\n          <div class=\\\"form-group col-md-8 campoFormulario\\\">\\n            <label class=\\\"control-label\\\">\\n              Street\\n            </label>\\n            <input name=\\\"streetDirecction\\\" class=\\\"form-control\\\" id=\\\"streetDirecction\\\" type=\\\"text\\\" required\\n              #streetDirecction=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.address.especificLocation\\\">\\n          </div>\\n          <div class=\\\"form-group col-md-4 campoFormulario\\\">\\n            <label for=\\\"codePostal\\\" class=\\\"control-label\\\">Zip Code</label>\\n            <input type=\\\"text\\\" placeholder=\\\"Code Postal\\\" class=\\\"form-control\\\" name=\\\"codePostal\\\" id=\\\"codePostal\\\"\\n              #codePostal=\\\"ngModel\\\" [(ngModel)]=\\\"perfil.contact.codePostal\\\" minlength=\\\"4\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"col-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Imagen Personal</label>\\n            <div class=\\\"fileupload fileupload-new\\\" data-provides=\\\"fileupload\\\"><input type=\\\"hidden\\\">\\n              <div class=\\\"fileupload-new thumbnail\\\"><img class=\\\"e2e-inner-html-interpolated\\\" alt=\\\"\\\"\\n                  src=\\\"{{urlGlobal}}{{urlImage}}\\\" style=\\\"width: 200px\\\">\\n              </div>\\n              <div class=\\\"fileupload-preview fileupload-exists thumbnail\\\" style=\\\"line-height: 10px;\\\"></div>\\n              <div class=\\\"user-edit-image-buttons\\\">\\n                <span class=\\\"btn btn-azure btn-file\\\">\\n                  <app-upload [mostrar]='mostrar' [title]=\\\"title_upload\\\" [path]=\\\"path_server\\\"\\n                    (desdeElHijo)=\\\"recibeDeHijo($event);\\\">\\n                  </app-upload>\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\" *ngIf=\\\"perfil.estado == 0\\\">\\n        <div class=\\\"form-group col-12\\\">\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input id=\\\"estado\\\" name=\\\"estado\\\" type=\\\"checkbox\\\" #estado=\\\"ngModel\\\" class=\\\"form-control form-check-input\\\"\\n                [(ngModel)]=\\\"perfil.estado\\\" required>\\n              <span class=\\\"form-check-sign\\\">Estoy de acuerdo con <a href=\\\"http://ventun.com/index.php/terms\\\" target=\\\"_blank\\\">Términos de Servicio</a> y <a href=\\\"http://ventun.com/index.php/privacy\\\" target=\\\"_blank\\\">Política de Privacidad</a></span>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n      <!--<div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"estado\\\">Estado</label>\\n          <select class=\\\"form-control\\\" id=\\\"estado\\\" name=\\\"estado\\\" #estado=\\\"ngModel\\\" tabindex=\\\"-1\\\"\\n            [(ngModel)]=\\\"perfil.estado\\\" required>\\n            <option [ngValue]=undefined selected>Elija una Opción</option>\\n            <option [ngValue]=\\\"1\\\">\\n              Activo\\n            </option>\\n            <option [ngValue]=\\\"0\\\">\\n              Inactivo\\n            </option>\\n          </select>\\n        </div>\\n      </div>-->\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"contextForm.invalid\\\">Modificar Usuario</button>\\n    </form>\\n  </div>\\n</div>\"","export default \"<form id=\\\"fSeller\\\" name=\\\"fSeller\\\" #fSeller='ngForm' *ngIf=\\\"job\\\">\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"ciMain\\\">ciMain</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ciMain\\\" #ciMain=\\\"ngModel\\\" [(ngModel)]=\\\"job.ciMain\\\"\\n      id=\\\"ciMain\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"companyName\\\">companyName</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"companyName\\\" #companyName=\\\"ngModel\\\" [(ngModel)]=\\\"job.companyName\\\"\\n      id=\\\"companyName\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <div class=\\\"form-group col-md-6\\\">\\n    <label for=\\\"typeAccount\\\">typeAccount</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"typeAccount\\\" #typeAccount=\\\"ngModel\\\" [(ngModel)]=\\\"job.typeAccount\\\"\\n      id=\\\"typeAccount\\\" placeholder=\\\"Apellidos\\\">\\n  </div>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"guardar()\\\">GUARDAR</button>\\n</form>\"","export default \"<!--<div *ngFor=\\\"let alert of alerts\\\" class=\\\"{{cssClass(alert)}} alert-dismissable\\\">\\n        {{alert.message}}\\n        <a class=\\\"close\\\" (click)=\\\"removeAlert(alert)\\\">&times;</a>\\n    </div>-->\\n<div aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\" style=\\\"position: relative;\\\" attr.id=\\\"{{idx}}\\\">\\n    <div style=\\\"position: absolute; top: 40px; right: 0;\\\">\\n\\n        <div class=\\\"toast {{tipoAlert}}\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" data-delay=\\\"4000\\\">\\n            <div class=\\\"toast-header\\\">\\n                <strong class=\\\"mr-auto\\\">{{title}}</strong>\\n                <small class=\\\"text-muted\\\">Ahora</small>\\n                <button type=\\\"button\\\" class=\\\"ml-2 mb-1 close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"toast-body\\\">\\n                {{message}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div id=\\\"divMainFile\\\">\\n  <label for=\\\"imageUp\\\" style=\\\"margin-bottom:0; background-color: #344675;\\\">Elige un Imagen</label>\\n  <input class=\\\"custom-control {{muestraUP}}\\\" type=\\\"file\\\" accept=\\\"image/jpeg\\\" name=\\\"imageUp\\\" id=\\\"imageUp\\\" value=\\\"Sube imagen\\\"(change)=\\\"onFileSelected($event)\\\" style=\\\"z-index: 0!important;\\\">\\n\\n  <div class=\\\"card text-center float-left  {{muestraMIDDLE}}\\\">\\n    <div id=\\\"card-body\\\" class=\\\"card-body\\\">\\n      <div class=\\\"card text-white cardCompleto float-left\\\" *ngFor=\\\"let item of datosImagen; let i=index\\\">\\n        <img src=\\\"{{item.src}}\\\" class=\\\"figure-img img-fluid rounded img-thumbnail\\\" alt=\\\"{{item.dataName}}\\\"\\n          style=\\\"max-width: 164!important; max-height: 224px; margin: 20px 10px;\\\">\\n        <div class=\\\"card-img-overlay\\\">\\n          <p class=\\\"card-text\\\">{{item.dataName}}</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-round btn-warning btn-icon\\\" (click)=\\\"deleteFunction($event, item.dataName)\\\"\\n            style=\\\"margin-top: 15%;\\\">\\n            <i class=\\\"fas fa-times\\\" style=\\\"margin-top: 7px;\\\"></i>\\n          </a>\\n        </div>\\n        <div class='progress'>\\n          <div id='pbFile{{item.dataName}}' class='progress-bar progress-bar-striped bg-success' role='progressbar'\\n            aria-valuenow='25' aria-valuemin='0' aria-valuemax='100'></div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr style=\\\"clear: both;\\\">\\n    <div class=\\\"card-footer text-muted {{muestraDOWN}}\\\" *ngIf=\\\"mostrar==true\\\">\\n      <input class=\\\"btn btn-outline-primary\\\" type=\\\"button\\\" value=\\\"Subir Imagen\\\" (click)=\\\"onUpload()\\\">\\n      <input class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" value=\\\"Cancelar\\\" (click)=\\\"onCancel()\\\">\\n    </div>\\n  </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdmComponent } from \"./adm.component\";\nimport { MainComponent } from \"./views/main/main.component\";\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { StaffListComponent } from './views/staff-list/staff-list.component';\nimport { InvitationComponent } from './views/invitation/invitation.component';\nimport { DescendenciaFichaComponent } from './views/descendencia-ficha/descendencia-ficha.component';\nimport { DescendenciaProfileComponent } from './views/descendencia-profile/descendencia-profile.component';\nimport { InvitationListComponent } from './views/invitation-list/invitation-list.component';\nimport { DescendenciaListComponent } from './views/descendencia-list/descendencia-list.component';\nimport { AuthenticationService } from '../services/authentication.service';\n\nconst routes: Routes = [\n  {\n    path: '', component: AdmComponent, \n    canActivate: [AuthenticationService],\n    children:[{ path: '', component: MainComponent }]\n  },\n  //{ path: '', redirectTo: 'main', pathMatch: 'full' },\n\n  {\n    path: 'main',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{path: '', component: MainComponent}]\n  },\n  {\n    path:'profile',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: ProfileComponent}]\n  },\n  {\n    path:'job',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: StaffListComponent}]\n  },\n  {\n    path:'invitacion',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationComponent}]\n  },\n  {\n    path:'invitacion/:_id',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationComponent}]\n  },\n  {\n    path:'invitacionLista',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: InvitationListComponent}]\n  },\n  {\n    path:'descendenciaFicha',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaFichaComponent}]\n  },\n  {\n    path:'descendenciaFicha/:id',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaProfileComponent}]\n  },\n  {\n    path:'descendenciaLista',\n    component: AdmComponent,\n    canActivate: [AuthenticationService],\n    children: [{ path: '', component: DescendenciaListComponent}]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdmRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9hZG0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adm',\n  templateUrl: './adm.component.html',\n  styleUrls: ['./adm.component.css']\n})\nexport class AdmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\n\nimport { AdmRoutingModule } from './adm-routing.module';\nimport { AdmComponent } from './adm.component';\nimport { NavbarComponent } from './layouts/navbar/navbar.component';\nimport { SidebarComponent } from './layouts/sidebar/sidebar.component';\nimport { FooterComponent } from './layouts/footer/footer.component';\nimport { ModulesModule } from \"../modules/modules.module\";\nimport { MainComponent } from './views/main/main.component';\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { StaffListComponent } from './views/staff-list/staff-list.component';\nimport { InvitationComponent } from './views/invitation/invitation.component';\nimport { ShowErrorsComponent } from './tools/show-errors/show-errors.component';\nimport { DescendenciaFichaComponent } from './views/descendencia-ficha/descendencia-ficha.component';\nimport { DescendenciaProfileComponent } from './views/descendencia-profile/descendencia-profile.component';\nimport { DescendenciaListComponent } from './views/descendencia-list/descendencia-list.component';\nimport { InvitationListComponent } from './views/invitation-list/invitation-list.component';\nimport { ExpedidoPipe } from '../pipes/expedido.pipe';\nimport { NombrePipe } from '../pipes/nombre.pipe';\nimport { ConfigurationComponent } from './views/configuration/configuration.component';\n\n\n@NgModule({\n  declarations: [\n    AdmComponent, \n    NavbarComponent, \n    SidebarComponent, \n    FooterComponent, \n    MainComponent, \n    ProfileComponent, \n    StaffListComponent, \n    InvitationComponent,\n    ShowErrorsComponent,\n    DescendenciaFichaComponent,\n    DescendenciaProfileComponent,\n    InvitationListComponent,\n    DescendenciaListComponent,\n    ExpedidoPipe,\n    NombrePipe,\n    ConfigurationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxDatatableModule,\n    AdmRoutingModule,\n    ModulesModule\n  ]\n})\nexport class AdmModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".dropdown.nav-item>a {\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL2xheW91dHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi5uYXYtaXRlbT5hIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufSJdfQ== */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { globalConfigurations, globalVars } from 'src/app/services/globalVars';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { TypeContext } from 'src/app/models/contextclases';\nimport { field } from 'src/app/models/schema';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\nimport { Router } from '@angular/router';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  lista: field[] = [];\n  urlGlobal = globalVars.filesDomain;\n  public perfil: string;\n  userName: string;\n  equipoActual: string = '';\n\n  @Output() desdeElHijo = new EventEmitter();\n\n  ListCompany: TypeContext[] = [];\n  ListRol: TypeContext[] = [];\n\n  constructor(private connexion: ConnexionService, public globalEquipo: GlobalService, public changeTeam: ChangeLiveService, private _router: Router) {\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<TypeContext>('typecontext').subscribe(reslo => {\n      this.ListCompany = reslo.filter(LOC => LOC.context_id == globalConfigurations.company);\n      this.ListRol = reslo.filter(LOC => LOC.context_id == globalConfigurations.rol);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    setTimeout(() => {\n      let anny = JSON.parse(localStorage.getItem('userCompany'));\n      anny.forEach(element => {\n        this.ListCompany.forEach(comp => {\n          if (element.companyName == comp._id) {\n            this.lista.push({ id: element.companyName, valor: comp.name });\n            if (localStorage.getItem('actual')) {\n              this.updateEmp(localStorage.getItem('actual'), false);\n            } else {\n              this.updateEmp(element.companyName, false);\n            }\n          }\n        });\n      });\n      this.userName = localStorage.getItem('userName');\n      this.perfil = localStorage.getItem('photo');\n    }, 1000);\n  }\n\n  updateEmp(id: string, bol: boolean) {\n    this.ListCompany.forEach(comp => {\n      if (id == comp._id) {\n        this.changeTeam.setEquipo(id);\n        this.desdeElHijo.emit(id);\n        this.globalEquipo.equipo = id;\n        this.equipoActual = comp.name;\n      }\n    });\n    if (bol == true) {\n      //this._router.navigate(['/invitacion/']);\n      window.location.reload();\n      console.log('this.desdeElHijo.emit(id)');\n    }\n  }\n\n  cerrarSesion() {\n    localStorage.clear();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS9sYXlvdXRzL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nvar misc:any ={\n  sidebar_mini_active: true\n}\n\nexport interface RouteInfo {\n  path: string;\n  title: string;\n  type: string;\n  icontype: string;\n  collapse?: string;\n  isCollapsed?: boolean;\n  isCollapsing?: any;\n  children?: ChildrenItems[];\n}\n\nexport interface ChildrenItems {\n  path: string;\n  title: string;\n  ab: string;\n  type?: string;\n}\n\n//Menu Items\nexport const ROUTES: RouteInfo[] = [\n  {\n    path: \"/main\",\n    title: \"Tablero\",\n    type: \"link\",\n    icontype: \"icon-components\"\n  },\n  {\n    path: \"/objetivo\",\n    title: \"Objetivos\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/\",\n    title: \"Descendencia\",\n    type: \"sub\",\n    icontype: \"icon-single-02\",\n    collapse: \"descendencia\",\n    isCollapsed: true,\n    children: [\n      { path: \"descendenciaFicha\", title: \"Fichas\", type: \"link\", ab: \"DF\" },\n      { path: \"descendenciaLista\", title: \"Lista\", type: \"link\", ab: \"DL\" }\n    ]\n  },\n  {\n    path: \"/\",\n    title: \"Invitacion\",\n    type: \"sub\",\n    icontype: \"icon-single-02\",\n    collapse: \"invitacion\",\n    isCollapsed: true,\n    children: [\n      { path: \"invitacion\", title: \"Nueva Invitación\", type: \"link\", ab: \"II\" },\n      { path: \"invitacionLista\", title: \"Lista de Invitaciones\", type: \"link\", ab: \"IL\" }\n    ]\n  }/*,\n  {\n    path: \"/mensaje\",\n    title: \"Mensajes\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/job\",\n    title: \"Job\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/ingreso\",\n    title: \"Ingresos\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  },\n  {\n    path: \"/\",\n    title: \"Reportes\",\n    type: \"sub\",\n    icontype: \"icon-badge\",\n    collapse: \"reporte\",\n    isCollapsed: true,\n    children: [\n      { path: \"reporte1\", title: \"Reporte 1\", type: \"link\", ab: \"R1\" },\n      { path: \"reporte2\", title: \"Reporte 2\", type: \"link\", ab: \"R2\" },\n      { path: \"reporte3\", title: \"Reporte 3\", type: \"link\", ab: \"R3\" },\n      { path: \"reporte4\", title: \"Reporte 4\", type: \"link\", ab: \"R4\" }\n    ]\n  },\n  {\n    path: \"/comision\",\n    title: \"Comisión\",\n    type: \"link\",\n    icontype: \"icon-badge\"\n  }*/\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  public menuItems: any[];\n  public isCollapsed = true;\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n  }\n\n  sleep(milliseconds) {\n    var start = new Date().getTime();\n    for (var i = 0; i < 1e7; i++) {\n      if (new Date().getTime() - start > milliseconds) {\n        break;\n      }\n    }\n  }\n  myFunc(event, menuitem) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.sleep(10);\n    if (menuitem.isCollapsing === undefined) {\n      menuitem.isCollapsing = true;\n\n      // menuitem.isCollapsed = !menuitem.isCollapsed;\n\n      var element = event.target;\n      while (\n        element.getAttribute(\"data-toggle\") != \"collapse\" &&\n        element != document.getElementsByTagName(\"html\")[0]\n      ) {\n        element = element.parentNode;\n      }\n      element = element.parentNode.children[1];\n\n      if (\n        element.classList.contains(\"collapse\") &&\n        !element.classList.contains(\"show\")\n      ) {\n        element.classList = \"before-collapsing\";\n        var style = element.scrollHeight;\n\n        element.classList = \"collapsing\";\n        setTimeout(function() {\n          element.setAttribute(\"style\", \"height:\" + style + \"px\");\n        }, 1);\n        setTimeout(function() {\n          element.classList = \"collapse show\";\n          element.removeAttribute(\"style\");\n          menuitem.isCollapsing = undefined;\n        }, 350);\n      } else {\n        var style = element.scrollHeight;\n        setTimeout(function() {\n          element.setAttribute(\"style\", \"height:\" + (style + 20) + \"px\");\n        }, 3);\n        setTimeout(function() {\n          element.classList = \"collapsing\";\n        }, 3);\n        setTimeout(function() {\n          element.removeAttribute(\"style\");\n        }, 20);\n        setTimeout(function() {\n          element.classList = \"collapse\";\n          menuitem.isCollapsing = undefined;\n        }, 400);\n      }\n    }\n  }\n  minimizeSidebar(){\n    const body = document.getElementsByTagName('body')[0];\n    if (body.classList.contains('sidebar-mini')) {\n        misc.sidebar_mini_active = true\n    } else {\n      misc.sidebar_mini_active = false;\n    }\n    if (misc.sidebar_mini_active === true) {\n        body.classList.remove('sidebar-mini');\n        misc.sidebar_mini_active = false;\n    } else {\n            body.classList.add('sidebar-mini');\n            misc.sidebar_mini_active = true;\n    }\n\n    // we simulate the window Resize so the charts will get updated in realtime.\n    const simulateWindowResize = setInterval(function() {\n        window.dispatchEvent(new Event('resize'));\n    }, 180);\n\n    // we stop the simulation of Window Resize after the animations are completed\n    setTimeout(function() {\n        clearInterval(simulateWindowResize);\n    }, 1000);\n  }\n\n  showSidebarMessage(message){\n    /*this.toastr.show(\n      '<span class=\"now-ui-icons ui-1_bell-53\"></span>', message,\n      {\n        timeOut: 4000,\n        closeButton: true,\n        enableHtml: true,\n        toastClass: \"alert alert-danger alert-with-icon\",\n        positionClass: \"toast-top-right\"\n      }\n    );*/\n  }\n}\n","export default \".roedor{\\r\\n    color: red;\\r\\n}\\r\\n.globito{\\r\\n    color: red !important; \\r\\n    margin-left: 5px;\\r\\n    font-size: 0.75rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3Rvb2xzL3Nob3ctZXJyb3JzL3Nob3ctZXJyb3JzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYWRtL3Rvb2xzL3Nob3ctZXJyb3JzL3Nob3ctZXJyb3JzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9lZG9ye1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uZ2xvYml0b3tcclxuICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDsgXHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgZm9udC1zaXplOiAwLjc1cmVtO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-errors',\n  templateUrl: './show-errors.component.html',\n  styleUrls: ['./show-errors.component.css']\n})\nexport class ShowErrorsComponent implements OnInit {\n\n  private static readonly errorMessages = {\n    'required': () => 'Este campo es requerido.',\n    'minlength': (params) => 'La cantidad mínima de caracteres es de ' + params.requiredLength + '.',\n    'maxlength': (params) => 'La cantidad máxima de caracteres es de ' + params.requiredLength + '.',\n    'pattern': (params) => 'The required pattern is: '+ 'mail@ejemplo.com', //params.requiredPattern,\n    'email': () => 'El formato de correo es: mail@ejemplo.com',\n    'years': (params) => params.message,\n    'countryCity': (params) => params.message,\n    'crisCode': (params) => params.message,\n    'telephoneNumbers': (params) => params.message,\n    'telephoneNumber': (params) => params.message\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  private control: AbstractControlDirective | AbstractControl;\n\n  shouldShowErrors(): boolean {\n    return this.control &&\n      this.control.errors &&\n      (this.control.dirty || this.control.touched);\n  }\n\n  listOfErrors(): string[] {\n    //console.log('esto mandamos al directiva show erros:', this.control);\n    return Object.keys(this.control.errors)\n      .map(field => this.getMessage(field, this.control.errors[field]));\n  }\n\n  private getMessage(type: string, params: any) {\n    return ShowErrorsComponent.errorMessages[type](params);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"span {\\r\\n    color: white;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.foto {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n\\r\\n.ficha {\\r\\n    cursor: pointer;\\r\\n    border: 1px solid black;\\r\\n    border-left: 4px solid silver;\\r\\n    padding-right: 4px;\\r\\n}\\r\\n\\r\\n.ficha:hover {\\r\\n    border: 1px solid silver;\\r\\n    box-shadow: 0 0 10px silver;\\r\\n    transition-duration: 300ms;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2Rlc2NlbmRlbmNpYS1maWNoYS9kZXNjZW5kZW5jaWEtZmljaGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLDJCQUEyQjtJQUMzQiwwQkFBMEI7QUFDOUIiLCJmaWxlIjoic3JjL2FwcC9hZG0vdmlld3MvZGVzY2VuZGVuY2lhLWZpY2hhL2Rlc2NlbmRlbmNpYS1maWNoYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsic3BhbiB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uZm90byB7XHJcbiAgICBtYXJnaW46IDVweCAwO1xyXG59XHJcblxyXG4uZmljaGEge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHNpbHZlcjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDRweDtcclxufVxyXG5cclxuLmZpY2hhOmhvdmVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHNpbHZlcjtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHNpbHZlcjtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDMwMG1zO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { person } from 'src/app/models/person';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { job, Location } from 'src/app/models/schema';\nimport { globalVars } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-descendencia-ficha',\n  templateUrl: './descendencia-ficha.component.html',\n  styleUrls: ['./descendencia-ficha.component.css']\n})\nexport class DescendenciaFichaComponent implements OnInit {\n\n  public person: person;\n  public asociados: any[];\n  urlGlobal = globalVars.filesDomain;\n  ListDepts: Location[] = [];\n\n  constructor(private connexion: ConnexionService, private _router: Router) {\n    this.asociados = [];\n  }\n \n  ngOnInit() {\n    this.connexion.get_dataWithParams<Location>('location','?owner=5e14d611d235a7103c0ba4f6').subscribe(reslo => {\n      this.ListDepts = reslo;\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.person = new person();\n    this.connexion.get_dataWithParamsOne<person>('personAssociated', '?userID=' + localStorage.getItem('code').substr(1) +  '&companyName=' + localStorage.getItem('actual')).subscribe(\n      regis => {\n        this.person = regis[0];\n        this.asociados = regis[0].associated;\n        console.log(regis[0].associated);\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9kZXNjZW5kZW5jaWEtbGlzdC9kZXNjZW5kZW5jaWEtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { person } from 'src/app/models/person';\n\n@Component({\n  selector: 'app-descendencia-list',\n  templateUrl: './descendencia-list.component.html',\n  styleUrls: ['./descendencia-list.component.css']\n})\nexport class DescendenciaListComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  myID: string;\n  activeRow: any;\n\n  constructor(private cnx: ConnexionService, private ruta: ActivatedRoute, private router: Router, public toastService: ToastService, private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.myID = localStorage.getItem('code').substr(1);\n    this.obtenerDatos(1, this.myID);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  obtenerDatos(state: number, id: string) {\n    console.log(state, id);\n    this.isLoading = true;\n    this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + id +  '&companyName=' + localStorage.getItem('actual') + '&estado=' + state).subscribe(myAds => {\n      console.log(myAds);\n      this.rows = myAds[0].associated;\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1500);\n      this.temp = myAds[0].associated.map((prop, key) => {\n        return {\n          ...prop,\n          treeStatus: 'collapsed',\n          parentId: null,\n          id: key\n        };\n      });\n    });\n    this.isLoading = false;\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status, this.myID);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n\n      let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n      this.cnx.get_dataWithParams<person>('personAssociated', '?userID=' + row._id + '&companyName=' + myCompanyName[0].companyName + '&estado=' + row.estado).subscribe(myTreeAssoc => {\n        console.log('myAdsmyAds', myTreeAssoc);\n\n        //this.rows = myTreeAssoc[0].associated;\n        let data = myTreeAssoc[0].associated.map((prop, key) => {\n          return {\n            ...prop,\n            treeStatus: 'collapsed',\n            parentId: row.id,\n            id: key\n          };\n        });\n        this.temp = [...this.temp, ...data]\n      });\n      row.treeStatus = 'expanded';\n      this.cd.detectChanges();\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    this.router.navigate(['/descendenciaFicha/' + this.activeRow._id]);\n  }\n}\n","export default \"ul.nav-pills {\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\nul.nav-pills .active{\\r\\n    box-shadow: 0px 5px 15px 0px #ffffff4d;\\r\\n}\\r\\n\\r\\n#descendenciaTab {\\r\\n    padding-top: 16px;\\r\\n}\\r\\n\\r\\n.tab-pane {\\r\\n    background-color: #1e1e2f;\\r\\n}\\r\\n\\r\\nli.nav-item {\\r\\n    background-color: var(--gray-dark);\\r\\n    margin-right: 20px;\\r\\n    border-radius: 0.25rem;\\r\\n    -webkit-border-radius: 0.25rem;\\r\\n    -moz-border-radius: 0.25rem;\\r\\n    -ms-border-radius: 0.25rem;\\r\\n    -o-border-radius: 0.25rem;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    color: white;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.foto {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n\\r\\n.ficha {\\r\\n    cursor: pointer;\\r\\n    border: 1px solid black;\\r\\n    border-left: 4px solid silver;\\r\\n    padding-right: 4px;\\r\\n}\\r\\n\\r\\n.ficha:hover {\\r\\n    border: 1px solid silver;\\r\\n    box-shadow: 0 0 10px silver;\\r\\n    transition-duration: 300ms;\\r\\n}\\r\\n\\r\\n#resumen label {\\r\\n    width: 200px;\\r\\n    margin: 5px 0;\\r\\n    font-size: 1.1em;\\r\\n}\\r\\n\\r\\n#resumen span {\\r\\n    margin: 5px 0;\\r\\n    font-size: 1.1em;\\r\\n}\\r\\n\\r\\n#resumen .row {\\r\\n    margin: 5px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2Rlc2NlbmRlbmNpYS1wcm9maWxlL2Rlc2NlbmRlbmNpYS1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxzQ0FBc0M7QUFDMUM7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0Qiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QiwyQkFBMkI7SUFDM0IsMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9kZXNjZW5kZW5jaWEtcHJvZmlsZS9kZXNjZW5kZW5jaWEtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwubmF2LXBpbGxzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbnVsLm5hdi1waWxscyAuYWN0aXZle1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IDBweCAjZmZmZmZmNGQ7XHJcbn1cclxuXHJcbiNkZXNjZW5kZW5jaWFUYWIge1xyXG4gICAgcGFkZGluZy10b3A6IDE2cHg7XHJcbn1cclxuLnRhYi1wYW5lIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTFlMmY7XHJcbn1cclxuXHJcbmxpLm5hdi1pdGVtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyYXktZGFyayk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgLW1zLWJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbiAgICAtby1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG59XHJcblxyXG5zcGFuIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5mb3RvIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbn1cclxuXHJcbi5maWNoYSB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgc2lsdmVyO1xyXG4gICAgcGFkZGluZy1yaWdodDogNHB4O1xyXG59XHJcblxyXG4uZmljaGE6aG92ZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgc2lsdmVyO1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggc2lsdmVyO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMzAwbXM7XHJcbn1cclxuXHJcbiNyZXN1bWVuIGxhYmVsIHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICBmb250LXNpemU6IDEuMWVtO1xyXG59XHJcblxyXG4jcmVzdW1lbiBzcGFuIHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICBmb250LXNpemU6IDEuMWVtO1xyXG59XHJcblxyXG4jcmVzdW1lbiAucm93IHtcclxuICAgIG1hcmdpbjogNXB4IDA7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { person } from 'src/app/models/person';\nimport { job } from 'src/app/models/schema';\nimport { globalVars } from 'src/app/services/globalVars';\n\n@Component({\n  selector: 'app-descendencia-profile',\n  templateUrl: './descendencia-profile.component.html',\n  styleUrls: ['./descendencia-profile.component.css']\n})\nexport class DescendenciaProfileComponent implements OnInit {\n\n  public person: person;\n  public asociados: job[];\n  urlGlobal = globalVars.filesDomain;\n  ListDepts: Location[] = [];\n  \n  constructor(private connexion: ConnexionService, private ruta: ActivatedRoute, private _router: Router) {\n    this.asociados = [];\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListDepts = reslo;\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.person = new person();\n    this.cargarDatos(this.ruta.snapshot.params['id']);\n    console.log(this.ruta.snapshot.params['id']);\n    \n  }\n\n  cargarDatos(id) {\n    let myCompanyName = JSON.parse(localStorage.getItem('userCompany'));\n    this.connexion.get_dataWithParamsOne<person>('personAssociated', '?userID=' + id + '&companyName=' + localStorage.getItem('actual')).subscribe(\n      regis => {\n        console.log('regisaa',regis);\n        this.person = regis[0];\n        this.asociados = regis[0].associated;\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n\n  verAsociado(event) {\n    this._router.navigate(['/descendenciaFicha/' + event]);\n    this.cargarDatos(event);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9pbnZpdGF0aW9uLWxpc3QvaW52aXRhdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { invitation } from 'src/app/models/invitation';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\n\n@Component({\n  selector: 'app-invitation-list',\n  templateUrl: './invitation-list.component.html',\n  styleUrls: ['./invitation-list.component.css']\n})\nexport class InvitationListComponent implements OnInit {\n\n  entries: number = 10;\n  status: number = 1;\n  isLoading: boolean = true;\n  temp = [];\n  rows;\n  activeRow: any;\n\n  constructor(private cnx: ConnexionService, private router: Router, public toastService: ToastService, public inLive: ChangeLiveService) { }\n\n  ngOnInit() {\n    //console.log(this.inLive.setEquipo());\n    this.obtenerDatos(this.status);\n  }\n\n  entriesChange($event) {\n    this.entries = $event.target.value;\n  }\n\n  statusChange($event) {\n    this.status = $event.target.value;\n    this.obtenerDatos(this.status);\n  }\n\n  obtenerDatos(state: number) {\n    this.isLoading = true;\n    this.cnx.get_dataWithParams<invitation>('invitation', '?estado=' + state + '&ciMain=' + localStorage.getItem('code').substr(1) + '&companyName=' + localStorage.getItem('actual')).subscribe(myAds => {\n      this.rows = myAds;\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1500);\n      this.temp = myAds.map((prop, key) => {\n        return {\n          ...prop,\n          id: key\n        };\n      });\n    });\n    this.isLoading = false;\n  }\n\n  filterTable($event) {\n    let val = $event.target.value.toString().toLowerCase();\n    this.temp = this.rows.filter(function (d) {\n      for (var key in d) {\n        if (d[key]) {\n          try {\n            if (d[key].toString().toLowerCase().indexOf(val) !== -1) {\n              return true;\n            }\n          } catch (error) {\n            console.log(d[key], error);\n          }\n        }\n      }\n      return false;\n    });\n  }\n\n  editFunction($event) {\n    $event.preventDefault();\n    this.router.navigate(['/invitacion/' + this.activeRow._id]);\n  }\n\n  deleteFunction($event) {\n    $event.preventDefault();\n    this.activeRow.estado = 0;\n    let nuevaInvitacion: invitation;\n    nuevaInvitacion = this.activeRow;\n    this.cnx.editObject<invitation>('invitationQuick', nuevaInvitacion).subscribe(resp => {\n      console.log('RESP: ', resp);\n      this.obtenerDatos(this.status);\n    });\n    //this.router.navigate(['/invitacion/' + this.activeRow._id]);\n  }\n\n  refreshFunction(event) {\n    event.preventDefault();\n    this.obtenerDatos(this.status);\n  }\n\n  exportFunction(event) {\n    event.preventDefault();\n    this.error('Espacio Insuficiente en el Disco', 'MLM Export');\n\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  onActivate(event) {\n    this.activeRow = event.row;\n  }\n}\n","export default \".procesa {\\r\\n    opacity: .5;\\r\\n}\\r\\n\\r\\n.noProcesa {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.procesando {\\r\\n    background-color: var(--pink);\\r\\n    width: 30em;\\r\\n    height: 100px;\\r\\n    position: absolute;\\r\\n    border-radius: 20px;\\r\\n    align-content: center;\\r\\n    margin: 0 auto;\\r\\n    box-shadow: 5px 5px 8px -5px white;\\r\\n    -moz-box-shadow: 5px 5px 8px -5px white;\\r\\n    -webkit-box-shadow: 5px 5px 8px -5px white;\\r\\n    top: 50%;\\r\\n    left: calc(50% - 15em);\\r\\n}\\r\\n\\r\\n.procesando > h3{\\r\\n    text-align: center;\\r\\n    padding-top: 20px;\\r\\n    margin: 0;\\r\\n    padding-bottom: 0;\\r\\n}\\r\\n\\r\\n.visible {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.invisible {\\r\\n    display: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtL3ZpZXdzL2ludml0YXRpb24vaW52aXRhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLFdBQVc7SUFDWCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsY0FBYztJQUNkLGtDQUFrQztJQUNsQyx1Q0FBdUM7SUFDdkMsMENBQTBDO0lBQzFDLFFBQVE7SUFDUixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLFNBQVM7SUFDVCxpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9pbnZpdGF0aW9uL2ludml0YXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9jZXNhIHtcclxuICAgIG9wYWNpdHk6IC41O1xyXG59XHJcblxyXG4ubm9Qcm9jZXNhIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuXHJcbi5wcm9jZXNhbmRvIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBpbmspO1xyXG4gICAgd2lkdGg6IDMwZW07XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIC1tb3otYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogNXB4IDVweCA4cHggLTVweCB3aGl0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogY2FsYyg1MCUgLSAxNWVtKTtcclxufVxyXG5cclxuLnByb2Nlc2FuZG8gPiBoM3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDA7XHJcbn1cclxuLnZpc2libGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5pbnZpc2libGUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { invitation } from \"src/app/models/invitation\";\nimport { job, address, field, Location, contact, profile } from 'src/app/models/schema';\nimport { ToastService } from 'src/app/services/toast.service';\nimport { person } from 'src/app/models/person';\nimport { isNullOrUndefined } from 'util';\nimport { TypeContext } from 'src/app/models/contextclases';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { ChangeLiveService } from 'src/app/services/change-live.service';\nimport { globalConfigurations } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-invitation',\n  templateUrl: './invitation.component.html',\n  styleUrls: ['./invitation.component.css']\n})\nexport class InvitationComponent implements OnInit {\n\n  invitation: invitation;\n  public job: job;\n  public contact: contact;\n  public profile: profile;\n  public address: address;\n  public field: field;\n  public esVisible: string = 'invisible';\n  public procesando: string = 'noProcesa';\n  public usuarioValido: boolean = true;\n  correct: boolean = false;\n\n  ListCompany: TypeContext[] = [];\n  ListRol: TypeContext[] = [];\n\n  ListLOC: Location[] = [];\n  ListLOCMain: Location[] = [];\n  listDepa: Location[] = [];\n  depasCI: Location[] = [];\n  listCiudad: Location[] = [];\n  listZona: Location[] = [];\n\n  isSaved: boolean = false;\n  equipoActual: string = '';\n\n\n  constructor(private connexion: ConnexionService, private _router: Router, private route: ActivatedRoute, public toastService: ToastService, public globalEquipo: GlobalService, public inLive: ChangeLiveService) {\n    this.invitation = new invitation();\n    this.job = new job();\n    this.contact = new contact();\n    this.profile = new profile();\n    this.address = new address();\n    //this.field = new field();\n    this.invitation.job = this.job;\n    this.isSaved = false;\n  }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    if (localStorage.getItem('code').substring(0, 1) == '0') {\n      alert('Su cuenta no está activada.\\nPor favor active su cuenta antes de invitar a una persona.');\n      this._router.navigate(['/profile']);\n    }\n\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListLOC = reslo;\n      this.ListLOCMain = reslo.filter(LOC => LOC.typecon_id == globalConfigurations.pais);\n      this.depasCI = this.ListLOC.filter(LOC => LOC.owner == globalConfigurations.ciudad);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.connexion.get_data<TypeContext>('typecontext').subscribe(reslo => {\n      this.ListCompany = reslo.filter(LOC => LOC.context_id == globalConfigurations.company);\n      this.ListRol = reslo.filter(LOC => LOC.context_id == globalConfigurations.rol);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n\n    this.invitation.contact = this.contact;\n    this.invitation.profile = this.profile;\n    this.contact.address = this.address;\n    this.address.country = '';\n    this.address.city = new field();\n    this.address.state = new field();\n    this.address.zone = new field();\n    //this.invitation.job.push(this.job);\n    if (this.route.snapshot.params['_id']) {\n      setTimeout(() => {\n        this.connexion.get_dataId<invitation>('invitationQuick', this.route.snapshot.params['_id']).subscribe(resp => {\n          this.invitation = resp;\n          this.editAddress(resp.contact.address);\n          this.editCompany(resp.job);\n        });\n      }, 500);\n    }\n    setTimeout(() => {\n      this.updateEmp(localStorage.getItem('actual'));\n    }, 1000);\n  }\n\n  editAddress(direccion: address) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == direccion.country);\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == direccion.state.id);\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == direccion.city.id);\n  }\n\n  editCompany(trabajo: job) {\n    this.ListCompany = this.ListCompany.filter(LOC => LOC._id == trabajo.companyName);\n    this.ListRol = this.ListRol.filter(LOC => LOC._id == trabajo.typeAccount);\n  }\n\n  verificarUsuario() {\n    this.esVisible = 'visible';\n    this.procesando = 'procesa';\n    if (this.invitation.profile.ci) {\n      this.connexion.get_dataWithParamsOne<person>('personInvitation', '?ci=' + this.invitation.profile.ci + '&equipo=' + localStorage.getItem('actual')).subscribe(myUser => {\n        if (myUser['id'] == 0) {\n          this.usuarioValido = false;\n          this.error(myUser['message'], 'Invitación a MLM')\n        } else {\n          this.usuarioValido = true;\n          this.success(myUser['message'], 'Invitación a MLM')\n        }\n        this.procesando = 'noProcesa';\n        this.esVisible = 'invisible';\n      });\n    } else {\n      this.error('CI vacío', 'MLM Invitación');\n    }\n\n  }\n\n  error(message: string, title: string) {\n    this.toastService.error(message, title);\n  }\n\n  success(message: string, title: string) {\n    this.toastService.success(message, title);\n  }\n\n  onRegister() {\n    /*if (this.invitado) {\n      for (let i = 0; i < this.invitado.associated.length; i++) {\n        const element = this.invitado.associated[i];\n        if ((element.companyName == this.job.companyName) && (element.typeAccount == this.job.typeAccount)) {\n          this.error('Esta persona ya cuenta con una invitación.', 'MLM Invitación');\n          return 0;\n        }\n      }\n    }*/\n    this.job.companyName = localStorage.getItem('actual');\n    this.esVisible = 'visible';\n    this.procesando = 'procesa';\n    this.isSaved = true;\n    this.agregarDireccion();\n    this.invitation.estado = 1;\n    this.invitation.job = { ciMain: localStorage.getItem('code').substr(1), companyName: this.job.companyName, typeAccount: this.job.typeAccount };\n    let fechaHora = new Date();\n    this.invitation.date = fechaHora;\n    let pass = this.generarCodigo();\n    this.invitation.codeInvitation = pass;\n    this.invitation.password = pass;\n    this.invitation.profile.photo = '/assets/img/noPicture.png';\n    this.connexion.addObject<invitation>('invitation', this.invitation).subscribe(\n      regis => {\n        this.procesando = 'noProcesa';\n        this.esVisible = 'invisible';\n        this.correct = true;\n        alert('La invitación fue realizada de manera correcta');\n        this._router.navigate(['/']);\n      },\n      error => {\n        this.isSaved = false;\n        var errorMessage = <any>error;\n        this.correct = false;\n        switch (errorMessage.status) {\n          case 400:\n            this.usuarioValido = false;\n            alert('El usuario ya fue invitado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            this.usuarioValido = true;\n            alert('Ocurrió un error al intentar invitar el usuario. \\n Por favor verifique los datos e intente nuevamente.');\n            break;\n        }\n      }\n    );\n  }\n\n  generarCodigo() {\n    return 'ABC123';\n  }\n\n  agregarDireccion() {\n    let local, paisMini, depaMini, cityMini, zonaMini;\n    let objDepartamento: field;\n    let objCiudad: field;\n    let objZona: field;\n\n    try {\n      local = $('#local')[0].value;\n      if (!isNullOrUndefined(local)) {\n        let separador = local.split(\": \", 2);\n        paisMini = separador[1];\n        depaMini = $('#depaMini')[0].value;\n      }\n      if (!isNullOrUndefined(depaMini)) {\n        let separador = depaMini.split(\": \", 2);\n        objDepartamento = {\n          id: separador[1],\n          valor: $('#depaMini')[0].options[separador[0]].text\n        }\n      }\n      cityMini = $('#cityMini')[0].value;\n      if (!isNullOrUndefined(cityMini)) {\n        let separador = cityMini.split(\": \", 2);\n        objCiudad = {\n          id: separador[1],\n          valor: $('#cityMini')[0].options[separador[0]].text\n        }\n      };\n\n      zonaMini = $('#zonaMini')[0].value;\n      if (!isNullOrUndefined(zonaMini)) {\n        let separador = zonaMini.split(\": \", 2);\n        objZona = {\n          id: separador[1],\n          valor: $('#zonaMini')[0].options[separador[0]].text\n        }\n      }\n      let objAddress: address = {\n        country: paisMini,\n        state: objDepartamento,\n        city: objCiudad,\n        zone: objZona,\n        geoData: this.invitation.contact.address.geoData,\n        especificLocation: this.invitation.contact.address.especificLocation\n      };\n      this.invitation.contact.address = objAddress;\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  updateSelectedValue(index) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectDepartamento(index) {\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectCiudad(index) {\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectEquipo(index) {\n    //this.ListCompany = this.ListCompany.filter(LOC => LOC._id == index);\n  }\n\n  updateSelectRol(index) {\n    //this.ListRol = this.ListRol.filter(LOC => LOC._id == index);\n  }\n\n  updateEmp(id: string) {\n    this.ListCompany.forEach(comp => {\n      if (id == comp._id) {\n        localStorage.setItem('actual', id);\n        this.equipoActual = comp.name;\n      }\n    });\n  }\n\n  recibeDeHijo(algo) {\n    console.log('ALGO PASO AQUI', algo)\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9tYWluL21haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { person } from 'src/app/models/person';\nimport { job } from 'src/app/models/schema';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  public person: person;\n  urlGlobal = globalVars.filesDomain;\n  \n  constructor(private connexion: ConnexionService) { }\n\n  ngOnInit() {\n    this.person = new person();\n    this.cargarDatos(localStorage.getItem('code').substring(1));\n  }\n\n  cargarDatos(id) {\n    this.connexion.get_dataId<person>('person', id).subscribe(\n      regis => {\n        localStorage.setItem('photo', regis.profile.photo.toString())\n        this.person = regis;\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar registrar el usuario. \\n Por favor verifique los datos e intente nuevamente.', errorMessage.status);\n            break;\n        }\n      }\n    );\n  }\n  \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { person } from \"../../../models/person\";\nimport { job, field, address, Location, contact, profile } from \"../../../models/schema\";\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { Router } from '@angular/router';\nimport { globalVars, globalConfigurations } from 'src/app/services/globalVars';\nimport { isNullOrUndefined } from 'util';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  perfil: person;\n  public job: job;\n  public contact: contact;\n  public profile: profile;\n  public address: address;\n\n  ListLOC: Location[] = [];\n  ListLOCMain: Location[] = [];\n  listDepa: Location[] = [];\n  listCiudad: Location[] = [];\n  listZona: Location[] = [];\n  depasCI: Location[] = [];\n\n  public path_server = 'userFiles/profile';\n  public mostrar = true;\n  public title_upload = '';\n  public urlImage = 'assets/img/noPicture.png';\n  urlGlobal = globalVars.filesDomain;\n\n  selectedFile: File[] = [];\n  scaledImage: Blob[] = [];\n  thumbImage: Blob[] = [];\n  datosImagen: any[] = [];\n  porcentajeUpload: string = '0';\n  nombreFile: string = '';\n  countFiles: number = 0;\n  reader: FileReader = new FileReader();\n  upload: boolean;\n\n  public muestraUP: string = 'muestra';\n  public muestraMIDDLE: string = 'noMuestra';\n  public muestraDOWN: string = 'noMuestra';\n  lang: string;\n\n  constructor(private connexion: ConnexionService, private _router: Router) {\n    this.job = new job();\n    this.contact = new contact();\n    this.profile = new profile();\n    this.address = new address();\n  }\n\n  ngOnInit() {\n    this.connexion.get_data<Location>('location').subscribe(reslo => {\n      this.ListLOC = reslo;\n      this.ListLOCMain = reslo.filter(LOC => LOC.typecon_id == globalConfigurations.pais);\n      this.depasCI = this.ListLOC.filter(LOC => LOC.owner == globalConfigurations.ciudad);\n    }, error => {\n      console.log('Hubo un problema al cargar datos. ' + error);\n    });\n    let codigo = localStorage.getItem('code').substr(1);\n    if (codigo) {\n      setTimeout(() => {\n        this.connexion.get_dataId<person>('person', codigo).subscribe(myUser => {\n          console.log(myUser);\n          this.perfil = myUser;\n          this.urlImage = myUser.profile.photo.toString();\n          this.listDepa = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.country);\n          this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.state.id);\n          this.listZona = this.ListLOC.filter(LOC => LOC.owner == myUser.contact.address.city.id);\n        });\n      }, 500);\n    }\n  }\n\n  recibeDeHijo(event: any) {\n    this.perfil.profile.photo = event.upload.url;\n    this.urlImage = event.upload.url;\n  }\n\n  onUpdate() {\n    this.connexion.editObject<person>('person', this.perfil).subscribe(\n      regis => {\n        localStorage.setItem('code', regis['estado'].toString() + regis['_id'].toString());\n        alert('Actualización de Usuario Satisfactorio.');\n        this._router.navigate(['/']);\n      },\n      error => {\n        var errorMessage = <any>error;\n        switch (errorMessage.status) {\n          case 400:\n            console.log('Usuario ya registrado. \\n Por favor intente nuevamente.');\n            break;\n\n          default:\n            console.log('Ocurrió un error al intentar actualizar el usuario. \\n Por favor verifique los datos e intente nuevamente.');\n            break;\n        }\n      }\n    );\n  }\n\n  agregarDireccion() {\n    let local, paisMini, depaMini, cityMini, zonaMini;\n    let objDepartamento: field;\n    let objCiudad: field;\n    let objZona: field;\n\n    try {\n      local = $('#local')[0].value;\n      if (!isNullOrUndefined(local)) {\n        let separador = local.split(\": \", 2);\n        paisMini = separador[1];\n        depaMini = $('#depaMini')[0].value;\n      }\n      if (!isNullOrUndefined(depaMini)) {\n        let separador = depaMini.split(\": \", 2);\n        objDepartamento = {\n          id: separador[1],\n          valor: $('#depaMini')[0].options[separador[0]].text\n        }\n      }\n      cityMini = $('#cityMini')[0].value;\n      if (!isNullOrUndefined(cityMini)) {\n        let separador = cityMini.split(\": \", 2);\n        objCiudad = {\n          id: separador[1],\n          valor: $('#cityMini')[0].options[separador[0]].text\n        }\n      };\n\n      zonaMini = $('#zonaMini')[0].value;\n      if (!isNullOrUndefined(zonaMini)) {\n        let separador = zonaMini.split(\": \", 2);\n        objZona = {\n          id: separador[1],\n          valor: $('#zonaMini')[0].options[separador[0]].text\n        }\n      }\n      let objAddress: address = {\n        country: paisMini,\n        state: objDepartamento,\n        city: objCiudad,\n        zone: objZona,\n        geoData: this.perfil.contact.address.geoData,\n        especificLocation: this.perfil.contact.address.especificLocation\n      };\n      this.perfil.contact.address = objAddress;\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n  editSeller(direccion: address) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == direccion.country);\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == direccion.state.id);\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == direccion.city.id);\n  }\n  // Method in component class\n  updateSelectedValue(index) {\n    this.listDepa = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectDepartamento(index) {\n    this.listCiudad = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n  updateSelectCiudad(index) {\n    this.listZona = this.ListLOC.filter(LOC => LOC.owner == index);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbS92aWV3cy9zdGFmZi1saXN0L3N0YWZmLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { jjob } from 'src/app/models/job';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { job } from 'src/app/models/schema';\n\n@Component({\n  selector: 'app-staff-list',\n  templateUrl: './staff-list.component.html',\n  styleUrls: ['./staff-list.component.css']\n})\nexport class StaffListComponent implements OnInit {\n\n  constructor(private cox: ConnexionService) { }\n\n  jjob: jjob;\n  job: job;\n\n  ngOnInit() {\n    this.jjob = new jjob();\n    this.job = new job();\n    this.job.ciMain = 'A';\n    this.job.companyName = 'B';\n    this.job.typeAccount = 'C';\n  }\n\n  guardar() {\n    console.log('ESTO ES JOB',this.job);\n    this.jjob.job = this.job;\n    this.cox.addObject<jjob>('job', this.jjob).subscribe(\n      res =>{ \n        console.log(res);\n      }\n    );\n  }\n\n}\n","export class Alert {\r\n    type: AlertType;\r\n    message: string;\r\n    title: string;\r\n    alertId: string;\r\n    keepAfterRouteChange: boolean;\r\n\r\n    constructor(init?: Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { job } from \"./schema\";\r\n\r\nexport class jjob {\r\n    job: job;\r\n}","import { job, profile, contact } from \"./schema\";\r\n\r\nexport class person {\r\n    _id: String;\r\n    user: String;\r\n    profile: profile;\r\n    contact?: contact;\r\n    associated?: job[];\r\n    estado: Number;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastComponent } from \"./toast/toast.component\";\nimport { ToastService } from \"../services/toast.service\";\nimport { UploadComponent } from './upload/upload.component';\n\n@NgModule({\n  declarations: [ToastComponent, UploadComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: [ToastService],\n  exports: [\n    ToastComponent, UploadComponent\n  ]\n})\nexport class ModulesModule { }\n","export default \".toastMain {\\r\\n    z-index: 2050!important;\\r\\n}\\r\\n\\r\\n.toast {\\r\\n    width: 400px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b2FzdC90b2FzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdG9hc3QvdG9hc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b2FzdE1haW4ge1xyXG4gICAgei1pbmRleDogMjA1MCFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi50b2FzdCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { ToastService } from \"../../services/toast.service\";\nimport { AlertType, Alert } from 'src/app/models/alert';\nimport { Subscription } from 'rxjs';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.css']\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n\n  @Input() id: string;\n\n  alerts: Alert[] = [];\n  subscription: Subscription;\n  message: string;\n  title: string;\n  tipoAlert: string;\n\n  constructor(private toastService: ToastService) { }\n\n  ngOnInit() {\n    this.subscription = this.toastService.onAlert(this.id)\n      .subscribe(alert => {\n        if (!alert.message) {\n          // clear alerts when an empty alert is received\n          this.alerts = [];\n          return;\n        }\n\n        // add alert to array\n        this.alerts.push(alert);\n        this.message = alert.message;\n        this.title = alert.title;\n        this.tipoAlert = this.cssClass(alert);\n        $('.toast').toast('show');\n      });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to avoid memory leaks\n    this.subscription.unsubscribe();\n  }\n\n  removeAlert(alert: Alert) {\n    // remove specified alert from array\n    this.alerts = this.alerts.filter(x => x !== alert);\n  }\n\n  cssClass(alert: Alert) {\n    if (!alert) {\n      return;\n    }\n\n    // return css class based on alert type\n    switch (alert.type) {\n      case AlertType.Success:\n        return 'alert alert-success';\n      case AlertType.Error:\n        return 'alert alert-danger';\n      case AlertType.Info:\n        return 'alert alert-info';\n      case AlertType.Warning:\n        return 'alert alert-warning';\n    }\n  }\n\n}","export default \"#divMainFile {\\r\\n    display: block;\\r\\n    overflow: hidden;\\r\\n    background-color: lightgrey;\\r\\n}\\r\\n\\r\\n.muestra {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.noMuestra {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.cardCompleto:hover>div {\\r\\n    background-color: rgba(0,0,0,.4);\\r\\n}\\r\\n\\r\\n.cardCompleto:hover * {\\r\\n    background-color: var(--color-primary-soft);\\r\\n    opacity: 0.9;\\r\\n    filter:  alpha(opacity=90);\\r\\n    -webkit-filter:  alpha(opacity=90);\\r\\n}\\r\\n\\r\\n.card-text {\\r\\n    opacity: 0.5;\\r\\n    filter:  alpha(opacity=50);\\r\\n    -webkit-filter:  alpha(opacity=50);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksMkNBQTJDO0lBQzNDLFlBQVk7SUFDWiwwQkFBMEI7SUFDMUIsa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixrQ0FBa0M7QUFDdEMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3VwbG9hZC91cGxvYWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNkaXZNYWluRmlsZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XHJcbn1cclxuXHJcbi5tdWVzdHJhIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4ubm9NdWVzdHJhIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5jYXJkQ29tcGxldG86aG92ZXI+ZGl2IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjQpO1xyXG59XHJcblxyXG4uY2FyZENvbXBsZXRvOmhvdmVyICoge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeS1zb2Z0KTtcclxuICAgIG9wYWNpdHk6IDAuOTtcclxuICAgIGZpbHRlcjogIGFscGhhKG9wYWNpdHk9OTApO1xyXG4gICAgLXdlYmtpdC1maWx0ZXI6ICBhbHBoYShvcGFjaXR5PTkwKTtcclxufVxyXG5cclxuLmNhcmQtdGV4dCB7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICBmaWx0ZXI6ICBhbHBoYShvcGFjaXR5PTUwKTtcclxuICAgIC13ZWJraXQtZmlsdGVyOiAgYWxwaGEob3BhY2l0eT01MCk7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { ConnexionService } from 'src/app/services/connexion.service';\nimport { globalVars, globalImagesSize } from 'src/app/services/globalVars';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  providers: [ConnexionService],\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\n\n  selectedFile: File[] = [];\n  scaledImage: Blob[] = [];\n  thumbImage: Blob[] = [];\n  datosImagen: any[] = [];\n  porcentajeUpload: string = '0';\n  nombreFile: string = '';\n  countFiles: number = 0;\n  reader: FileReader = new FileReader();\n  upload: boolean;\n\n  public muestraUP: string = 'muestra';\n  public muestraMIDDLE: string = 'noMuestra';\n  public muestraDOWN: string = 'noMuestra';\n  lang: string;\n\n  @Input('path') path_server: string;\n  @Input('mostrar') mostrar: boolean;\n  @Input('title') title_upload: string;\n  @Input('name') file_name: string;\n  @Output('') desdeElHijo = new EventEmitter();\n\n  constructor(private http: HttpClient) {\n    \n  }\n\n  ngOnInit() {\n    this.upload = false;\n  }\n\n  sizeCanva(canva: any, widthImg: number, heightImg: number, widthScale: number, heightScale: number) {\n    if (widthImg > heightImg) {\n      const scaleFactorWidth = widthScale / widthImg;\n      canva.width = widthScale;\n      canva.height = heightImg * scaleFactorWidth;\n    } else {\n      const scaleFactorHeight = heightScale / heightImg;\n      canva.width = widthImg * scaleFactorHeight;\n      canva.height = heightScale;\n    }\n    return canva;\n  }\n\n  newtoBlob() {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n      value: function (callback, type?, quality?) {\n        var dataURL = this.toDataURL(type, quality).split(',')[1];\n        setTimeout(function () {\n          let binStr = atob(dataURL);\n          let len = binStr.length;\n          let arr = new Uint8Array(len);\n          for (var i = 0; i < len; i++) {\n            arr[i] = binStr.charCodeAt(i);\n          }\n          callback(new Blob([arr], { type: type || 'image/jpeg' }));\n        });\n      }\n    });\n  }\n\n  onFileSelected(event) {\n    console.log('this.path_serve',this.path_server);\n    var myFiles = event.target.files;\n\n    if (this.upload == true) {\n      this.upload = false;\n      this.onCancel();\n    }\n\n    for (var i = 0, f; f = myFiles[i]; i++) {\n      this.selectedFile.push(f);\n      this.reader = new FileReader();\n      var self = this;\n      this.reader.onload = (function (theFile) {\n        return function (e) {\n          const miImg = new Image();\n          miImg.src = (e.target as any).result;\n          (miImg.onload = () => {\n            var canvaScale = document.createElement('canvas');\n            var canvaThumb = document.createElement('canvas');\n\n            var crc2dScale = <CanvasRenderingContext2D>canvaScale.getContext('2d');\n            var crc2dThumb = <CanvasRenderingContext2D>canvaThumb.getContext('2d');\n\n            canvaScale = self.sizeCanva(canvaScale, miImg.width, miImg.height, globalImagesSize.widthScale, globalImagesSize.heightScale);\n            canvaThumb = self.sizeCanva(canvaThumb, miImg.width, miImg.height, globalImagesSize.thumbWidth, globalImagesSize.thumbHeight);\n            if (miImg.width > miImg.height) {\n              crc2dScale.drawImage(miImg, 0, 0, globalImagesSize.widthScale, canvaScale.height);\n              crc2dThumb.drawImage(miImg, 0, 0, globalImagesSize.thumbWidth, canvaThumb.height);\n            } else {\n              crc2dScale.drawImage(miImg, 0, 0, canvaScale.width, globalImagesSize.heightScale);\n              crc2dThumb.drawImage(miImg, 0, 0, canvaThumb.width, globalImagesSize.thumbHeight);\n            }\n            var nuevaSRC = crc2dThumb.canvas.toDataURL('image/jpeg', 1);\n\n            if (!HTMLCanvasElement.prototype.toBlob) {\n              self.newtoBlob();\n            }\n            crc2dScale.canvas.toBlob(function (blob) {\n              self.scaledImage.push(blob);\n            },\n              'image/jpeg',\n              1\n            );\n            crc2dThumb.canvas.toBlob(function (blob) {\n              self.thumbImage.push(blob);\n            },\n              'image/jpeg',\n              1\n            );\n            self.datosImagen.push({ id: 'img' + theFile.name, src: nuevaSRC, 'dataName': theFile.name });\n          });\n        }\n      })(f);\n      \n      this.reader.readAsDataURL(f);\n    };\n\n    if (myFiles.length > 0) {\n      this.muestraUP = 'muestra';\n      this.muestraMIDDLE = 'muestra';\n      this.muestraDOWN = 'muestra';\n    }\n  }\n\n  onCancel() {\n    for (let i = 0; i < this.selectedFile.length; i++) {\n      this.selectedFile.pop();\n      this.datosImagen.pop();\n    }\n    this.datosImagen = [];\n    this.selectedFile = [];\n    this.reader.abort();\n    this.reader.EMPTY;\n    this.reader = new FileReader();\n    $(\"#fileUpload\").remove();\n    this.muestraMIDDLE = 'noMuestra';\n    this.muestraDOWN = 'noMuestra';\n  }\n\n  deleteFunction($event: any, name: string) {\n    $event.preventDefault();\n\n    if (confirm('¿ Está seguro que desea eliminar la imagen seleccionada. ?')) {\n      let encuentra = -10;\n      for (let i = 0; i < this.selectedFile.length; i++) {\n        if (this.selectedFile[i].name == name) {\n          encuentra = i;\n          if (this.selectedFile.length == 1) {\n            this.onCancel();\n            return;\n          }\n        }\n      }\n      if (encuentra >= 0) {\n        this.scaledImage.splice(encuentra, 1);\n        this.thumbImage.splice(encuentra, 1);\n        this.datosImagen.splice(encuentra, 1);\n        this.selectedFile.splice(encuentra, 1);\n      }\n    }\n  }\n\n  onUpload() {\n    if (!this.selectedFile) {\n      console.log('Archivo Eliminado');\n      return;\n    }\n    var head = new HttpHeaders(\n      {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    );\n    var dt = new Date();\n    \n    for (let index = 0; index < this.selectedFile.length; index++) {\n      let fdScale = new FormData();\n      let nuevoNombre = this.changeName(this.selectedFile[index].name);\n      try {\n        fdScale.append('file_name', nuevoNombre);\n        fdScale.append('file_path', this.path_server);\n        fdScale.append('file', this.scaledImage[index], 'Scale' + dt.getUTCMinutes().toString() + dt.getUTCSeconds().toString() + dt.getUTCMilliseconds().toString() + nuevoNombre);\n\n        this.http.post(globalVars.domain + '/api/v1/image/', fdScale, {\n          reportProgress: true,\n          observe: 'events',\n          headers: head\n        }).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.porcentajeUpload = Math.round(event.loaded / event.total * 100) + \"%\";\n            document.getElementById(\"pbFile\" + this.selectedFile[index].name).style.width = this.porcentajeUpload;\n            document.getElementById(\"pbFile\" + this.selectedFile[index].name).innerHTML = this.porcentajeUpload;\n          }\n        });\n\n      } catch (error) {\n        console.log('Error: ' + error)\n      }\n    }\n\n    for (let index = 0; index < this.selectedFile.length; index++) {\n      let fdThumb = new FormData();\n      let nuevoNombre = this.changeName(this.selectedFile[index].name);\n      try {\n        fdThumb.append('file_name', nuevoNombre);\n        fdThumb.append('file_path', this.path_server + '/thumbnail');\n        fdThumb.append('file', this.thumbImage[index], 'Thumb' + dt.getUTCMinutes().toString() + dt.getUTCSeconds().toString() + dt.getUTCMilliseconds().toString() + nuevoNombre);\n        this.http.post(globalVars.domain + '/api/v1/image/', fdThumb, {\n          observe: 'events',\n          headers: head\n        }).subscribe(event => {\n          if (event.type === HttpEventType.Response) {\n            this.desdeElHijo.emit({ upload: event.body });\n            this.muestraMIDDLE = 'noMuestra';\n            this.muestraDOWN = 'noMuestra';\n          }\n        });\n\n      } catch (error) {\n        console.log('Error: ' + error)\n      }\n    }\n    this.upload = true;\n  }\n\n  changeName(nombre: string) {\n    let replaceable = ['+', '-', '*', '`', '´', '[', ']', ' ', '{', '}', '(', ')'];\n    for (let i = 0; i < replaceable.length; i++) {\n      nombre = nombre.replace(replaceable[i], '_');\n    }\n    return nombre;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'expedido'\n})\nexport class ExpedidoPipe implements PipeTransform {\n\n  transform(value: string, args: any): any {\n    let resp;\n    args.forEach(depa => {\n      if (depa._id == value) {\n        resp = depa.acronym;\n      }\n    });\n    return resp;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nombre'\n})\nexport class NombrePipe implements PipeTransform {\n\n  transform(value: string, args: any): any {\n    let resp;\n    args.forEach(depa => {\n      if (depa._id == value) {\n        resp = depa.name;\n      }\n    });\n    return resp;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationStorageService {\n\n  constructor() { }\n\n  public isAuthenticated(): boolean {\n    //return this.getToken() == '1';\n    if (!this.getToken()) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  storeToken(token: string) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  getToken() {\n    return localStorage.getItem(\"userType\");\n  }\n\n  removeToken() {\n    return localStorage.removeItem(\"token\");\n  }\n}","import { Injectable } from '@angular/core';\nimport { AuthenticationStorageService } from './authentication-storage.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private authenticate: AuthenticationStorageService, private router: Router, private http: HttpClient) { }\n\n  canActivate(): boolean | Promise<boolean> {\n    if (!localStorage.getItem('userCi')) {\n      this.redirectLogin();\n    } else {\n      return true;\n    }\n    /*if (!this.authenticate.isAuthenticated()) {\n      localStorage.clear();\n      console.log('You are not authorised to view this page');\n      this.redirectLogin();\n      return false;\n    }\n    return true;*/\n  }\n\n  redirectLogin() {\n    this.router.navigate(['/sign/login']);\n  }\n}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeLiveService {\n  @Output() mySomeThing: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n\n  initChangeLive\n\n  setEquipo(equipoActual: string) {\n    localStorage.setItem('actual', equipoActual);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  public domain: string;\n  public equipo: string;\n\n  constructor() {\n    this.domain = \"http://localhost:3000\";\n    this.equipo = null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Alert, AlertType } from '../models/alert';\nimport { filter } from 'rxjs/operators';\n\ndeclare var $: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToastService {\n\n    private subject = new Subject<Alert>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert messages\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    // enable subscribing to alerts observable\n    onAlert(alertId?: string): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.alertId === alertId));\n    }\n\n    // convenience methods\n    success(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Success, alertId }));\n    }\n\n    error(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Error, alertId }));\n    }\n\n    info(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Info, alertId }));\n    }\n\n    warn(message: string, title: string, alertId?: string) {\n        this.alert(new Alert({ message, title, type: AlertType.Warning, alertId }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        this.keepAfterRouteChange = alert.keepAfterRouteChange;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(alertId?: string) {\n        this.subject.next(new Alert({ alertId }));\n    }\n}\n"],"sourceRoot":"webpack:///"}